// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2018.2
// Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

(* CORE_GENERATION_INFO="partb,hls_ip_2018_2,{HLS_INPUT_TYPE=cxx,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=0,HLS_INPUT_PART=xc7z020clg484-1,HLS_INPUT_CLOCK=10.000000,HLS_INPUT_ARCH=others,HLS_SYN_CLOCK=8.510000,HLS_SYN_LAT=-1,HLS_SYN_TPT=none,HLS_SYN_MEM=96,HLS_SYN_DSP=3,HLS_SYN_FF=1402,HLS_SYN_LUT=1413,HLS_VERSION=2018_2}" *)

module partb (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        A_address0,
        A_ce0,
        A_q0,
        B_address0,
        B_ce0,
        B_q0,
        C_address0,
        C_ce0,
        C_we0,
        C_d0,
        mA,
        nA,
        mB,
        nB,
        mC,
        nC
);

parameter    ap_ST_fsm_state1 = 18'd1;
parameter    ap_ST_fsm_state2 = 18'd2;
parameter    ap_ST_fsm_state3 = 18'd4;
parameter    ap_ST_fsm_state4 = 18'd8;
parameter    ap_ST_fsm_state5 = 18'd16;
parameter    ap_ST_fsm_state6 = 18'd32;
parameter    ap_ST_fsm_state7 = 18'd64;
parameter    ap_ST_fsm_state8 = 18'd128;
parameter    ap_ST_fsm_state9 = 18'd256;
parameter    ap_ST_fsm_state10 = 18'd512;
parameter    ap_ST_fsm_state11 = 18'd1024;
parameter    ap_ST_fsm_state12 = 18'd2048;
parameter    ap_ST_fsm_state13 = 18'd4096;
parameter    ap_ST_fsm_state14 = 18'd8192;
parameter    ap_ST_fsm_state15 = 18'd16384;
parameter    ap_ST_fsm_state16 = 18'd32768;
parameter    ap_ST_fsm_state17 = 18'd65536;
parameter    ap_ST_fsm_state18 = 18'd131072;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
output  [13:0] A_address0;
output   A_ce0;
input  [31:0] A_q0;
output  [13:0] B_address0;
output   B_ce0;
input  [31:0] B_q0;
output  [13:0] C_address0;
output   C_ce0;
output   C_we0;
output  [31:0] C_d0;
input  [31:0] mA;
input  [31:0] nA;
input  [31:0] mB;
input  [31:0] nB;
input  [31:0] mC;
input  [31:0] nC;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg A_ce0;
reg B_ce0;
reg C_ce0;
reg C_we0;

(* fsm_encoding = "none" *) reg   [17:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
wire   [14:0] tmp_1_fu_404_p1;
reg   [14:0] tmp_1_reg_767;
wire    ap_CS_fsm_state2;
wire   [37:0] next_mul_fu_408_p2;
reg   [37:0] next_mul_reg_772;
wire   [30:0] i_1_fu_423_p2;
reg   [30:0] i_1_reg_780;
wire   [30:0] j_1_fu_438_p2;
reg   [30:0] j_1_reg_788;
wire    ap_CS_fsm_state3;
wire   [63:0] tmp_24_cast_fu_453_p1;
reg   [63:0] tmp_24_cast_reg_793;
wire   [0:0] tmp_2_fu_433_p2;
wire   [14:0] tmp_4_fu_458_p1;
reg   [14:0] tmp_4_reg_803;
wire    ap_CS_fsm_state5;
wire   [37:0] next_mul2_fu_462_p2;
reg   [37:0] next_mul2_reg_808;
wire   [30:0] i_2_fu_477_p2;
reg   [30:0] i_2_reg_816;
wire   [30:0] j_2_fu_492_p2;
reg   [30:0] j_2_reg_824;
wire    ap_CS_fsm_state6;
wire   [63:0] tmp_26_cast_fu_507_p1;
reg   [63:0] tmp_26_cast_reg_829;
wire   [0:0] tmp_8_fu_487_p2;
wire   [14:0] tmp_7_fu_512_p1;
reg   [14:0] tmp_7_reg_839;
wire    ap_CS_fsm_state8;
wire   [37:0] next_mul4_fu_516_p2;
reg   [37:0] next_mul4_reg_844;
wire   [30:0] i_3_fu_531_p2;
reg   [30:0] i_3_reg_852;
wire   [30:0] j_3_fu_546_p2;
wire    ap_CS_fsm_state9;
wire   [14:0] tmp_15_fu_566_p1;
reg   [14:0] tmp_15_reg_865;
wire    ap_CS_fsm_state10;
wire   [37:0] next_mul8_fu_570_p2;
reg   [37:0] next_mul8_reg_871;
wire   [30:0] i_4_fu_585_p2;
reg   [30:0] i_4_reg_879;
wire   [30:0] j_4_fu_600_p2;
reg   [30:0] j_4_reg_887;
wire    ap_CS_fsm_state11;
wire   [14:0] tmp_23_fu_606_p1;
reg   [14:0] tmp_23_reg_892;
wire   [0:0] tmp_13_fu_595_p2;
reg   [13:0] C_i_addr_1_reg_897;
wire   [30:0] k_1_fu_633_p2;
reg   [30:0] k_1_reg_905;
wire    ap_CS_fsm_state12;
wire   [0:0] tmp_17_fu_628_p2;
wire   [37:0] next_mul6_fu_653_p2;
reg   [37:0] next_mul6_reg_915;
wire   [31:0] A_i_q0;
reg  signed [31:0] A_i_load_reg_925;
wire    ap_CS_fsm_state13;
wire   [31:0] B_i_q0;
reg  signed [31:0] B_i_load_reg_930;
wire   [31:0] tmp_20_fu_669_p2;
reg   [31:0] tmp_20_reg_935;
wire    ap_CS_fsm_state14;
wire   [31:0] sum_1_fu_673_p2;
wire    ap_CS_fsm_state15;
wire   [14:0] tmp_22_fu_678_p1;
reg   [14:0] tmp_22_reg_945;
wire    ap_CS_fsm_state16;
wire   [37:0] next_mul1_fu_682_p2;
reg   [37:0] next_mul1_reg_950;
wire   [30:0] i_5_fu_697_p2;
reg   [30:0] i_5_reg_958;
wire   [30:0] j_5_fu_712_p2;
reg   [30:0] j_5_reg_966;
wire    ap_CS_fsm_state17;
wire   [63:0] tmp_35_cast_fu_727_p1;
reg   [63:0] tmp_35_cast_reg_971;
wire   [0:0] tmp_18_fu_707_p2;
reg   [13:0] A_i_address0;
reg    A_i_ce0;
reg    A_i_we0;
reg   [13:0] B_i_address0;
reg    B_i_ce0;
reg    B_i_we0;
reg   [13:0] C_i_address0;
reg    C_i_ce0;
reg    C_i_we0;
reg   [31:0] C_i_d0;
wire   [31:0] C_i_q0;
reg   [30:0] i_reg_204;
reg   [37:0] phi_mul_reg_215;
reg   [30:0] j_reg_226;
wire    ap_CS_fsm_state4;
wire   [0:0] tmp_fu_418_p2;
reg   [30:0] i1_reg_237;
reg   [37:0] phi_mul1_reg_248;
reg   [30:0] j2_reg_259;
wire    ap_CS_fsm_state7;
wire   [0:0] tmp_3_fu_472_p2;
reg   [30:0] i3_reg_270;
wire   [0:0] tmp_6_fu_541_p2;
reg   [37:0] phi_mul3_reg_281;
reg   [30:0] j4_reg_292;
wire   [0:0] tmp_9_fu_526_p2;
reg   [30:0] i5_reg_303;
reg   [37:0] phi_mul7_reg_314;
reg   [30:0] j6_reg_325;
wire   [0:0] tmp_10_fu_580_p2;
reg   [31:0] sum_reg_336;
reg   [30:0] k_reg_349;
reg   [37:0] phi_mul5_reg_360;
reg   [30:0] i7_reg_371;
reg   [37:0] phi_mul9_reg_382;
reg   [30:0] j8_reg_393;
wire    ap_CS_fsm_state18;
wire   [0:0] tmp_14_fu_692_p2;
wire   [63:0] tmp_28_cast_fu_561_p1;
wire   [63:0] tmp_30_cast_fu_615_p1;
wire   [63:0] tmp_32_cast_fu_648_p1;
wire   [63:0] tmp_34_cast_fu_664_p1;
wire   [31:0] i_cast_fu_414_p1;
wire   [31:0] j_cast_fu_429_p1;
wire   [14:0] tmp_5_fu_444_p1;
wire   [14:0] tmp_s_fu_448_p2;
wire   [31:0] i1_cast_fu_468_p1;
wire   [31:0] j2_cast_fu_483_p1;
wire   [14:0] tmp_11_fu_498_p1;
wire   [14:0] tmp_12_fu_502_p2;
wire   [31:0] i3_cast_fu_522_p1;
wire   [31:0] j4_cast_fu_537_p1;
wire   [14:0] tmp_16_fu_552_p1;
wire   [14:0] tmp_19_fu_556_p2;
wire   [31:0] i5_cast_fu_576_p1;
wire   [31:0] j6_cast_fu_591_p1;
wire   [14:0] tmp_24_fu_610_p2;
wire   [31:0] k_cast_fu_624_p1;
wire   [14:0] tmp_26_fu_639_p1;
wire   [14:0] tmp_27_fu_643_p2;
wire   [14:0] tmp_25_fu_620_p1;
wire   [14:0] tmp_28_fu_659_p2;
wire   [31:0] i7_cast_fu_688_p1;
wire   [31:0] j8_cast_fu_703_p1;
wire   [14:0] tmp_29_fu_718_p1;
wire   [14:0] tmp_30_fu_722_p2;
reg   [17:0] ap_NS_fsm;

// power-on initialization
initial begin
#0 ap_CS_fsm = 18'd1;
end

partb_A_i #(
    .DataWidth( 32 ),
    .AddressRange( 10000 ),
    .AddressWidth( 14 ))
A_i_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(A_i_address0),
    .ce0(A_i_ce0),
    .we0(A_i_we0),
    .d0(A_q0),
    .q0(A_i_q0)
);

partb_A_i #(
    .DataWidth( 32 ),
    .AddressRange( 10000 ),
    .AddressWidth( 14 ))
B_i_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(B_i_address0),
    .ce0(B_i_ce0),
    .we0(B_i_we0),
    .d0(B_q0),
    .q0(B_i_q0)
);

partb_A_i #(
    .DataWidth( 32 ),
    .AddressRange( 10000 ),
    .AddressWidth( 14 ))
C_i_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(C_i_address0),
    .ce0(C_i_ce0),
    .we0(C_i_we0),
    .d0(C_i_d0),
    .q0(C_i_q0)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (((tmp_fu_418_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2))) begin
        i1_reg_237 <= 31'd0;
    end else if (((1'b1 == ap_CS_fsm_state6) & (tmp_8_fu_487_p2 == 1'd0))) begin
        i1_reg_237 <= i_2_reg_816;
    end
end

always @ (posedge ap_clk) begin
    if (((tmp_3_fu_472_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state5))) begin
        i3_reg_270 <= 31'd0;
    end else if (((tmp_6_fu_541_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state9))) begin
        i3_reg_270 <= i_3_reg_852;
    end
end

always @ (posedge ap_clk) begin
    if (((tmp_9_fu_526_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state8))) begin
        i5_reg_303 <= 31'd0;
    end else if (((1'b1 == ap_CS_fsm_state11) & (tmp_13_fu_595_p2 == 1'd0))) begin
        i5_reg_303 <= i_4_reg_879;
    end
end

always @ (posedge ap_clk) begin
    if (((tmp_10_fu_580_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state10))) begin
        i7_reg_371 <= 31'd0;
    end else if (((tmp_18_fu_707_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state17))) begin
        i7_reg_371 <= i_5_reg_958;
    end
end

always @ (posedge ap_clk) begin
    if (((tmp_2_fu_433_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state3))) begin
        i_reg_204 <= i_1_reg_780;
    end else if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        i_reg_204 <= 31'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((tmp_3_fu_472_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state5))) begin
        j2_reg_259 <= 31'd0;
    end else if ((1'b1 == ap_CS_fsm_state7)) begin
        j2_reg_259 <= j_2_reg_824;
    end
end

always @ (posedge ap_clk) begin
    if (((tmp_9_fu_526_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state8))) begin
        j4_reg_292 <= 31'd0;
    end else if (((tmp_6_fu_541_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state9))) begin
        j4_reg_292 <= j_3_fu_546_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state12) & (tmp_17_fu_628_p2 == 1'd0))) begin
        j6_reg_325 <= j_4_reg_887;
    end else if (((tmp_10_fu_580_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state10))) begin
        j6_reg_325 <= 31'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((tmp_14_fu_692_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state16))) begin
        j8_reg_393 <= 31'd0;
    end else if ((1'b1 == ap_CS_fsm_state18)) begin
        j8_reg_393 <= j_5_reg_966;
    end
end

always @ (posedge ap_clk) begin
    if (((tmp_fu_418_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state2))) begin
        j_reg_226 <= 31'd0;
    end else if ((1'b1 == ap_CS_fsm_state4)) begin
        j_reg_226 <= j_1_reg_788;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state15)) begin
        k_reg_349 <= k_1_reg_905;
    end else if (((tmp_13_fu_595_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state11))) begin
        k_reg_349 <= 31'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((tmp_fu_418_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2))) begin
        phi_mul1_reg_248 <= 38'd0;
    end else if (((1'b1 == ap_CS_fsm_state6) & (tmp_8_fu_487_p2 == 1'd0))) begin
        phi_mul1_reg_248 <= next_mul2_reg_808;
    end
end

always @ (posedge ap_clk) begin
    if (((tmp_3_fu_472_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state5))) begin
        phi_mul3_reg_281 <= 38'd0;
    end else if (((tmp_6_fu_541_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state9))) begin
        phi_mul3_reg_281 <= next_mul4_reg_844;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state15)) begin
        phi_mul5_reg_360 <= next_mul6_reg_915;
    end else if (((tmp_13_fu_595_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state11))) begin
        phi_mul5_reg_360 <= 38'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((tmp_9_fu_526_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state8))) begin
        phi_mul7_reg_314 <= 38'd0;
    end else if (((1'b1 == ap_CS_fsm_state11) & (tmp_13_fu_595_p2 == 1'd0))) begin
        phi_mul7_reg_314 <= next_mul8_reg_871;
    end
end

always @ (posedge ap_clk) begin
    if (((tmp_10_fu_580_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state10))) begin
        phi_mul9_reg_382 <= 38'd0;
    end else if (((tmp_18_fu_707_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state17))) begin
        phi_mul9_reg_382 <= next_mul1_reg_950;
    end
end

always @ (posedge ap_clk) begin
    if (((tmp_2_fu_433_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state3))) begin
        phi_mul_reg_215 <= next_mul_reg_772;
    end else if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        phi_mul_reg_215 <= 38'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state15)) begin
        sum_reg_336 <= sum_1_fu_673_p2;
    end else if (((tmp_13_fu_595_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state11))) begin
        sum_reg_336 <= 32'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state13)) begin
        A_i_load_reg_925 <= A_i_q0;
        B_i_load_reg_930 <= B_i_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((tmp_13_fu_595_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state11))) begin
        C_i_addr_1_reg_897 <= tmp_30_cast_fu_615_p1;
        tmp_23_reg_892 <= tmp_23_fu_606_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        i_1_reg_780 <= i_1_fu_423_p2;
        next_mul_reg_772 <= next_mul_fu_408_p2;
        tmp_1_reg_767 <= tmp_1_fu_404_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state5)) begin
        i_2_reg_816 <= i_2_fu_477_p2;
        next_mul2_reg_808 <= next_mul2_fu_462_p2;
        tmp_4_reg_803 <= tmp_4_fu_458_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state8)) begin
        i_3_reg_852 <= i_3_fu_531_p2;
        next_mul4_reg_844 <= next_mul4_fu_516_p2;
        tmp_7_reg_839 <= tmp_7_fu_512_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state10)) begin
        i_4_reg_879 <= i_4_fu_585_p2;
        next_mul8_reg_871 <= next_mul8_fu_570_p2;
        tmp_15_reg_865 <= tmp_15_fu_566_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state16)) begin
        i_5_reg_958 <= i_5_fu_697_p2;
        next_mul1_reg_950 <= next_mul1_fu_682_p2;
        tmp_22_reg_945 <= tmp_22_fu_678_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        j_1_reg_788 <= j_1_fu_438_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state6)) begin
        j_2_reg_824 <= j_2_fu_492_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state11)) begin
        j_4_reg_887 <= j_4_fu_600_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state17)) begin
        j_5_reg_966 <= j_5_fu_712_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state12)) begin
        k_1_reg_905 <= k_1_fu_633_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((tmp_17_fu_628_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state12))) begin
        next_mul6_reg_915 <= next_mul6_fu_653_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state14)) begin
        tmp_20_reg_935 <= tmp_20_fu_669_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((tmp_2_fu_433_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state3))) begin
        tmp_24_cast_reg_793[14 : 0] <= tmp_24_cast_fu_453_p1[14 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((tmp_8_fu_487_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state6))) begin
        tmp_26_cast_reg_829[14 : 0] <= tmp_26_cast_fu_507_p1[14 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((tmp_18_fu_707_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state17))) begin
        tmp_35_cast_reg_971[14 : 0] <= tmp_35_cast_fu_727_p1[14 : 0];
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        A_ce0 = 1'b1;
    end else begin
        A_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state12)) begin
        A_i_address0 = tmp_32_cast_fu_648_p1;
    end else if ((1'b1 == ap_CS_fsm_state4)) begin
        A_i_address0 = tmp_24_cast_reg_793;
    end else begin
        A_i_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state4) | (1'b1 == ap_CS_fsm_state12))) begin
        A_i_ce0 = 1'b1;
    end else begin
        A_i_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state4)) begin
        A_i_we0 = 1'b1;
    end else begin
        A_i_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state6)) begin
        B_ce0 = 1'b1;
    end else begin
        B_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state12)) begin
        B_i_address0 = tmp_34_cast_fu_664_p1;
    end else if ((1'b1 == ap_CS_fsm_state7)) begin
        B_i_address0 = tmp_26_cast_reg_829;
    end else begin
        B_i_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state7) | (1'b1 == ap_CS_fsm_state12))) begin
        B_i_ce0 = 1'b1;
    end else begin
        B_i_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state7)) begin
        B_i_we0 = 1'b1;
    end else begin
        B_i_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state18)) begin
        C_ce0 = 1'b1;
    end else begin
        C_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state17)) begin
        C_i_address0 = tmp_35_cast_fu_727_p1;
    end else if ((1'b1 == ap_CS_fsm_state12)) begin
        C_i_address0 = C_i_addr_1_reg_897;
    end else if ((1'b1 == ap_CS_fsm_state9)) begin
        C_i_address0 = tmp_28_cast_fu_561_p1;
    end else begin
        C_i_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state17) | (1'b1 == ap_CS_fsm_state12) | (1'b1 == ap_CS_fsm_state9))) begin
        C_i_ce0 = 1'b1;
    end else begin
        C_i_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state12)) begin
        C_i_d0 = sum_reg_336;
    end else if ((1'b1 == ap_CS_fsm_state9)) begin
        C_i_d0 = 32'd0;
    end else begin
        C_i_d0 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_CS_fsm_state12) & (tmp_17_fu_628_p2 == 1'd0)) | ((tmp_6_fu_541_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state9)))) begin
        C_i_we0 = 1'b1;
    end else begin
        C_i_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state18)) begin
        C_we0 = 1'b1;
    end else begin
        C_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((tmp_14_fu_692_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state16))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((tmp_14_fu_692_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state16))) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            if (((tmp_fu_418_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2))) begin
                ap_NS_fsm = ap_ST_fsm_state5;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state3;
            end
        end
        ap_ST_fsm_state3 : begin
            if (((tmp_2_fu_433_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state3))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state4;
            end
        end
        ap_ST_fsm_state4 : begin
            ap_NS_fsm = ap_ST_fsm_state3;
        end
        ap_ST_fsm_state5 : begin
            if (((tmp_3_fu_472_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state5))) begin
                ap_NS_fsm = ap_ST_fsm_state8;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state6;
            end
        end
        ap_ST_fsm_state6 : begin
            if (((1'b1 == ap_CS_fsm_state6) & (tmp_8_fu_487_p2 == 1'd0))) begin
                ap_NS_fsm = ap_ST_fsm_state5;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state7;
            end
        end
        ap_ST_fsm_state7 : begin
            ap_NS_fsm = ap_ST_fsm_state6;
        end
        ap_ST_fsm_state8 : begin
            if (((tmp_9_fu_526_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state8))) begin
                ap_NS_fsm = ap_ST_fsm_state10;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state9;
            end
        end
        ap_ST_fsm_state9 : begin
            if (((tmp_6_fu_541_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state9))) begin
                ap_NS_fsm = ap_ST_fsm_state8;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state9;
            end
        end
        ap_ST_fsm_state10 : begin
            if (((tmp_10_fu_580_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state10))) begin
                ap_NS_fsm = ap_ST_fsm_state16;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state11;
            end
        end
        ap_ST_fsm_state11 : begin
            if (((1'b1 == ap_CS_fsm_state11) & (tmp_13_fu_595_p2 == 1'd0))) begin
                ap_NS_fsm = ap_ST_fsm_state10;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state12;
            end
        end
        ap_ST_fsm_state12 : begin
            if (((1'b1 == ap_CS_fsm_state12) & (tmp_17_fu_628_p2 == 1'd0))) begin
                ap_NS_fsm = ap_ST_fsm_state11;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state13;
            end
        end
        ap_ST_fsm_state13 : begin
            ap_NS_fsm = ap_ST_fsm_state14;
        end
        ap_ST_fsm_state14 : begin
            ap_NS_fsm = ap_ST_fsm_state15;
        end
        ap_ST_fsm_state15 : begin
            ap_NS_fsm = ap_ST_fsm_state12;
        end
        ap_ST_fsm_state16 : begin
            if (((tmp_14_fu_692_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state16))) begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state17;
            end
        end
        ap_ST_fsm_state17 : begin
            if (((tmp_18_fu_707_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state17))) begin
                ap_NS_fsm = ap_ST_fsm_state16;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state18;
            end
        end
        ap_ST_fsm_state18 : begin
            ap_NS_fsm = ap_ST_fsm_state17;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign A_address0 = tmp_24_cast_fu_453_p1;

assign B_address0 = tmp_26_cast_fu_507_p1;

assign C_address0 = tmp_35_cast_reg_971;

assign C_d0 = C_i_q0;

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state10 = ap_CS_fsm[32'd9];

assign ap_CS_fsm_state11 = ap_CS_fsm[32'd10];

assign ap_CS_fsm_state12 = ap_CS_fsm[32'd11];

assign ap_CS_fsm_state13 = ap_CS_fsm[32'd12];

assign ap_CS_fsm_state14 = ap_CS_fsm[32'd13];

assign ap_CS_fsm_state15 = ap_CS_fsm[32'd14];

assign ap_CS_fsm_state16 = ap_CS_fsm[32'd15];

assign ap_CS_fsm_state17 = ap_CS_fsm[32'd16];

assign ap_CS_fsm_state18 = ap_CS_fsm[32'd17];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state3 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_state4 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_state5 = ap_CS_fsm[32'd4];

assign ap_CS_fsm_state6 = ap_CS_fsm[32'd5];

assign ap_CS_fsm_state7 = ap_CS_fsm[32'd6];

assign ap_CS_fsm_state8 = ap_CS_fsm[32'd7];

assign ap_CS_fsm_state9 = ap_CS_fsm[32'd8];

assign i1_cast_fu_468_p1 = i1_reg_237;

assign i3_cast_fu_522_p1 = i3_reg_270;

assign i5_cast_fu_576_p1 = i5_reg_303;

assign i7_cast_fu_688_p1 = i7_reg_371;

assign i_1_fu_423_p2 = (31'd1 + i_reg_204);

assign i_2_fu_477_p2 = (31'd1 + i1_reg_237);

assign i_3_fu_531_p2 = (31'd1 + i3_reg_270);

assign i_4_fu_585_p2 = (31'd1 + i5_reg_303);

assign i_5_fu_697_p2 = (31'd1 + i7_reg_371);

assign i_cast_fu_414_p1 = i_reg_204;

assign j2_cast_fu_483_p1 = j2_reg_259;

assign j4_cast_fu_537_p1 = j4_reg_292;

assign j6_cast_fu_591_p1 = j6_reg_325;

assign j8_cast_fu_703_p1 = j8_reg_393;

assign j_1_fu_438_p2 = (j_reg_226 + 31'd1);

assign j_2_fu_492_p2 = (j2_reg_259 + 31'd1);

assign j_3_fu_546_p2 = (j4_reg_292 + 31'd1);

assign j_4_fu_600_p2 = (j6_reg_325 + 31'd1);

assign j_5_fu_712_p2 = (j8_reg_393 + 31'd1);

assign j_cast_fu_429_p1 = j_reg_226;

assign k_1_fu_633_p2 = (31'd1 + k_reg_349);

assign k_cast_fu_624_p1 = k_reg_349;

assign next_mul1_fu_682_p2 = (38'd100 + phi_mul9_reg_382);

assign next_mul2_fu_462_p2 = (38'd100 + phi_mul1_reg_248);

assign next_mul4_fu_516_p2 = (38'd100 + phi_mul3_reg_281);

assign next_mul6_fu_653_p2 = (38'd100 + phi_mul5_reg_360);

assign next_mul8_fu_570_p2 = (38'd100 + phi_mul7_reg_314);

assign next_mul_fu_408_p2 = (38'd100 + phi_mul_reg_215);

assign sum_1_fu_673_p2 = (sum_reg_336 + tmp_20_reg_935);

assign tmp_10_fu_580_p2 = (($signed(i5_cast_fu_576_p1) < $signed(mC)) ? 1'b1 : 1'b0);

assign tmp_11_fu_498_p1 = j2_reg_259[14:0];

assign tmp_12_fu_502_p2 = (tmp_4_reg_803 + tmp_11_fu_498_p1);

assign tmp_13_fu_595_p2 = (($signed(j6_cast_fu_591_p1) < $signed(nC)) ? 1'b1 : 1'b0);

assign tmp_14_fu_692_p2 = (($signed(i7_cast_fu_688_p1) < $signed(mC)) ? 1'b1 : 1'b0);

assign tmp_15_fu_566_p1 = phi_mul7_reg_314[14:0];

assign tmp_16_fu_552_p1 = j4_reg_292[14:0];

assign tmp_17_fu_628_p2 = (($signed(k_cast_fu_624_p1) < $signed(nA)) ? 1'b1 : 1'b0);

assign tmp_18_fu_707_p2 = (($signed(j8_cast_fu_703_p1) < $signed(nC)) ? 1'b1 : 1'b0);

assign tmp_19_fu_556_p2 = (tmp_7_reg_839 + tmp_16_fu_552_p1);

assign tmp_1_fu_404_p1 = phi_mul_reg_215[14:0];

assign tmp_20_fu_669_p2 = ($signed(B_i_load_reg_930) * $signed(A_i_load_reg_925));

assign tmp_22_fu_678_p1 = phi_mul9_reg_382[14:0];

assign tmp_23_fu_606_p1 = j6_reg_325[14:0];

assign tmp_24_cast_fu_453_p1 = tmp_s_fu_448_p2;

assign tmp_24_fu_610_p2 = (tmp_15_reg_865 + tmp_23_fu_606_p1);

assign tmp_25_fu_620_p1 = phi_mul5_reg_360[14:0];

assign tmp_26_cast_fu_507_p1 = tmp_12_fu_502_p2;

assign tmp_26_fu_639_p1 = k_reg_349[14:0];

assign tmp_27_fu_643_p2 = (tmp_15_reg_865 + tmp_26_fu_639_p1);

assign tmp_28_cast_fu_561_p1 = tmp_19_fu_556_p2;

assign tmp_28_fu_659_p2 = (tmp_25_fu_620_p1 + tmp_23_reg_892);

assign tmp_29_fu_718_p1 = j8_reg_393[14:0];

assign tmp_2_fu_433_p2 = (($signed(j_cast_fu_429_p1) < $signed(nA)) ? 1'b1 : 1'b0);

assign tmp_30_cast_fu_615_p1 = tmp_24_fu_610_p2;

assign tmp_30_fu_722_p2 = (tmp_22_reg_945 + tmp_29_fu_718_p1);

assign tmp_32_cast_fu_648_p1 = tmp_27_fu_643_p2;

assign tmp_34_cast_fu_664_p1 = tmp_28_fu_659_p2;

assign tmp_35_cast_fu_727_p1 = tmp_30_fu_722_p2;

assign tmp_3_fu_472_p2 = (($signed(i1_cast_fu_468_p1) < $signed(mB)) ? 1'b1 : 1'b0);

assign tmp_4_fu_458_p1 = phi_mul1_reg_248[14:0];

assign tmp_5_fu_444_p1 = j_reg_226[14:0];

assign tmp_6_fu_541_p2 = (($signed(j4_cast_fu_537_p1) < $signed(nC)) ? 1'b1 : 1'b0);

assign tmp_7_fu_512_p1 = phi_mul3_reg_281[14:0];

assign tmp_8_fu_487_p2 = (($signed(j2_cast_fu_483_p1) < $signed(nB)) ? 1'b1 : 1'b0);

assign tmp_9_fu_526_p2 = (($signed(i3_cast_fu_522_p1) < $signed(mC)) ? 1'b1 : 1'b0);

assign tmp_fu_418_p2 = (($signed(i_cast_fu_414_p1) < $signed(mA)) ? 1'b1 : 1'b0);

assign tmp_s_fu_448_p2 = (tmp_1_reg_767 + tmp_5_fu_444_p1);

always @ (posedge ap_clk) begin
    tmp_24_cast_reg_793[63:15] <= 49'b0000000000000000000000000000000000000000000000000;
    tmp_26_cast_reg_829[63:15] <= 49'b0000000000000000000000000000000000000000000000000;
    tmp_35_cast_reg_971[63:15] <= 49'b0000000000000000000000000000000000000000000000000;
end

endmodule //partb
