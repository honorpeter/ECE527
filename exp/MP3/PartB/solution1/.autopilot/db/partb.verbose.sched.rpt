

================================================================
== Vivado HLS Report for 'partb'
================================================================
* Date:           Fri Oct  5 00:37:56 2018

* Version:        2018.2 (Build 2258646 on Thu Jun 14 20:25:20 MDT 2018)
* Project:        PartB
* Solution:       solution1
* Product family: zynq
* Target device:  xc7z020clg484-1


================================================================
== Performance Estimates
================================================================
+ Timing (ns): 
    * Summary: 
    +--------+-------+----------+------------+
    |  Clock | Target| Estimated| Uncertainty|
    +--------+-------+----------+------------+
    |ap_clk  |  10.00|     8.510|        1.25|
    +--------+-------+----------+------------+

+ Latency (clock cycles): 
    * Summary: 
    +-----+-----+-----+-----+---------+
    |  Latency  |  Interval | Pipeline|
    | min | max | min | max |   Type  |
    +-----+-----+-----+-----+---------+
    |    ?|    ?|    ?|    ?|   none  |
    +-----+-----+-----+-----+---------+

    + Detail: 
        * Instance: 
        N/A

        * Loop: 
        +------------------+-----+-----+----------+-----------+-----------+------+----------+
        |                  |  Latency  | Iteration|  Initiation Interval  | Trip |          |
        |     Loop Name    | min | max |  Latency |  achieved |   target  | Count| Pipelined|
        +------------------+-----+-----+----------+-----------+-----------+------+----------+
        |- Loop 1          |    ?|    ?|         ?|          -|          -|     ?|    no    |
        | + Loop 1.1       |    ?|    ?|         2|          -|          -|     ?|    no    |
        |- Loop 2          |    ?|    ?|         ?|          -|          -|     ?|    no    |
        | + Loop 2.1       |    ?|    ?|         2|          -|          -|     ?|    no    |
        |- Loop 3          |    ?|    ?|         ?|          -|          -|     ?|    no    |
        | + Loop 3.1       |    ?|    ?|         1|          -|          -|     ?|    no    |
        |- for_c_row       |    ?|    ?|         ?|          -|          -|     ?|    no    |
        | + for_c_col      |    ?|    ?|         ?|          -|          -|     ?|    no    |
        |  ++ for_c_col.1  |    ?|    ?|         4|          -|          -|     ?|    no    |
        |- Loop 5          |    ?|    ?|         ?|          -|          -|     ?|    no    |
        | + Loop 5.1       |    ?|    ?|         2|          -|          -|     ?|    no    |
        +------------------+-----+-----+----------+-----------+-----------+------+----------+

============================================================
+ Verbose Summary: Synthesis Manager
============================================================
InlineROM: 1
ExposeGlobal: 0
============================================================
+ Verbose Summary: CDFG Model
============================================================
IsTopModel: 1
ResetActiveHigh: 1
IsCombinational: 0
IsDatapathOnly: 0
HasWiredReturn: 1
HasMFsm: 0
HasVarLatency: 1
IsPipeline: 0
IsRtlPipelined: 0
IsInstanceOverlapped: 0
IsDontTouch: 0
HasImplIP: 0
IsGatedGlobalClock: 0


============================================================
+ Verbose Summary: Schedule
============================================================
* Number of FSM states : 18
* Pipeline : 0
* Dataflow Pipeline: 0

* FSM state transitions: 
1 --> 
	2  / true
2 --> 
	3  / (tmp)
	5  / (!tmp)
3 --> 
	4  / (tmp_2)
	2  / (!tmp_2)
4 --> 
	3  / true
5 --> 
	6  / (tmp_3)
	8  / (!tmp_3)
6 --> 
	7  / (tmp_8)
	5  / (!tmp_8)
7 --> 
	6  / true
8 --> 
	9  / (tmp_9)
	10  / (!tmp_9)
9 --> 
	9  / (tmp_6)
	8  / (!tmp_6)
10 --> 
	11  / (tmp_10)
	16  / (!tmp_10)
11 --> 
	12  / (tmp_13)
	10  / (!tmp_13)
12 --> 
	13  / (tmp_17)
	11  / (!tmp_17)
13 --> 
	14  / true
14 --> 
	15  / true
15 --> 
	12  / true
16 --> 
	17  / (tmp_14)
17 --> 
	18  / (tmp_18)
	16  / (!tmp_18)
18 --> 
	17  / true

* FSM state operations: 

State 1 <SV = 0> <Delay = 1.76>
ST_1 : Operation 19 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecBitsMap([10000 x i32]* %A) nounwind, !map !7"   --->   Operation 19 'specbitsmap' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 20 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecBitsMap([10000 x i32]* %B) nounwind, !map !13"   --->   Operation 20 'specbitsmap' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 21 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecBitsMap([10000 x i32]* %C) nounwind, !map !17"   --->   Operation 21 'specbitsmap' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 22 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecBitsMap(i32 %mA) nounwind, !map !21"   --->   Operation 22 'specbitsmap' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 23 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecBitsMap(i32 %nA) nounwind, !map !27"   --->   Operation 23 'specbitsmap' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 24 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecBitsMap(i32 %mB) nounwind, !map !31"   --->   Operation 24 'specbitsmap' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 25 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecBitsMap(i32 %nB) nounwind, !map !35"   --->   Operation 25 'specbitsmap' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 26 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecBitsMap(i32 %mC) nounwind, !map !39"   --->   Operation 26 'specbitsmap' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 27 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecBitsMap(i32 %nC) nounwind, !map !43"   --->   Operation 27 'specbitsmap' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 28 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecTopModule([6 x i8]* @partb_str) nounwind"   --->   Operation 28 'spectopmodule' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 29 [1/1] (0.00ns)   --->   "%nC_read = call i32 @_ssdm_op_Read.ap_auto.i32(i32 %nC) nounwind"   --->   Operation 29 'read' 'nC_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 30 [1/1] (0.00ns)   --->   "%mC_read = call i32 @_ssdm_op_Read.ap_auto.i32(i32 %mC) nounwind"   --->   Operation 30 'read' 'mC_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 31 [1/1] (0.00ns)   --->   "%nB_read = call i32 @_ssdm_op_Read.ap_auto.i32(i32 %nB) nounwind"   --->   Operation 31 'read' 'nB_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 32 [1/1] (0.00ns)   --->   "%mB_read = call i32 @_ssdm_op_Read.ap_auto.i32(i32 %mB) nounwind"   --->   Operation 32 'read' 'mB_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 33 [1/1] (0.00ns)   --->   "%nA_read = call i32 @_ssdm_op_Read.ap_auto.i32(i32 %nA) nounwind"   --->   Operation 33 'read' 'nA_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 34 [1/1] (0.00ns)   --->   "%mA_read = call i32 @_ssdm_op_Read.ap_auto.i32(i32 %mA) nounwind"   --->   Operation 34 'read' 'mA_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 35 [1/1] (0.00ns)   --->   "%A_i = alloca [10000 x i32], align 4" [PartB/partb.cpp:7]   --->   Operation 35 'alloca' 'A_i' <Predicate = true> <Delay = 0.00> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 10000> <RAM>
ST_1 : Operation 36 [1/1] (0.00ns)   --->   "%B_i = alloca [10000 x i32], align 4" [PartB/partb.cpp:8]   --->   Operation 36 'alloca' 'B_i' <Predicate = true> <Delay = 0.00> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 10000> <RAM>
ST_1 : Operation 37 [1/1] (0.00ns)   --->   "%C_i = alloca [10000 x i32], align 4" [PartB/partb.cpp:9]   --->   Operation 37 'alloca' 'C_i' <Predicate = true> <Delay = 0.00> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 10000> <RAM>
ST_1 : Operation 38 [1/1] (1.76ns)   --->   "br label %.loopexit" [PartB/partb.cpp:11]   --->   Operation 38 'br' <Predicate = true> <Delay = 1.76>

State 2 <SV = 1> <Delay = 2.79>
ST_2 : Operation 39 [1/1] (0.00ns)   --->   "%i = phi i31 [ 0, %0 ], [ %i_1, %.loopexit.loopexit ]"   --->   Operation 39 'phi' 'i' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 40 [1/1] (0.00ns)   --->   "%phi_mul = phi i38 [ 0, %0 ], [ %next_mul, %.loopexit.loopexit ]"   --->   Operation 40 'phi' 'phi_mul' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 41 [1/1] (0.00ns)   --->   "%tmp_1 = trunc i38 %phi_mul to i15"   --->   Operation 41 'trunc' 'tmp_1' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 42 [1/1] (2.79ns)   --->   "%next_mul = add i38 100, %phi_mul"   --->   Operation 42 'add' 'next_mul' <Predicate = true> <Delay = 2.79> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.94> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 43 [1/1] (0.00ns)   --->   "%i_cast = zext i31 %i to i32" [PartB/partb.cpp:11]   --->   Operation 43 'zext' 'i_cast' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 44 [1/1] (2.47ns)   --->   "%tmp = icmp slt i32 %i_cast, %mA_read" [PartB/partb.cpp:11]   --->   Operation 44 'icmp' 'tmp' <Predicate = true> <Delay = 2.47> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 2.47> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 45 [1/1] (2.52ns)   --->   "%i_1 = add i31 1, %i" [PartB/partb.cpp:11]   --->   Operation 45 'add' 'i_1' <Predicate = true> <Delay = 2.52> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.94> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 46 [1/1] (0.00ns)   --->   "br i1 %tmp, label %.preheader7.preheader, label %.preheader6.preheader" [PartB/partb.cpp:11]   --->   Operation 46 'br' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 47 [1/1] (1.76ns)   --->   "br label %.preheader7" [PartB/partb.cpp:13]   --->   Operation 47 'br' <Predicate = (tmp)> <Delay = 1.76>
ST_2 : Operation 48 [1/1] (1.76ns)   --->   "br label %.preheader6"   --->   Operation 48 'br' <Predicate = (!tmp)> <Delay = 1.76>

State 3 <SV = 2> <Delay = 5.19>
ST_3 : Operation 49 [1/1] (0.00ns)   --->   "%j = phi i31 [ %j_1, %1 ], [ 0, %.preheader7.preheader ]"   --->   Operation 49 'phi' 'j' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 50 [1/1] (0.00ns)   --->   "%j_cast = zext i31 %j to i32" [PartB/partb.cpp:13]   --->   Operation 50 'zext' 'j_cast' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 51 [1/1] (2.47ns)   --->   "%tmp_2 = icmp slt i32 %j_cast, %nA_read" [PartB/partb.cpp:13]   --->   Operation 51 'icmp' 'tmp_2' <Predicate = true> <Delay = 2.47> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 2.47> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 52 [1/1] (2.52ns)   --->   "%j_1 = add i31 %j, 1" [PartB/partb.cpp:13]   --->   Operation 52 'add' 'j_1' <Predicate = true> <Delay = 2.52> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.94> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 53 [1/1] (0.00ns)   --->   "br i1 %tmp_2, label %1, label %.loopexit.loopexit" [PartB/partb.cpp:13]   --->   Operation 53 'br' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 54 [1/1] (0.00ns)   --->   "%tmp_5 = trunc i31 %j to i15" [PartB/partb.cpp:15]   --->   Operation 54 'trunc' 'tmp_5' <Predicate = (tmp_2)> <Delay = 0.00>
ST_3 : Operation 55 [1/1] (1.94ns)   --->   "%tmp_s = add i15 %tmp_1, %tmp_5" [PartB/partb.cpp:15]   --->   Operation 55 'add' 'tmp_s' <Predicate = (tmp_2)> <Delay = 1.94> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.94> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 56 [1/1] (0.00ns)   --->   "%tmp_24_cast = zext i15 %tmp_s to i64" [PartB/partb.cpp:15]   --->   Operation 56 'zext' 'tmp_24_cast' <Predicate = (tmp_2)> <Delay = 0.00>
ST_3 : Operation 57 [1/1] (0.00ns)   --->   "%A_addr = getelementptr [10000 x i32]* %A, i64 0, i64 %tmp_24_cast" [PartB/partb.cpp:15]   --->   Operation 57 'getelementptr' 'A_addr' <Predicate = (tmp_2)> <Delay = 0.00>
ST_3 : Operation 58 [2/2] (3.25ns)   --->   "%A_load = load i32* %A_addr, align 4" [PartB/partb.cpp:15]   --->   Operation 58 'load' 'A_load' <Predicate = (tmp_2)> <Delay = 3.25> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 10000> <RAM>
ST_3 : Operation 59 [1/1] (0.00ns)   --->   "br label %.loopexit"   --->   Operation 59 'br' <Predicate = (!tmp_2)> <Delay = 0.00>

State 4 <SV = 3> <Delay = 6.50>
ST_4 : Operation 60 [1/1] (0.00ns)   --->   "%A_i_addr = getelementptr [10000 x i32]* %A_i, i64 0, i64 %tmp_24_cast" [PartB/partb.cpp:15]   --->   Operation 60 'getelementptr' 'A_i_addr' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 61 [1/2] (3.25ns)   --->   "%A_load = load i32* %A_addr, align 4" [PartB/partb.cpp:15]   --->   Operation 61 'load' 'A_load' <Predicate = true> <Delay = 3.25> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 10000> <RAM>
ST_4 : Operation 62 [1/1] (3.25ns)   --->   "store i32 %A_load, i32* %A_i_addr, align 4" [PartB/partb.cpp:15]   --->   Operation 62 'store' <Predicate = true> <Delay = 3.25> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 10000> <RAM>
ST_4 : Operation 63 [1/1] (0.00ns)   --->   "br label %.preheader7" [PartB/partb.cpp:13]   --->   Operation 63 'br' <Predicate = true> <Delay = 0.00>

State 5 <SV = 2> <Delay = 2.79>
ST_5 : Operation 64 [1/1] (0.00ns)   --->   "%i1 = phi i31 [ %i_2, %.preheader6.loopexit ], [ 0, %.preheader6.preheader ]"   --->   Operation 64 'phi' 'i1' <Predicate = true> <Delay = 0.00>
ST_5 : Operation 65 [1/1] (0.00ns)   --->   "%phi_mul1 = phi i38 [ %next_mul2, %.preheader6.loopexit ], [ 0, %.preheader6.preheader ]"   --->   Operation 65 'phi' 'phi_mul1' <Predicate = true> <Delay = 0.00>
ST_5 : Operation 66 [1/1] (0.00ns)   --->   "%tmp_4 = trunc i38 %phi_mul1 to i15"   --->   Operation 66 'trunc' 'tmp_4' <Predicate = true> <Delay = 0.00>
ST_5 : Operation 67 [1/1] (2.79ns)   --->   "%next_mul2 = add i38 100, %phi_mul1"   --->   Operation 67 'add' 'next_mul2' <Predicate = true> <Delay = 2.79> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.94> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_5 : Operation 68 [1/1] (0.00ns)   --->   "%i1_cast = zext i31 %i1 to i32" [PartB/partb.cpp:19]   --->   Operation 68 'zext' 'i1_cast' <Predicate = true> <Delay = 0.00>
ST_5 : Operation 69 [1/1] (2.47ns)   --->   "%tmp_3 = icmp slt i32 %i1_cast, %mB_read" [PartB/partb.cpp:19]   --->   Operation 69 'icmp' 'tmp_3' <Predicate = true> <Delay = 2.47> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 2.47> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_5 : Operation 70 [1/1] (2.52ns)   --->   "%i_2 = add i31 1, %i1" [PartB/partb.cpp:19]   --->   Operation 70 'add' 'i_2' <Predicate = true> <Delay = 2.52> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.94> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_5 : Operation 71 [1/1] (0.00ns)   --->   "br i1 %tmp_3, label %.preheader5.preheader, label %.preheader4.preheader" [PartB/partb.cpp:19]   --->   Operation 71 'br' <Predicate = true> <Delay = 0.00>
ST_5 : Operation 72 [1/1] (1.76ns)   --->   "br label %.preheader5" [PartB/partb.cpp:21]   --->   Operation 72 'br' <Predicate = (tmp_3)> <Delay = 1.76>
ST_5 : Operation 73 [1/1] (1.76ns)   --->   "br label %.preheader4"   --->   Operation 73 'br' <Predicate = (!tmp_3)> <Delay = 1.76>

State 6 <SV = 3> <Delay = 5.19>
ST_6 : Operation 74 [1/1] (0.00ns)   --->   "%j2 = phi i31 [ %j_2, %2 ], [ 0, %.preheader5.preheader ]"   --->   Operation 74 'phi' 'j2' <Predicate = true> <Delay = 0.00>
ST_6 : Operation 75 [1/1] (0.00ns)   --->   "%j2_cast = zext i31 %j2 to i32" [PartB/partb.cpp:21]   --->   Operation 75 'zext' 'j2_cast' <Predicate = true> <Delay = 0.00>
ST_6 : Operation 76 [1/1] (2.47ns)   --->   "%tmp_8 = icmp slt i32 %j2_cast, %nB_read" [PartB/partb.cpp:21]   --->   Operation 76 'icmp' 'tmp_8' <Predicate = true> <Delay = 2.47> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 2.47> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_6 : Operation 77 [1/1] (2.52ns)   --->   "%j_2 = add i31 %j2, 1" [PartB/partb.cpp:21]   --->   Operation 77 'add' 'j_2' <Predicate = true> <Delay = 2.52> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.94> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_6 : Operation 78 [1/1] (0.00ns)   --->   "br i1 %tmp_8, label %2, label %.preheader6.loopexit" [PartB/partb.cpp:21]   --->   Operation 78 'br' <Predicate = true> <Delay = 0.00>
ST_6 : Operation 79 [1/1] (0.00ns)   --->   "%tmp_11 = trunc i31 %j2 to i15" [PartB/partb.cpp:23]   --->   Operation 79 'trunc' 'tmp_11' <Predicate = (tmp_8)> <Delay = 0.00>
ST_6 : Operation 80 [1/1] (1.94ns)   --->   "%tmp_12 = add i15 %tmp_4, %tmp_11" [PartB/partb.cpp:23]   --->   Operation 80 'add' 'tmp_12' <Predicate = (tmp_8)> <Delay = 1.94> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.94> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_6 : Operation 81 [1/1] (0.00ns)   --->   "%tmp_26_cast = zext i15 %tmp_12 to i64" [PartB/partb.cpp:23]   --->   Operation 81 'zext' 'tmp_26_cast' <Predicate = (tmp_8)> <Delay = 0.00>
ST_6 : Operation 82 [1/1] (0.00ns)   --->   "%B_addr = getelementptr [10000 x i32]* %B, i64 0, i64 %tmp_26_cast" [PartB/partb.cpp:23]   --->   Operation 82 'getelementptr' 'B_addr' <Predicate = (tmp_8)> <Delay = 0.00>
ST_6 : Operation 83 [2/2] (3.25ns)   --->   "%B_load = load i32* %B_addr, align 4" [PartB/partb.cpp:23]   --->   Operation 83 'load' 'B_load' <Predicate = (tmp_8)> <Delay = 3.25> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 10000> <RAM>
ST_6 : Operation 84 [1/1] (0.00ns)   --->   "br label %.preheader6"   --->   Operation 84 'br' <Predicate = (!tmp_8)> <Delay = 0.00>

State 7 <SV = 4> <Delay = 6.50>
ST_7 : Operation 85 [1/1] (0.00ns)   --->   "%B_i_addr = getelementptr [10000 x i32]* %B_i, i64 0, i64 %tmp_26_cast" [PartB/partb.cpp:23]   --->   Operation 85 'getelementptr' 'B_i_addr' <Predicate = true> <Delay = 0.00>
ST_7 : Operation 86 [1/2] (3.25ns)   --->   "%B_load = load i32* %B_addr, align 4" [PartB/partb.cpp:23]   --->   Operation 86 'load' 'B_load' <Predicate = true> <Delay = 3.25> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 10000> <RAM>
ST_7 : Operation 87 [1/1] (3.25ns)   --->   "store i32 %B_load, i32* %B_i_addr, align 4" [PartB/partb.cpp:23]   --->   Operation 87 'store' <Predicate = true> <Delay = 3.25> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 10000> <RAM>
ST_7 : Operation 88 [1/1] (0.00ns)   --->   "br label %.preheader5" [PartB/partb.cpp:21]   --->   Operation 88 'br' <Predicate = true> <Delay = 0.00>

State 8 <SV = 3> <Delay = 2.79>
ST_8 : Operation 89 [1/1] (0.00ns)   --->   "%i3 = phi i31 [ %i_3, %.preheader4.loopexit ], [ 0, %.preheader4.preheader ]"   --->   Operation 89 'phi' 'i3' <Predicate = true> <Delay = 0.00>
ST_8 : Operation 90 [1/1] (0.00ns)   --->   "%phi_mul3 = phi i38 [ %next_mul4, %.preheader4.loopexit ], [ 0, %.preheader4.preheader ]"   --->   Operation 90 'phi' 'phi_mul3' <Predicate = true> <Delay = 0.00>
ST_8 : Operation 91 [1/1] (0.00ns)   --->   "%tmp_7 = trunc i38 %phi_mul3 to i15"   --->   Operation 91 'trunc' 'tmp_7' <Predicate = true> <Delay = 0.00>
ST_8 : Operation 92 [1/1] (2.79ns)   --->   "%next_mul4 = add i38 100, %phi_mul3"   --->   Operation 92 'add' 'next_mul4' <Predicate = true> <Delay = 2.79> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.94> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_8 : Operation 93 [1/1] (0.00ns)   --->   "%i3_cast = zext i31 %i3 to i32" [PartB/partb.cpp:27]   --->   Operation 93 'zext' 'i3_cast' <Predicate = true> <Delay = 0.00>
ST_8 : Operation 94 [1/1] (2.47ns)   --->   "%tmp_9 = icmp slt i32 %i3_cast, %mC_read" [PartB/partb.cpp:27]   --->   Operation 94 'icmp' 'tmp_9' <Predicate = true> <Delay = 2.47> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 2.47> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_8 : Operation 95 [1/1] (2.52ns)   --->   "%i_3 = add i31 1, %i3" [PartB/partb.cpp:27]   --->   Operation 95 'add' 'i_3' <Predicate = true> <Delay = 2.52> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.94> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_8 : Operation 96 [1/1] (0.00ns)   --->   "br i1 %tmp_9, label %.preheader3.preheader, label %.preheader2.preheader" [PartB/partb.cpp:27]   --->   Operation 96 'br' <Predicate = true> <Delay = 0.00>
ST_8 : Operation 97 [1/1] (1.76ns)   --->   "br label %.preheader3" [PartB/partb.cpp:29]   --->   Operation 97 'br' <Predicate = (tmp_9)> <Delay = 1.76>
ST_8 : Operation 98 [1/1] (1.76ns)   --->   "br label %.preheader2"   --->   Operation 98 'br' <Predicate = (!tmp_9)> <Delay = 1.76>

State 9 <SV = 4> <Delay = 5.19>
ST_9 : Operation 99 [1/1] (0.00ns)   --->   "%j4 = phi i31 [ %j_3, %3 ], [ 0, %.preheader3.preheader ]"   --->   Operation 99 'phi' 'j4' <Predicate = true> <Delay = 0.00>
ST_9 : Operation 100 [1/1] (0.00ns)   --->   "%j4_cast = zext i31 %j4 to i32" [PartB/partb.cpp:29]   --->   Operation 100 'zext' 'j4_cast' <Predicate = true> <Delay = 0.00>
ST_9 : Operation 101 [1/1] (2.47ns)   --->   "%tmp_6 = icmp slt i32 %j4_cast, %nC_read" [PartB/partb.cpp:29]   --->   Operation 101 'icmp' 'tmp_6' <Predicate = true> <Delay = 2.47> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 2.47> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_9 : Operation 102 [1/1] (2.52ns)   --->   "%j_3 = add i31 %j4, 1" [PartB/partb.cpp:29]   --->   Operation 102 'add' 'j_3' <Predicate = true> <Delay = 2.52> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.94> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_9 : Operation 103 [1/1] (0.00ns)   --->   "br i1 %tmp_6, label %3, label %.preheader4.loopexit" [PartB/partb.cpp:29]   --->   Operation 103 'br' <Predicate = true> <Delay = 0.00>
ST_9 : Operation 104 [1/1] (0.00ns)   --->   "%tmp_16 = trunc i31 %j4 to i15" [PartB/partb.cpp:31]   --->   Operation 104 'trunc' 'tmp_16' <Predicate = (tmp_6)> <Delay = 0.00>
ST_9 : Operation 105 [1/1] (1.94ns)   --->   "%tmp_19 = add i15 %tmp_7, %tmp_16" [PartB/partb.cpp:31]   --->   Operation 105 'add' 'tmp_19' <Predicate = (tmp_6)> <Delay = 1.94> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.94> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_9 : Operation 106 [1/1] (0.00ns)   --->   "%tmp_28_cast = zext i15 %tmp_19 to i64" [PartB/partb.cpp:31]   --->   Operation 106 'zext' 'tmp_28_cast' <Predicate = (tmp_6)> <Delay = 0.00>
ST_9 : Operation 107 [1/1] (0.00ns)   --->   "%C_i_addr = getelementptr [10000 x i32]* %C_i, i64 0, i64 %tmp_28_cast" [PartB/partb.cpp:31]   --->   Operation 107 'getelementptr' 'C_i_addr' <Predicate = (tmp_6)> <Delay = 0.00>
ST_9 : Operation 108 [1/1] (3.25ns)   --->   "store i32 0, i32* %C_i_addr, align 4" [PartB/partb.cpp:31]   --->   Operation 108 'store' <Predicate = (tmp_6)> <Delay = 3.25> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 10000> <RAM>
ST_9 : Operation 109 [1/1] (0.00ns)   --->   "br label %.preheader3" [PartB/partb.cpp:29]   --->   Operation 109 'br' <Predicate = (tmp_6)> <Delay = 0.00>
ST_9 : Operation 110 [1/1] (0.00ns)   --->   "br label %.preheader4"   --->   Operation 110 'br' <Predicate = (!tmp_6)> <Delay = 0.00>

State 10 <SV = 4> <Delay = 2.79>
ST_10 : Operation 111 [1/1] (0.00ns)   --->   "%i5 = phi i31 [ %i_4, %10 ], [ 0, %.preheader2.preheader ]"   --->   Operation 111 'phi' 'i5' <Predicate = true> <Delay = 0.00>
ST_10 : Operation 112 [1/1] (0.00ns)   --->   "%phi_mul7 = phi i38 [ %next_mul8, %10 ], [ 0, %.preheader2.preheader ]"   --->   Operation 112 'phi' 'phi_mul7' <Predicate = true> <Delay = 0.00>
ST_10 : Operation 113 [1/1] (0.00ns)   --->   "%tmp_15 = trunc i38 %phi_mul7 to i15"   --->   Operation 113 'trunc' 'tmp_15' <Predicate = true> <Delay = 0.00>
ST_10 : Operation 114 [1/1] (2.79ns)   --->   "%next_mul8 = add i38 100, %phi_mul7"   --->   Operation 114 'add' 'next_mul8' <Predicate = true> <Delay = 2.79> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.94> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_10 : Operation 115 [1/1] (0.00ns)   --->   "%i5_cast = zext i31 %i5 to i32" [PartB/partb.cpp:36]   --->   Operation 115 'zext' 'i5_cast' <Predicate = true> <Delay = 0.00>
ST_10 : Operation 116 [1/1] (2.47ns)   --->   "%tmp_10 = icmp slt i32 %i5_cast, %mC_read" [PartB/partb.cpp:36]   --->   Operation 116 'icmp' 'tmp_10' <Predicate = true> <Delay = 2.47> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 2.47> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_10 : Operation 117 [1/1] (2.52ns)   --->   "%i_4 = add i31 1, %i5" [PartB/partb.cpp:36]   --->   Operation 117 'add' 'i_4' <Predicate = true> <Delay = 2.52> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.94> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_10 : Operation 118 [1/1] (0.00ns)   --->   "br i1 %tmp_10, label %4, label %.preheader1.preheader" [PartB/partb.cpp:36]   --->   Operation 118 'br' <Predicate = true> <Delay = 0.00>
ST_10 : Operation 119 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecLoopName([10 x i8]* @p_str) nounwind" [PartB/partb.cpp:37]   --->   Operation 119 'specloopname' <Predicate = (tmp_10)> <Delay = 0.00>
ST_10 : Operation 120 [1/1] (0.00ns)   --->   "%tmp_21 = call i32 (...)* @_ssdm_op_SpecRegionBegin([10 x i8]* @p_str) nounwind" [PartB/partb.cpp:37]   --->   Operation 120 'specregionbegin' 'tmp_21' <Predicate = (tmp_10)> <Delay = 0.00>
ST_10 : Operation 121 [1/1] (1.76ns)   --->   "br label %5" [PartB/partb.cpp:38]   --->   Operation 121 'br' <Predicate = (tmp_10)> <Delay = 1.76>
ST_10 : Operation 122 [1/1] (1.76ns)   --->   "br label %.preheader1"   --->   Operation 122 'br' <Predicate = (!tmp_10)> <Delay = 1.76>

State 11 <SV = 5> <Delay = 2.52>
ST_11 : Operation 123 [1/1] (0.00ns)   --->   "%j6 = phi i31 [ 0, %4 ], [ %j_4, %9 ]"   --->   Operation 123 'phi' 'j6' <Predicate = true> <Delay = 0.00>
ST_11 : Operation 124 [1/1] (0.00ns)   --->   "%j6_cast = zext i31 %j6 to i32" [PartB/partb.cpp:38]   --->   Operation 124 'zext' 'j6_cast' <Predicate = true> <Delay = 0.00>
ST_11 : Operation 125 [1/1] (2.47ns)   --->   "%tmp_13 = icmp slt i32 %j6_cast, %nC_read" [PartB/partb.cpp:38]   --->   Operation 125 'icmp' 'tmp_13' <Predicate = true> <Delay = 2.47> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 2.47> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_11 : Operation 126 [1/1] (2.52ns)   --->   "%j_4 = add i31 %j6, 1" [PartB/partb.cpp:38]   --->   Operation 126 'add' 'j_4' <Predicate = true> <Delay = 2.52> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.94> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_11 : Operation 127 [1/1] (0.00ns)   --->   "br i1 %tmp_13, label %6, label %10" [PartB/partb.cpp:38]   --->   Operation 127 'br' <Predicate = true> <Delay = 0.00>
ST_11 : Operation 128 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecLoopName([10 x i8]* @p_str1) nounwind" [PartB/partb.cpp:39]   --->   Operation 128 'specloopname' <Predicate = (tmp_13)> <Delay = 0.00>
ST_11 : Operation 129 [1/1] (0.00ns)   --->   "%tmp_23 = trunc i31 %j6 to i15" [PartB/partb.cpp:45]   --->   Operation 129 'trunc' 'tmp_23' <Predicate = (tmp_13)> <Delay = 0.00>
ST_11 : Operation 130 [1/1] (1.94ns)   --->   "%tmp_24 = add i15 %tmp_15, %tmp_23" [PartB/partb.cpp:45]   --->   Operation 130 'add' 'tmp_24' <Predicate = (tmp_13)> <Delay = 1.94> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.94> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_11 : Operation 131 [1/1] (0.00ns)   --->   "%tmp_30_cast = zext i15 %tmp_24 to i64" [PartB/partb.cpp:45]   --->   Operation 131 'zext' 'tmp_30_cast' <Predicate = (tmp_13)> <Delay = 0.00>
ST_11 : Operation 132 [1/1] (0.00ns)   --->   "%C_i_addr_1 = getelementptr [10000 x i32]* %C_i, i64 0, i64 %tmp_30_cast" [PartB/partb.cpp:45]   --->   Operation 132 'getelementptr' 'C_i_addr_1' <Predicate = (tmp_13)> <Delay = 0.00>
ST_11 : Operation 133 [1/1] (1.76ns)   --->   "br label %7" [PartB/partb.cpp:41]   --->   Operation 133 'br' <Predicate = (tmp_13)> <Delay = 1.76>
ST_11 : Operation 134 [1/1] (0.00ns)   --->   "%empty = call i32 (...)* @_ssdm_op_SpecRegionEnd([10 x i8]* @p_str, i32 %tmp_21) nounwind" [PartB/partb.cpp:47]   --->   Operation 134 'specregionend' 'empty' <Predicate = (!tmp_13)> <Delay = 0.00>
ST_11 : Operation 135 [1/1] (0.00ns)   --->   "br label %.preheader2" [PartB/partb.cpp:36]   --->   Operation 135 'br' <Predicate = (!tmp_13)> <Delay = 0.00>

State 12 <SV = 6> <Delay = 5.19>
ST_12 : Operation 136 [1/1] (0.00ns)   --->   "%sum = phi i32 [ 0, %6 ], [ %sum_1, %8 ]"   --->   Operation 136 'phi' 'sum' <Predicate = true> <Delay = 0.00>
ST_12 : Operation 137 [1/1] (0.00ns)   --->   "%k = phi i31 [ 0, %6 ], [ %k_1, %8 ]"   --->   Operation 137 'phi' 'k' <Predicate = true> <Delay = 0.00>
ST_12 : Operation 138 [1/1] (0.00ns)   --->   "%phi_mul5 = phi i38 [ 0, %6 ], [ %next_mul6, %8 ]"   --->   Operation 138 'phi' 'phi_mul5' <Predicate = true> <Delay = 0.00>
ST_12 : Operation 139 [1/1] (0.00ns)   --->   "%tmp_25 = trunc i38 %phi_mul5 to i15" [PartB/partb.cpp:41]   --->   Operation 139 'trunc' 'tmp_25' <Predicate = true> <Delay = 0.00>
ST_12 : Operation 140 [1/1] (0.00ns)   --->   "%k_cast = zext i31 %k to i32" [PartB/partb.cpp:41]   --->   Operation 140 'zext' 'k_cast' <Predicate = true> <Delay = 0.00>
ST_12 : Operation 141 [1/1] (2.47ns)   --->   "%tmp_17 = icmp slt i32 %k_cast, %nA_read" [PartB/partb.cpp:41]   --->   Operation 141 'icmp' 'tmp_17' <Predicate = true> <Delay = 2.47> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 2.47> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_12 : Operation 142 [1/1] (2.52ns)   --->   "%k_1 = add i31 1, %k" [PartB/partb.cpp:41]   --->   Operation 142 'add' 'k_1' <Predicate = true> <Delay = 2.52> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.94> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_12 : Operation 143 [1/1] (0.00ns)   --->   "br i1 %tmp_17, label %8, label %9" [PartB/partb.cpp:41]   --->   Operation 143 'br' <Predicate = true> <Delay = 0.00>
ST_12 : Operation 144 [1/1] (0.00ns)   --->   "%tmp_26 = trunc i31 %k to i15" [PartB/partb.cpp:43]   --->   Operation 144 'trunc' 'tmp_26' <Predicate = (tmp_17)> <Delay = 0.00>
ST_12 : Operation 145 [1/1] (1.94ns)   --->   "%tmp_27 = add i15 %tmp_15, %tmp_26" [PartB/partb.cpp:43]   --->   Operation 145 'add' 'tmp_27' <Predicate = (tmp_17)> <Delay = 1.94> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.94> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_12 : Operation 146 [1/1] (0.00ns)   --->   "%tmp_32_cast = zext i15 %tmp_27 to i64" [PartB/partb.cpp:43]   --->   Operation 146 'zext' 'tmp_32_cast' <Predicate = (tmp_17)> <Delay = 0.00>
ST_12 : Operation 147 [1/1] (0.00ns)   --->   "%A_i_addr_1 = getelementptr [10000 x i32]* %A_i, i64 0, i64 %tmp_32_cast" [PartB/partb.cpp:43]   --->   Operation 147 'getelementptr' 'A_i_addr_1' <Predicate = (tmp_17)> <Delay = 0.00>
ST_12 : Operation 148 [1/1] (2.79ns)   --->   "%next_mul6 = add i38 100, %phi_mul5"   --->   Operation 148 'add' 'next_mul6' <Predicate = (tmp_17)> <Delay = 2.79> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.94> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_12 : Operation 149 [1/1] (1.94ns)   --->   "%tmp_28 = add i15 %tmp_25, %tmp_23" [PartB/partb.cpp:43]   --->   Operation 149 'add' 'tmp_28' <Predicate = (tmp_17)> <Delay = 1.94> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.94> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_12 : Operation 150 [1/1] (0.00ns)   --->   "%tmp_34_cast = zext i15 %tmp_28 to i64" [PartB/partb.cpp:43]   --->   Operation 150 'zext' 'tmp_34_cast' <Predicate = (tmp_17)> <Delay = 0.00>
ST_12 : Operation 151 [1/1] (0.00ns)   --->   "%B_i_addr_1 = getelementptr [10000 x i32]* %B_i, i64 0, i64 %tmp_34_cast" [PartB/partb.cpp:43]   --->   Operation 151 'getelementptr' 'B_i_addr_1' <Predicate = (tmp_17)> <Delay = 0.00>
ST_12 : Operation 152 [2/2] (3.25ns)   --->   "%A_i_load = load i32* %A_i_addr_1, align 4" [PartB/partb.cpp:43]   --->   Operation 152 'load' 'A_i_load' <Predicate = (tmp_17)> <Delay = 3.25> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 10000> <RAM>
ST_12 : Operation 153 [2/2] (3.25ns)   --->   "%B_i_load = load i32* %B_i_addr_1, align 4" [PartB/partb.cpp:43]   --->   Operation 153 'load' 'B_i_load' <Predicate = (tmp_17)> <Delay = 3.25> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 10000> <RAM>
ST_12 : Operation 154 [1/1] (3.25ns)   --->   "store i32 %sum, i32* %C_i_addr_1, align 4" [PartB/partb.cpp:45]   --->   Operation 154 'store' <Predicate = (!tmp_17)> <Delay = 3.25> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 10000> <RAM>
ST_12 : Operation 155 [1/1] (0.00ns)   --->   "br label %5" [PartB/partb.cpp:38]   --->   Operation 155 'br' <Predicate = (!tmp_17)> <Delay = 0.00>

State 13 <SV = 7> <Delay = 3.25>
ST_13 : Operation 156 [1/2] (3.25ns)   --->   "%A_i_load = load i32* %A_i_addr_1, align 4" [PartB/partb.cpp:43]   --->   Operation 156 'load' 'A_i_load' <Predicate = true> <Delay = 3.25> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 10000> <RAM>
ST_13 : Operation 157 [1/2] (3.25ns)   --->   "%B_i_load = load i32* %B_i_addr_1, align 4" [PartB/partb.cpp:43]   --->   Operation 157 'load' 'B_i_load' <Predicate = true> <Delay = 3.25> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 10000> <RAM>

State 14 <SV = 8> <Delay = 8.51>
ST_14 : Operation 158 [1/1] (8.51ns)   --->   "%tmp_20 = mul nsw i32 %B_i_load, %A_i_load" [PartB/partb.cpp:43]   --->   Operation 158 'mul' 'tmp_20' <Predicate = true> <Delay = 8.51> <Core = "Mul">   --->   Core 16 'Mul' <Latency = 0> <II = 1> <Delay = 8.51> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>

State 15 <SV = 9> <Delay = 2.55>
ST_15 : Operation 159 [1/1] (2.55ns)   --->   "%sum_1 = add nsw i32 %sum, %tmp_20" [PartB/partb.cpp:43]   --->   Operation 159 'add' 'sum_1' <Predicate = true> <Delay = 2.55> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.94> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_15 : Operation 160 [1/1] (0.00ns)   --->   "br label %7" [PartB/partb.cpp:41]   --->   Operation 160 'br' <Predicate = true> <Delay = 0.00>

State 16 <SV = 5> <Delay = 2.79>
ST_16 : Operation 161 [1/1] (0.00ns)   --->   "%i7 = phi i31 [ %i_5, %.preheader1.loopexit ], [ 0, %.preheader1.preheader ]"   --->   Operation 161 'phi' 'i7' <Predicate = true> <Delay = 0.00>
ST_16 : Operation 162 [1/1] (0.00ns)   --->   "%phi_mul9 = phi i38 [ %next_mul1, %.preheader1.loopexit ], [ 0, %.preheader1.preheader ]"   --->   Operation 162 'phi' 'phi_mul9' <Predicate = true> <Delay = 0.00>
ST_16 : Operation 163 [1/1] (0.00ns)   --->   "%tmp_22 = trunc i38 %phi_mul9 to i15"   --->   Operation 163 'trunc' 'tmp_22' <Predicate = true> <Delay = 0.00>
ST_16 : Operation 164 [1/1] (2.79ns)   --->   "%next_mul1 = add i38 100, %phi_mul9"   --->   Operation 164 'add' 'next_mul1' <Predicate = true> <Delay = 2.79> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.94> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_16 : Operation 165 [1/1] (0.00ns)   --->   "%i7_cast = zext i31 %i7 to i32" [PartB/partb.cpp:49]   --->   Operation 165 'zext' 'i7_cast' <Predicate = true> <Delay = 0.00>
ST_16 : Operation 166 [1/1] (2.47ns)   --->   "%tmp_14 = icmp slt i32 %i7_cast, %mC_read" [PartB/partb.cpp:49]   --->   Operation 166 'icmp' 'tmp_14' <Predicate = true> <Delay = 2.47> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 2.47> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_16 : Operation 167 [1/1] (2.52ns)   --->   "%i_5 = add i31 1, %i7" [PartB/partb.cpp:49]   --->   Operation 167 'add' 'i_5' <Predicate = true> <Delay = 2.52> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.94> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_16 : Operation 168 [1/1] (0.00ns)   --->   "br i1 %tmp_14, label %.preheader.preheader, label %12" [PartB/partb.cpp:49]   --->   Operation 168 'br' <Predicate = true> <Delay = 0.00>
ST_16 : Operation 169 [1/1] (1.76ns)   --->   "br label %.preheader" [PartB/partb.cpp:51]   --->   Operation 169 'br' <Predicate = (tmp_14)> <Delay = 1.76>
ST_16 : Operation 170 [1/1] (0.00ns)   --->   "ret void" [PartB/partb.cpp:56]   --->   Operation 170 'ret' <Predicate = (!tmp_14)> <Delay = 0.00>

State 17 <SV = 6> <Delay = 5.19>
ST_17 : Operation 171 [1/1] (0.00ns)   --->   "%j8 = phi i31 [ %j_5, %11 ], [ 0, %.preheader.preheader ]"   --->   Operation 171 'phi' 'j8' <Predicate = true> <Delay = 0.00>
ST_17 : Operation 172 [1/1] (0.00ns)   --->   "%j8_cast = zext i31 %j8 to i32" [PartB/partb.cpp:51]   --->   Operation 172 'zext' 'j8_cast' <Predicate = true> <Delay = 0.00>
ST_17 : Operation 173 [1/1] (2.47ns)   --->   "%tmp_18 = icmp slt i32 %j8_cast, %nC_read" [PartB/partb.cpp:51]   --->   Operation 173 'icmp' 'tmp_18' <Predicate = true> <Delay = 2.47> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 2.47> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_17 : Operation 174 [1/1] (2.52ns)   --->   "%j_5 = add i31 %j8, 1" [PartB/partb.cpp:51]   --->   Operation 174 'add' 'j_5' <Predicate = true> <Delay = 2.52> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.94> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_17 : Operation 175 [1/1] (0.00ns)   --->   "br i1 %tmp_18, label %11, label %.preheader1.loopexit" [PartB/partb.cpp:51]   --->   Operation 175 'br' <Predicate = true> <Delay = 0.00>
ST_17 : Operation 176 [1/1] (0.00ns)   --->   "%tmp_29 = trunc i31 %j8 to i15" [PartB/partb.cpp:53]   --->   Operation 176 'trunc' 'tmp_29' <Predicate = (tmp_18)> <Delay = 0.00>
ST_17 : Operation 177 [1/1] (1.94ns)   --->   "%tmp_30 = add i15 %tmp_22, %tmp_29" [PartB/partb.cpp:53]   --->   Operation 177 'add' 'tmp_30' <Predicate = (tmp_18)> <Delay = 1.94> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.94> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_17 : Operation 178 [1/1] (0.00ns)   --->   "%tmp_35_cast = zext i15 %tmp_30 to i64" [PartB/partb.cpp:53]   --->   Operation 178 'zext' 'tmp_35_cast' <Predicate = (tmp_18)> <Delay = 0.00>
ST_17 : Operation 179 [1/1] (0.00ns)   --->   "%C_i_addr_2 = getelementptr [10000 x i32]* %C_i, i64 0, i64 %tmp_35_cast" [PartB/partb.cpp:53]   --->   Operation 179 'getelementptr' 'C_i_addr_2' <Predicate = (tmp_18)> <Delay = 0.00>
ST_17 : Operation 180 [2/2] (3.25ns)   --->   "%C_i_load = load i32* %C_i_addr_2, align 4" [PartB/partb.cpp:53]   --->   Operation 180 'load' 'C_i_load' <Predicate = (tmp_18)> <Delay = 3.25> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 10000> <RAM>
ST_17 : Operation 181 [1/1] (0.00ns)   --->   "br label %.preheader1"   --->   Operation 181 'br' <Predicate = (!tmp_18)> <Delay = 0.00>

State 18 <SV = 7> <Delay = 6.50>
ST_18 : Operation 182 [1/1] (0.00ns)   --->   "%C_addr = getelementptr [10000 x i32]* %C, i64 0, i64 %tmp_35_cast" [PartB/partb.cpp:53]   --->   Operation 182 'getelementptr' 'C_addr' <Predicate = true> <Delay = 0.00>
ST_18 : Operation 183 [1/2] (3.25ns)   --->   "%C_i_load = load i32* %C_i_addr_2, align 4" [PartB/partb.cpp:53]   --->   Operation 183 'load' 'C_i_load' <Predicate = true> <Delay = 3.25> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 10000> <RAM>
ST_18 : Operation 184 [1/1] (3.25ns)   --->   "store i32 %C_i_load, i32* %C_addr, align 4" [PartB/partb.cpp:53]   --->   Operation 184 'store' <Predicate = true> <Delay = 3.25> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 10000> <RAM>
ST_18 : Operation 185 [1/1] (0.00ns)   --->   "br label %.preheader" [PartB/partb.cpp:51]   --->   Operation 185 'br' <Predicate = true> <Delay = 0.00>


============================================================
+ Verbose Summary: Timing violations
============================================================
Target clock period: 10ns, clock uncertainty: 1.25ns.

 <State 1>: 1.77ns
The critical path consists of the following:
	multiplexor before 'phi' operation ('i') with incoming values : ('i', PartB/partb.cpp:11) [31]  (1.77 ns)

 <State 2>: 2.8ns
The critical path consists of the following:
	'phi' operation ('phi_mul') with incoming values : ('next_mul') [32]  (0 ns)
	'add' operation ('next_mul') [34]  (2.8 ns)

 <State 3>: 5.2ns
The critical path consists of the following:
	'phi' operation ('j') with incoming values : ('j', PartB/partb.cpp:13) [42]  (0 ns)
	'add' operation ('tmp_s', PartB/partb.cpp:15) [49]  (1.94 ns)
	'getelementptr' operation ('A_addr', PartB/partb.cpp:15) [51]  (0 ns)
	'load' operation ('A_load', PartB/partb.cpp:15) on array 'A' [53]  (3.25 ns)

 <State 4>: 6.51ns
The critical path consists of the following:
	'load' operation ('A_load', PartB/partb.cpp:15) on array 'A' [53]  (3.25 ns)
	'store' operation (PartB/partb.cpp:15) of variable 'A_load', PartB/partb.cpp:15 on array 'A_i', PartB/partb.cpp:7 [54]  (3.25 ns)

 <State 5>: 2.8ns
The critical path consists of the following:
	'phi' operation ('phi_mul1') with incoming values : ('next_mul2') [62]  (0 ns)
	'add' operation ('next_mul2') [64]  (2.8 ns)

 <State 6>: 5.2ns
The critical path consists of the following:
	'phi' operation ('j') with incoming values : ('j', PartB/partb.cpp:21) [72]  (0 ns)
	'add' operation ('tmp_12', PartB/partb.cpp:23) [79]  (1.94 ns)
	'getelementptr' operation ('B_addr', PartB/partb.cpp:23) [81]  (0 ns)
	'load' operation ('B_load', PartB/partb.cpp:23) on array 'B' [83]  (3.25 ns)

 <State 7>: 6.51ns
The critical path consists of the following:
	'load' operation ('B_load', PartB/partb.cpp:23) on array 'B' [83]  (3.25 ns)
	'store' operation (PartB/partb.cpp:23) of variable 'B_load', PartB/partb.cpp:23 on array 'B_i', PartB/partb.cpp:8 [84]  (3.25 ns)

 <State 8>: 2.8ns
The critical path consists of the following:
	'phi' operation ('phi_mul3') with incoming values : ('next_mul4') [92]  (0 ns)
	'add' operation ('next_mul4') [94]  (2.8 ns)

 <State 9>: 5.2ns
The critical path consists of the following:
	'phi' operation ('j') with incoming values : ('j', PartB/partb.cpp:29) [102]  (0 ns)
	'add' operation ('tmp_19', PartB/partb.cpp:31) [109]  (1.94 ns)
	'getelementptr' operation ('C_i_addr', PartB/partb.cpp:31) [111]  (0 ns)
	'store' operation (PartB/partb.cpp:31) of constant 0 on array 'C_i', PartB/partb.cpp:9 [112]  (3.25 ns)

 <State 10>: 2.8ns
The critical path consists of the following:
	'phi' operation ('phi_mul7') with incoming values : ('next_mul8') [120]  (0 ns)
	'add' operation ('next_mul8') [122]  (2.8 ns)

 <State 11>: 2.52ns
The critical path consists of the following:
	'phi' operation ('j') with incoming values : ('j', PartB/partb.cpp:38) [132]  (0 ns)
	'add' operation ('j', PartB/partb.cpp:38) [135]  (2.52 ns)

 <State 12>: 5.2ns
The critical path consists of the following:
	'phi' operation ('k') with incoming values : ('k', PartB/partb.cpp:41) [146]  (0 ns)
	'add' operation ('tmp_27', PartB/partb.cpp:43) [155]  (1.94 ns)
	'getelementptr' operation ('A_i_addr_1', PartB/partb.cpp:43) [157]  (0 ns)
	'load' operation ('A_i_load', PartB/partb.cpp:43) on array 'A_i', PartB/partb.cpp:7 [162]  (3.25 ns)

 <State 13>: 3.25ns
The critical path consists of the following:
	'load' operation ('A_i_load', PartB/partb.cpp:43) on array 'A_i', PartB/partb.cpp:7 [162]  (3.25 ns)

 <State 14>: 8.51ns
The critical path consists of the following:
	'mul' operation ('tmp_20', PartB/partb.cpp:43) [164]  (8.51 ns)

 <State 15>: 2.55ns
The critical path consists of the following:
	'add' operation ('sum', PartB/partb.cpp:43) [165]  (2.55 ns)

 <State 16>: 2.8ns
The critical path consists of the following:
	'phi' operation ('phi_mul9') with incoming values : ('next_mul1') [177]  (0 ns)
	'add' operation ('next_mul1') [179]  (2.8 ns)

 <State 17>: 5.2ns
The critical path consists of the following:
	'phi' operation ('j') with incoming values : ('j', PartB/partb.cpp:51) [187]  (0 ns)
	'add' operation ('tmp_30', PartB/partb.cpp:53) [194]  (1.94 ns)
	'getelementptr' operation ('C_i_addr_2', PartB/partb.cpp:53) [197]  (0 ns)
	'load' operation ('C_i_load', PartB/partb.cpp:53) on array 'C_i', PartB/partb.cpp:9 [198]  (3.25 ns)

 <State 18>: 6.51ns
The critical path consists of the following:
	'load' operation ('C_i_load', PartB/partb.cpp:53) on array 'C_i', PartB/partb.cpp:9 [198]  (3.25 ns)
	'store' operation (PartB/partb.cpp:53) of variable 'C_i_load', PartB/partb.cpp:53 on array 'C' [199]  (3.25 ns)


============================================================
+ Verbose Summary: Binding
============================================================
N/A
* FSMD analyzer results:
  - Output states:
 - Input state : 
  - Chain level:
	State 1
	State 2
	State 3
	State 4
	State 5
	State 6
	State 7
	State 8
	State 9
	State 10
	State 11
	State 12
	State 13
	State 14
	State 15
	State 16
	State 17
	State 18


============================================================
+ Verbose Summary: Datapath Resource usage 
============================================================
N/A
