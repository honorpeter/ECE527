

================================================================
== Vivado HLS Report for 'parta1_3'
================================================================
* Date:           Thu Oct  4 01:35:47 2018

* Version:        2018.2 (Build 2258646 on Thu Jun 14 20:25:20 MDT 2018)
* Project:        PartA
* Solution:       solution3
* Product family: zynq
* Target device:  xc7z020clg484-1


================================================================
== Performance Estimates
================================================================
+ Timing (ns): 
    * Summary: 
    +--------+-------+----------+------------+
    |  Clock | Target| Estimated| Uncertainty|
    +--------+-------+----------+------------+
    |ap_clk  |  10.00|     9.634|        1.25|
    +--------+-------+----------+------------+

+ Latency (clock cycles): 
    * Summary: 
    +-----+-----+-----+-----+---------+
    |  Latency  |  Interval | Pipeline|
    | min | max | min | max |   Type  |
    +-----+-----+-----+-----+---------+
    |    ?|    ?|    ?|    ?|   none  |
    +-----+-----+-----+-----+---------+

    + Detail: 
        * Instance: 
        N/A

        * Loop: 
        +-----------------+-----+-----+----------+-----------+-----------+------+----------+
        |                 |  Latency  | Iteration|  Initiation Interval  | Trip |          |
        |    Loop Name    | min | max |  Latency |  achieved |   target  | Count| Pipelined|
        +-----------------+-----+-----+----------+-----------+-----------+------+----------+
        |- for_c_row      |    ?|    ?|         ?|          -|          -|     ?|    no    |
        | + for_c_col     |    ?|    ?|         ?|          -|          -|     ?|    no    |
        |  ++ for_common  |    ?|    ?|        13|          -|          -|     ?|    no    |
        +-----------------+-----+-----+----------+-----------+-----------+------+----------+

============================================================
+ Verbose Summary: Synthesis Manager
============================================================
InlineROM: 1
ExposeGlobal: 0
============================================================
+ Verbose Summary: CDFG Model
============================================================
IsTopModel: 1
ResetActiveHigh: 1
IsCombinational: 0
IsDatapathOnly: 0
HasWiredReturn: 1
HasMFsm: 0
HasVarLatency: 1
IsPipeline: 0
IsRtlPipelined: 0
IsInstanceOverlapped: 0
IsDontTouch: 0
HasImplIP: 0
IsGatedGlobalClock: 0


============================================================
+ Verbose Summary: Schedule
============================================================
* Number of FSM states : 16
* Pipeline : 0
* Dataflow Pipeline: 0

* FSM state transitions: 
1 --> 
	2  / true
2 --> 
	3  / (tmp)
3 --> 
	4  / (tmp_2)
	2  / (!tmp_2)
4 --> 
	5  / (!tmp_26)
	13  / (tmp_26)
5 --> 
	6  / true
6 --> 
	7  / true
7 --> 
	8  / (tmp_5_1)
	13  / (!tmp_5_1)
8 --> 
	9  / true
9 --> 
	10  / true
10 --> 
	11  / (tmp_5_2)
	13  / (!tmp_5_2)
11 --> 
	12  / true
12 --> 
	13  / true
13 --> 
	14  / (!tmp_26 & tmp_5_1 & tmp_5_2 & tmp_5_3)
	3  / (tmp_26) | (!tmp_5_1) | (!tmp_5_2) | (!tmp_5_3)
14 --> 
	15  / true
15 --> 
	16  / true
16 --> 
	4  / true

* FSM state operations: 

State 1 <SV = 0> <Delay = 1.76>
ST_1 : Operation 17 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecBitsMap([10000 x i32]* %A) nounwind, !map !7"   --->   Operation 17 'specbitsmap' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 18 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecBitsMap([10000 x i32]* %B) nounwind, !map !13"   --->   Operation 18 'specbitsmap' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 19 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecBitsMap([10000 x i32]* %C) nounwind, !map !17"   --->   Operation 19 'specbitsmap' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 20 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecBitsMap(i32 %mA) nounwind, !map !21"   --->   Operation 20 'specbitsmap' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 21 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecBitsMap(i32 %nA) nounwind, !map !27"   --->   Operation 21 'specbitsmap' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 22 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecBitsMap(i32 %mB) nounwind, !map !31"   --->   Operation 22 'specbitsmap' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 23 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecBitsMap(i32 %nB) nounwind, !map !35"   --->   Operation 23 'specbitsmap' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 24 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecBitsMap(i32 %mC) nounwind, !map !39"   --->   Operation 24 'specbitsmap' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 25 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecBitsMap(i32 %nC) nounwind, !map !43"   --->   Operation 25 'specbitsmap' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 26 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecTopModule([9 x i8]* @parta1_3_str) nounwind"   --->   Operation 26 'spectopmodule' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 27 [1/1] (0.00ns)   --->   "%nC_read = call i32 @_ssdm_op_Read.ap_auto.i32(i32 %nC) nounwind"   --->   Operation 27 'read' 'nC_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 28 [1/1] (0.00ns)   --->   "%mC_read = call i32 @_ssdm_op_Read.ap_auto.i32(i32 %mC) nounwind"   --->   Operation 28 'read' 'mC_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 29 [1/1] (0.00ns)   --->   "%nA_read = call i32 @_ssdm_op_Read.ap_auto.i32(i32 %nA) nounwind"   --->   Operation 29 'read' 'nA_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 30 [1/1] (1.76ns)   --->   "br label %1" [PartA/parta1_3.cpp:8]   --->   Operation 30 'br' <Predicate = true> <Delay = 1.76>

State 2 <SV = 1> <Delay = 2.79>
ST_2 : Operation 31 [1/1] (0.00ns)   --->   "%i = phi i31 [ 0, %0 ], [ %i_1, %11 ]"   --->   Operation 31 'phi' 'i' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 32 [1/1] (0.00ns)   --->   "%phi_mul = phi i38 [ 0, %0 ], [ %next_mul, %11 ]"   --->   Operation 32 'phi' 'phi_mul' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 33 [1/1] (0.00ns)   --->   "%tmp_1 = trunc i38 %phi_mul to i15"   --->   Operation 33 'trunc' 'tmp_1' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 34 [1/1] (2.79ns)   --->   "%next_mul = add i38 100, %phi_mul"   --->   Operation 34 'add' 'next_mul' <Predicate = true> <Delay = 2.79> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 2.55> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 35 [1/1] (0.00ns)   --->   "%i_cast = zext i31 %i to i32" [PartA/parta1_3.cpp:8]   --->   Operation 35 'zext' 'i_cast' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 36 [1/1] (2.47ns)   --->   "%tmp = icmp slt i32 %i_cast, %mC_read" [PartA/parta1_3.cpp:8]   --->   Operation 36 'icmp' 'tmp' <Predicate = true> <Delay = 2.47> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 2.47> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 37 [1/1] (2.52ns)   --->   "%i_1 = add i31 1, %i" [PartA/parta1_3.cpp:8]   --->   Operation 37 'add' 'i_1' <Predicate = true> <Delay = 2.52> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 2.55> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 38 [1/1] (0.00ns)   --->   "br i1 %tmp, label %2, label %12" [PartA/parta1_3.cpp:8]   --->   Operation 38 'br' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 39 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecLoopName([10 x i8]* @p_str7) nounwind" [PartA/parta1_3.cpp:9]   --->   Operation 39 'specloopname' <Predicate = (tmp)> <Delay = 0.00>
ST_2 : Operation 40 [1/1] (0.00ns)   --->   "%tmp_4 = call i32 (...)* @_ssdm_op_SpecRegionBegin([10 x i8]* @p_str7) nounwind" [PartA/parta1_3.cpp:9]   --->   Operation 40 'specregionbegin' 'tmp_4' <Predicate = (tmp)> <Delay = 0.00>
ST_2 : Operation 41 [1/1] (1.76ns)   --->   "br label %3" [PartA/parta1_3.cpp:10]   --->   Operation 41 'br' <Predicate = (tmp)> <Delay = 1.76>
ST_2 : Operation 42 [1/1] (0.00ns)   --->   "ret void" [PartA/parta1_3.cpp:19]   --->   Operation 42 'ret' <Predicate = (!tmp)> <Delay = 0.00>

State 3 <SV = 2> <Delay = 5.81>
ST_3 : Operation 43 [1/1] (0.00ns)   --->   "%j = phi i31 [ 0, %2 ], [ %j_1, %10 ]"   --->   Operation 43 'phi' 'j' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 44 [1/1] (0.00ns)   --->   "%j_cast = zext i31 %j to i32" [PartA/parta1_3.cpp:10]   --->   Operation 44 'zext' 'j_cast' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 45 [1/1] (2.47ns)   --->   "%tmp_2 = icmp slt i32 %j_cast, %nC_read" [PartA/parta1_3.cpp:10]   --->   Operation 45 'icmp' 'tmp_2' <Predicate = true> <Delay = 2.47> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 2.47> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 46 [1/1] (2.52ns)   --->   "%j_1 = add i31 %j, 1" [PartA/parta1_3.cpp:10]   --->   Operation 46 'add' 'j_1' <Predicate = true> <Delay = 2.52> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 2.55> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 47 [1/1] (0.00ns)   --->   "br i1 %tmp_2, label %4, label %11" [PartA/parta1_3.cpp:10]   --->   Operation 47 'br' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 48 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecLoopName([10 x i8]* @p_str18) nounwind" [PartA/parta1_3.cpp:11]   --->   Operation 48 'specloopname' <Predicate = (tmp_2)> <Delay = 0.00>
ST_3 : Operation 49 [1/1] (0.00ns)   --->   "%tmp_5 = call i32 (...)* @_ssdm_op_SpecRegionBegin([10 x i8]* @p_str18) nounwind" [PartA/parta1_3.cpp:11]   --->   Operation 49 'specregionbegin' 'tmp_5' <Predicate = (tmp_2)> <Delay = 0.00>
ST_3 : Operation 50 [1/1] (0.00ns)   --->   "%tmp_3 = trunc i31 %j to i15" [PartA/parta1_3.cpp:15]   --->   Operation 50 'trunc' 'tmp_3' <Predicate = (tmp_2)> <Delay = 0.00>
ST_3 : Operation 51 [1/1] (1.94ns)   --->   "%tmp_s = add i15 %tmp_3, %tmp_1" [PartA/parta1_3.cpp:15]   --->   Operation 51 'add' 'tmp_s' <Predicate = (tmp_2)> <Delay = 1.94> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 2.55> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 52 [1/1] (0.00ns)   --->   "%tmp_10_cast = zext i15 %tmp_s to i64" [PartA/parta1_3.cpp:15]   --->   Operation 52 'zext' 'tmp_10_cast' <Predicate = (tmp_2)> <Delay = 0.00>
ST_3 : Operation 53 [1/1] (0.00ns)   --->   "%C_addr = getelementptr [10000 x i32]* %C, i64 0, i64 %tmp_10_cast" [PartA/parta1_3.cpp:15]   --->   Operation 53 'getelementptr' 'C_addr' <Predicate = (tmp_2)> <Delay = 0.00>
ST_3 : Operation 54 [1/1] (0.00ns) (grouped into LUT with out node tmp_24)   --->   "%tmp_6 = call i1 @_ssdm_op_BitSelect.i1.i32.i32(i32 %nA_read, i32 31)"   --->   Operation 54 'bitselect' 'tmp_6' <Predicate = (tmp_2)> <Delay = 0.00>
ST_3 : Operation 55 [1/1] (2.55ns)   --->   "%nA_op_op = add i32 3, %nA_read"   --->   Operation 55 'add' 'nA_op_op' <Predicate = (tmp_2)> <Delay = 2.55> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 2.55> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 56 [1/1] (0.00ns) (grouped into LUT with out node tmp_24)   --->   "%tmp_9 = call i1 @_ssdm_op_BitSelect.i1.i32.i32(i32 %nA_op_op, i32 31)"   --->   Operation 56 'bitselect' 'tmp_9' <Predicate = (tmp_2)> <Delay = 0.00>
ST_3 : Operation 57 [1/1] (2.55ns)   --->   "%p_neg = sub i32 -3, %nA_read"   --->   Operation 57 'sub' 'p_neg' <Predicate = (tmp_2)> <Delay = 2.55> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 2.55> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 58 [1/1] (0.00ns)   --->   "%p_lshr = call i30 @_ssdm_op_PartSelect.i30.i32.i32.i32(i32 %p_neg, i32 2, i32 31)"   --->   Operation 58 'partselect' 'p_lshr' <Predicate = (tmp_2)> <Delay = 0.00>
ST_3 : Operation 59 [1/1] (2.49ns)   --->   "%p_neg_t = sub i30 0, %p_lshr"   --->   Operation 59 'sub' 'p_neg_t' <Predicate = (tmp_2)> <Delay = 2.49> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 2.55> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 60 [1/1] (0.00ns) (grouped into LUT with out node tmp_24)   --->   "%tmp_10 = call i30 @_ssdm_op_PartSelect.i30.i32.i32.i32(i32 %nA_op_op, i32 2, i32 31)"   --->   Operation 60 'partselect' 'tmp_10' <Predicate = (tmp_2)> <Delay = 0.00>
ST_3 : Operation 61 [1/1] (0.00ns) (grouped into LUT with out node tmp_24)   --->   "%tmp_23 = select i1 %tmp_9, i30 %p_neg_t, i30 %tmp_10"   --->   Operation 61 'select' 'tmp_23' <Predicate = (tmp_2)> <Delay = 0.00> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 0.76> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_3 : Operation 62 [1/1] (0.76ns) (out node of the LUT)   --->   "%tmp_24 = select i1 %tmp_6, i30 0, i30 %tmp_23"   --->   Operation 62 'select' 'tmp_24' <Predicate = (tmp_2)> <Delay = 0.76> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 0.76> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_3 : Operation 63 [1/1] (0.00ns)   --->   "%tmp_25 = call i32 @_ssdm_op_BitConcatenate.i32.i30.i2(i30 %tmp_24, i2 0)"   --->   Operation 63 'bitconcatenate' 'tmp_25' <Predicate = (tmp_2)> <Delay = 0.00>
ST_3 : Operation 64 [1/1] (1.76ns)   --->   "br label %5" [PartA/parta1_3.cpp:12]   --->   Operation 64 'br' <Predicate = (tmp_2)> <Delay = 1.76>
ST_3 : Operation 65 [1/1] (0.00ns)   --->   "%empty_4 = call i32 (...)* @_ssdm_op_SpecRegionEnd([10 x i8]* @p_str7, i32 %tmp_4) nounwind" [PartA/parta1_3.cpp:18]   --->   Operation 65 'specregionend' 'empty_4' <Predicate = (!tmp_2)> <Delay = 0.00>
ST_3 : Operation 66 [1/1] (0.00ns)   --->   "br label %1" [PartA/parta1_3.cpp:8]   --->   Operation 66 'br' <Predicate = (!tmp_2)> <Delay = 0.00>

State 4 <SV = 3> <Delay = 9.63>
ST_4 : Operation 67 [1/1] (0.00ns)   --->   "%k = phi i32 [ 0, %4 ], [ %k_1_3, %9 ]" [PartA/parta1_3.cpp:12]   --->   Operation 67 'phi' 'k' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 68 [1/1] (2.47ns)   --->   "%tmp_26 = icmp eq i32 %k, %tmp_25" [PartA/parta1_3.cpp:12]   --->   Operation 68 'icmp' 'tmp_26' <Predicate = true> <Delay = 2.47> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 2.47> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 69 [1/1] (0.00ns)   --->   "br i1 %tmp_26, label %10, label %6" [PartA/parta1_3.cpp:12]   --->   Operation 69 'br' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 70 [1/1] (0.00ns)   --->   "%tmp_27 = trunc i32 %k to i15" [PartA/parta1_3.cpp:15]   --->   Operation 70 'trunc' 'tmp_27' <Predicate = (!tmp_26)> <Delay = 0.00>
ST_4 : Operation 71 [1/1] (1.94ns)   --->   "%tmp_11 = add i15 %tmp_1, %tmp_27" [PartA/parta1_3.cpp:15]   --->   Operation 71 'add' 'tmp_11' <Predicate = (!tmp_26)> <Delay = 1.94> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 2.55> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 72 [1/1] (0.00ns)   --->   "%tmp_11_cast = zext i15 %tmp_11 to i64" [PartA/parta1_3.cpp:15]   --->   Operation 72 'zext' 'tmp_11_cast' <Predicate = (!tmp_26)> <Delay = 0.00>
ST_4 : Operation 73 [1/1] (0.00ns)   --->   "%A_addr = getelementptr [10000 x i32]* %A, i64 0, i64 %tmp_11_cast" [PartA/parta1_3.cpp:15]   --->   Operation 73 'getelementptr' 'A_addr' <Predicate = (!tmp_26)> <Delay = 0.00>
ST_4 : Operation 74 [1/1] (3.36ns)   --->   "%tmp_12 = mul i15 100, %tmp_27" [PartA/parta1_3.cpp:15]   --->   Operation 74 'mul' 'tmp_12' <Predicate = (!tmp_26)> <Delay = 3.36> <Core = "DSP48">   --->   Core 61 'DSP48' <Latency = 0> <II = 1> <Delay = 6.38> <IPBlock> <Opcode : 'mul' 'add' 'sub' 'select'> <InPorts = 0> <OutPorts = 1> <Sync> <CReg>
ST_4 : Operation 75 [1/1] (3.02ns)   --->   "%tmp_13 = add i15 %tmp_12, %tmp_3" [PartA/parta1_3.cpp:15]   --->   Operation 75 'add' 'tmp_13' <Predicate = (!tmp_26)> <Delay = 3.02> <Core = "DSP48">   --->   Core 61 'DSP48' <Latency = 0> <II = 1> <Delay = 6.38> <IPBlock> <Opcode : 'mul' 'add' 'sub' 'select'> <InPorts = 0> <OutPorts = 1> <Sync> <CReg>
ST_4 : Operation 76 [1/1] (0.00ns)   --->   "%tmp_13_cast = sext i15 %tmp_13 to i64" [PartA/parta1_3.cpp:15]   --->   Operation 76 'sext' 'tmp_13_cast' <Predicate = (!tmp_26)> <Delay = 0.00>
ST_4 : Operation 77 [1/1] (0.00ns)   --->   "%B_addr = getelementptr [10000 x i32]* %B, i64 0, i64 %tmp_13_cast" [PartA/parta1_3.cpp:15]   --->   Operation 77 'getelementptr' 'B_addr' <Predicate = (!tmp_26)> <Delay = 0.00>
ST_4 : Operation 78 [2/2] (3.25ns)   --->   "%A_load = load i32* %A_addr, align 4" [PartA/parta1_3.cpp:15]   --->   Operation 78 'load' 'A_load' <Predicate = (!tmp_26)> <Delay = 3.25> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 10000> <RAM>
ST_4 : Operation 79 [2/2] (3.25ns)   --->   "%B_load = load i32* %B_addr, align 4" [PartA/parta1_3.cpp:15]   --->   Operation 79 'load' 'B_load' <Predicate = (!tmp_26)> <Delay = 3.25> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 10000> <RAM>

State 5 <SV = 4> <Delay = 3.25>
ST_5 : Operation 80 [1/2] (3.25ns)   --->   "%A_load = load i32* %A_addr, align 4" [PartA/parta1_3.cpp:15]   --->   Operation 80 'load' 'A_load' <Predicate = true> <Delay = 3.25> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 10000> <RAM>
ST_5 : Operation 81 [1/2] (3.25ns)   --->   "%B_load = load i32* %B_addr, align 4" [PartA/parta1_3.cpp:15]   --->   Operation 81 'load' 'B_load' <Predicate = true> <Delay = 3.25> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 10000> <RAM>
ST_5 : Operation 82 [2/2] (3.25ns)   --->   "%C_load = load i32* %C_addr, align 4" [PartA/parta1_3.cpp:15]   --->   Operation 82 'load' 'C_load' <Predicate = true> <Delay = 3.25> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 10000> <RAM>

State 6 <SV = 5> <Delay = 8.51>
ST_6 : Operation 83 [1/1] (8.51ns)   --->   "%tmp_7 = mul nsw i32 %B_load, %A_load" [PartA/parta1_3.cpp:15]   --->   Operation 83 'mul' 'tmp_7' <Predicate = true> <Delay = 8.51> <Core = "Mul">   --->   Core 16 'Mul' <Latency = 0> <II = 1> <Delay = 8.51> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_6 : Operation 84 [1/2] (3.25ns)   --->   "%C_load = load i32* %C_addr, align 4" [PartA/parta1_3.cpp:15]   --->   Operation 84 'load' 'C_load' <Predicate = true> <Delay = 3.25> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 10000> <RAM>

State 7 <SV = 6> <Delay = 9.63>
ST_7 : Operation 85 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecLoopName([11 x i8]* @p_str29) nounwind" [PartA/parta1_3.cpp:13]   --->   Operation 85 'specloopname' <Predicate = true> <Delay = 0.00>
ST_7 : Operation 86 [1/1] (2.55ns)   --->   "%tmp_8 = add nsw i32 %tmp_7, %C_load" [PartA/parta1_3.cpp:15]   --->   Operation 86 'add' 'tmp_8' <Predicate = true> <Delay = 2.55> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 2.55> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_7 : Operation 87 [1/1] (3.25ns)   --->   "store i32 %tmp_8, i32* %C_addr, align 4" [PartA/parta1_3.cpp:15]   --->   Operation 87 'store' <Predicate = true> <Delay = 3.25> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 10000> <RAM>
ST_7 : Operation 88 [1/1] (0.00ns)   --->   "%k_1_s = or i32 %k, 1" [PartA/parta1_3.cpp:12]   --->   Operation 88 'or' 'k_1_s' <Predicate = true> <Delay = 0.00>
ST_7 : Operation 89 [1/1] (2.47ns)   --->   "%tmp_5_1 = icmp slt i32 %k_1_s, %nA_read" [PartA/parta1_3.cpp:12]   --->   Operation 89 'icmp' 'tmp_5_1' <Predicate = true> <Delay = 2.47> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 2.47> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_7 : Operation 90 [1/1] (0.00ns)   --->   "br i1 %tmp_5_1, label %7, label %10" [PartA/parta1_3.cpp:12]   --->   Operation 90 'br' <Predicate = true> <Delay = 0.00>
ST_7 : Operation 91 [1/1] (0.00ns)   --->   "%tmp_28 = trunc i32 %k_1_s to i15" [PartA/parta1_3.cpp:15]   --->   Operation 91 'trunc' 'tmp_28' <Predicate = (tmp_5_1)> <Delay = 0.00>
ST_7 : Operation 92 [1/1] (1.94ns)   --->   "%tmp_14 = add i15 %tmp_1, %tmp_28" [PartA/parta1_3.cpp:15]   --->   Operation 92 'add' 'tmp_14' <Predicate = (tmp_5_1)> <Delay = 1.94> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 2.55> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_7 : Operation 93 [1/1] (0.00ns)   --->   "%tmp_14_cast = zext i15 %tmp_14 to i64" [PartA/parta1_3.cpp:15]   --->   Operation 93 'zext' 'tmp_14_cast' <Predicate = (tmp_5_1)> <Delay = 0.00>
ST_7 : Operation 94 [1/1] (0.00ns)   --->   "%A_addr_1 = getelementptr [10000 x i32]* %A, i64 0, i64 %tmp_14_cast" [PartA/parta1_3.cpp:15]   --->   Operation 94 'getelementptr' 'A_addr_1' <Predicate = (tmp_5_1)> <Delay = 0.00>
ST_7 : Operation 95 [1/1] (3.36ns)   --->   "%tmp_15 = mul i15 100, %tmp_28" [PartA/parta1_3.cpp:15]   --->   Operation 95 'mul' 'tmp_15' <Predicate = (tmp_5_1)> <Delay = 3.36> <Core = "DSP48">   --->   Core 61 'DSP48' <Latency = 0> <II = 1> <Delay = 6.38> <IPBlock> <Opcode : 'mul' 'add' 'sub' 'select'> <InPorts = 0> <OutPorts = 1> <Sync> <CReg>
ST_7 : Operation 96 [1/1] (3.02ns)   --->   "%tmp_16 = add i15 %tmp_15, %tmp_3" [PartA/parta1_3.cpp:15]   --->   Operation 96 'add' 'tmp_16' <Predicate = (tmp_5_1)> <Delay = 3.02> <Core = "DSP48">   --->   Core 61 'DSP48' <Latency = 0> <II = 1> <Delay = 6.38> <IPBlock> <Opcode : 'mul' 'add' 'sub' 'select'> <InPorts = 0> <OutPorts = 1> <Sync> <CReg>
ST_7 : Operation 97 [1/1] (0.00ns)   --->   "%tmp_16_cast = sext i15 %tmp_16 to i64" [PartA/parta1_3.cpp:15]   --->   Operation 97 'sext' 'tmp_16_cast' <Predicate = (tmp_5_1)> <Delay = 0.00>
ST_7 : Operation 98 [1/1] (0.00ns)   --->   "%B_addr_1 = getelementptr [10000 x i32]* %B, i64 0, i64 %tmp_16_cast" [PartA/parta1_3.cpp:15]   --->   Operation 98 'getelementptr' 'B_addr_1' <Predicate = (tmp_5_1)> <Delay = 0.00>
ST_7 : Operation 99 [2/2] (3.25ns)   --->   "%A_load_1 = load i32* %A_addr_1, align 4" [PartA/parta1_3.cpp:15]   --->   Operation 99 'load' 'A_load_1' <Predicate = (tmp_5_1)> <Delay = 3.25> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 10000> <RAM>
ST_7 : Operation 100 [2/2] (3.25ns)   --->   "%B_load_1 = load i32* %B_addr_1, align 4" [PartA/parta1_3.cpp:15]   --->   Operation 100 'load' 'B_load_1' <Predicate = (tmp_5_1)> <Delay = 3.25> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 10000> <RAM>

State 8 <SV = 7> <Delay = 3.25>
ST_8 : Operation 101 [1/2] (3.25ns)   --->   "%A_load_1 = load i32* %A_addr_1, align 4" [PartA/parta1_3.cpp:15]   --->   Operation 101 'load' 'A_load_1' <Predicate = true> <Delay = 3.25> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 10000> <RAM>
ST_8 : Operation 102 [1/2] (3.25ns)   --->   "%B_load_1 = load i32* %B_addr_1, align 4" [PartA/parta1_3.cpp:15]   --->   Operation 102 'load' 'B_load_1' <Predicate = true> <Delay = 3.25> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 10000> <RAM>

State 9 <SV = 8> <Delay = 8.51>
ST_9 : Operation 103 [1/1] (8.51ns)   --->   "%tmp_7_1 = mul nsw i32 %B_load_1, %A_load_1" [PartA/parta1_3.cpp:15]   --->   Operation 103 'mul' 'tmp_7_1' <Predicate = true> <Delay = 8.51> <Core = "Mul">   --->   Core 16 'Mul' <Latency = 0> <II = 1> <Delay = 8.51> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>

State 10 <SV = 9> <Delay = 9.63>
ST_10 : Operation 104 [1/1] (2.55ns)   --->   "%tmp_8_1 = add nsw i32 %tmp_8, %tmp_7_1" [PartA/parta1_3.cpp:15]   --->   Operation 104 'add' 'tmp_8_1' <Predicate = true> <Delay = 2.55> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 2.55> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_10 : Operation 105 [1/1] (3.25ns)   --->   "store i32 %tmp_8_1, i32* %C_addr, align 4" [PartA/parta1_3.cpp:15]   --->   Operation 105 'store' <Predicate = true> <Delay = 3.25> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 10000> <RAM>
ST_10 : Operation 106 [1/1] (0.00ns)   --->   "%k_1_1 = or i32 %k, 2" [PartA/parta1_3.cpp:12]   --->   Operation 106 'or' 'k_1_1' <Predicate = true> <Delay = 0.00>
ST_10 : Operation 107 [1/1] (2.47ns)   --->   "%tmp_5_2 = icmp slt i32 %k_1_1, %nA_read" [PartA/parta1_3.cpp:12]   --->   Operation 107 'icmp' 'tmp_5_2' <Predicate = true> <Delay = 2.47> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 2.47> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_10 : Operation 108 [1/1] (0.00ns)   --->   "br i1 %tmp_5_2, label %8, label %10" [PartA/parta1_3.cpp:12]   --->   Operation 108 'br' <Predicate = true> <Delay = 0.00>
ST_10 : Operation 109 [1/1] (0.00ns)   --->   "%tmp_29 = trunc i32 %k_1_1 to i15" [PartA/parta1_3.cpp:15]   --->   Operation 109 'trunc' 'tmp_29' <Predicate = (tmp_5_2)> <Delay = 0.00>
ST_10 : Operation 110 [1/1] (1.94ns)   --->   "%tmp_17 = add i15 %tmp_1, %tmp_29" [PartA/parta1_3.cpp:15]   --->   Operation 110 'add' 'tmp_17' <Predicate = (tmp_5_2)> <Delay = 1.94> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 2.55> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_10 : Operation 111 [1/1] (0.00ns)   --->   "%tmp_17_cast = zext i15 %tmp_17 to i64" [PartA/parta1_3.cpp:15]   --->   Operation 111 'zext' 'tmp_17_cast' <Predicate = (tmp_5_2)> <Delay = 0.00>
ST_10 : Operation 112 [1/1] (0.00ns)   --->   "%A_addr_2 = getelementptr [10000 x i32]* %A, i64 0, i64 %tmp_17_cast" [PartA/parta1_3.cpp:15]   --->   Operation 112 'getelementptr' 'A_addr_2' <Predicate = (tmp_5_2)> <Delay = 0.00>
ST_10 : Operation 113 [1/1] (3.36ns)   --->   "%tmp_18 = mul i15 100, %tmp_29" [PartA/parta1_3.cpp:15]   --->   Operation 113 'mul' 'tmp_18' <Predicate = (tmp_5_2)> <Delay = 3.36> <Core = "DSP48">   --->   Core 61 'DSP48' <Latency = 0> <II = 1> <Delay = 6.38> <IPBlock> <Opcode : 'mul' 'add' 'sub' 'select'> <InPorts = 0> <OutPorts = 1> <Sync> <CReg>
ST_10 : Operation 114 [1/1] (3.02ns)   --->   "%tmp_19 = add i15 %tmp_18, %tmp_3" [PartA/parta1_3.cpp:15]   --->   Operation 114 'add' 'tmp_19' <Predicate = (tmp_5_2)> <Delay = 3.02> <Core = "DSP48">   --->   Core 61 'DSP48' <Latency = 0> <II = 1> <Delay = 6.38> <IPBlock> <Opcode : 'mul' 'add' 'sub' 'select'> <InPorts = 0> <OutPorts = 1> <Sync> <CReg>
ST_10 : Operation 115 [1/1] (0.00ns)   --->   "%tmp_19_cast = sext i15 %tmp_19 to i64" [PartA/parta1_3.cpp:15]   --->   Operation 115 'sext' 'tmp_19_cast' <Predicate = (tmp_5_2)> <Delay = 0.00>
ST_10 : Operation 116 [1/1] (0.00ns)   --->   "%B_addr_2 = getelementptr [10000 x i32]* %B, i64 0, i64 %tmp_19_cast" [PartA/parta1_3.cpp:15]   --->   Operation 116 'getelementptr' 'B_addr_2' <Predicate = (tmp_5_2)> <Delay = 0.00>
ST_10 : Operation 117 [2/2] (3.25ns)   --->   "%A_load_2 = load i32* %A_addr_2, align 4" [PartA/parta1_3.cpp:15]   --->   Operation 117 'load' 'A_load_2' <Predicate = (tmp_5_2)> <Delay = 3.25> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 10000> <RAM>
ST_10 : Operation 118 [2/2] (3.25ns)   --->   "%B_load_2 = load i32* %B_addr_2, align 4" [PartA/parta1_3.cpp:15]   --->   Operation 118 'load' 'B_load_2' <Predicate = (tmp_5_2)> <Delay = 3.25> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 10000> <RAM>

State 11 <SV = 10> <Delay = 3.25>
ST_11 : Operation 119 [1/2] (3.25ns)   --->   "%A_load_2 = load i32* %A_addr_2, align 4" [PartA/parta1_3.cpp:15]   --->   Operation 119 'load' 'A_load_2' <Predicate = true> <Delay = 3.25> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 10000> <RAM>
ST_11 : Operation 120 [1/2] (3.25ns)   --->   "%B_load_2 = load i32* %B_addr_2, align 4" [PartA/parta1_3.cpp:15]   --->   Operation 120 'load' 'B_load_2' <Predicate = true> <Delay = 3.25> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 10000> <RAM>

State 12 <SV = 11> <Delay = 8.51>
ST_12 : Operation 121 [1/1] (8.51ns)   --->   "%tmp_7_2 = mul nsw i32 %B_load_2, %A_load_2" [PartA/parta1_3.cpp:15]   --->   Operation 121 'mul' 'tmp_7_2' <Predicate = true> <Delay = 8.51> <Core = "Mul">   --->   Core 16 'Mul' <Latency = 0> <II = 1> <Delay = 8.51> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>

State 13 <SV = 12> <Delay = 9.63>
ST_13 : Operation 122 [1/1] (2.55ns)   --->   "%tmp_8_2 = add nsw i32 %tmp_8_1, %tmp_7_2" [PartA/parta1_3.cpp:15]   --->   Operation 122 'add' 'tmp_8_2' <Predicate = (!tmp_26 & tmp_5_1 & tmp_5_2)> <Delay = 2.55> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 2.55> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_13 : Operation 123 [1/1] (3.25ns)   --->   "store i32 %tmp_8_2, i32* %C_addr, align 4" [PartA/parta1_3.cpp:15]   --->   Operation 123 'store' <Predicate = (!tmp_26 & tmp_5_1 & tmp_5_2)> <Delay = 3.25> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 10000> <RAM>
ST_13 : Operation 124 [1/1] (0.00ns)   --->   "%k_1_2 = or i32 %k, 3" [PartA/parta1_3.cpp:12]   --->   Operation 124 'or' 'k_1_2' <Predicate = (!tmp_26 & tmp_5_1 & tmp_5_2)> <Delay = 0.00>
ST_13 : Operation 125 [1/1] (2.47ns)   --->   "%tmp_5_3 = icmp slt i32 %k_1_2, %nA_read" [PartA/parta1_3.cpp:12]   --->   Operation 125 'icmp' 'tmp_5_3' <Predicate = (!tmp_26 & tmp_5_1 & tmp_5_2)> <Delay = 2.47> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 2.47> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_13 : Operation 126 [1/1] (0.00ns)   --->   "br i1 %tmp_5_3, label %9, label %10" [PartA/parta1_3.cpp:12]   --->   Operation 126 'br' <Predicate = (!tmp_26 & tmp_5_1 & tmp_5_2)> <Delay = 0.00>
ST_13 : Operation 127 [1/1] (0.00ns)   --->   "%tmp_30 = trunc i32 %k_1_2 to i15" [PartA/parta1_3.cpp:15]   --->   Operation 127 'trunc' 'tmp_30' <Predicate = (!tmp_26 & tmp_5_1 & tmp_5_2 & tmp_5_3)> <Delay = 0.00>
ST_13 : Operation 128 [1/1] (1.94ns)   --->   "%tmp_20 = add i15 %tmp_1, %tmp_30" [PartA/parta1_3.cpp:15]   --->   Operation 128 'add' 'tmp_20' <Predicate = (!tmp_26 & tmp_5_1 & tmp_5_2 & tmp_5_3)> <Delay = 1.94> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 2.55> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_13 : Operation 129 [1/1] (0.00ns)   --->   "%tmp_20_cast = zext i15 %tmp_20 to i64" [PartA/parta1_3.cpp:15]   --->   Operation 129 'zext' 'tmp_20_cast' <Predicate = (!tmp_26 & tmp_5_1 & tmp_5_2 & tmp_5_3)> <Delay = 0.00>
ST_13 : Operation 130 [1/1] (0.00ns)   --->   "%A_addr_3 = getelementptr [10000 x i32]* %A, i64 0, i64 %tmp_20_cast" [PartA/parta1_3.cpp:15]   --->   Operation 130 'getelementptr' 'A_addr_3' <Predicate = (!tmp_26 & tmp_5_1 & tmp_5_2 & tmp_5_3)> <Delay = 0.00>
ST_13 : Operation 131 [1/1] (3.36ns)   --->   "%tmp_21 = mul i15 100, %tmp_30" [PartA/parta1_3.cpp:15]   --->   Operation 131 'mul' 'tmp_21' <Predicate = (!tmp_26 & tmp_5_1 & tmp_5_2 & tmp_5_3)> <Delay = 3.36> <Core = "DSP48">   --->   Core 61 'DSP48' <Latency = 0> <II = 1> <Delay = 6.38> <IPBlock> <Opcode : 'mul' 'add' 'sub' 'select'> <InPorts = 0> <OutPorts = 1> <Sync> <CReg>
ST_13 : Operation 132 [1/1] (3.02ns)   --->   "%tmp_22 = add i15 %tmp_21, %tmp_3" [PartA/parta1_3.cpp:15]   --->   Operation 132 'add' 'tmp_22' <Predicate = (!tmp_26 & tmp_5_1 & tmp_5_2 & tmp_5_3)> <Delay = 3.02> <Core = "DSP48">   --->   Core 61 'DSP48' <Latency = 0> <II = 1> <Delay = 6.38> <IPBlock> <Opcode : 'mul' 'add' 'sub' 'select'> <InPorts = 0> <OutPorts = 1> <Sync> <CReg>
ST_13 : Operation 133 [1/1] (0.00ns)   --->   "%tmp_22_cast = sext i15 %tmp_22 to i64" [PartA/parta1_3.cpp:15]   --->   Operation 133 'sext' 'tmp_22_cast' <Predicate = (!tmp_26 & tmp_5_1 & tmp_5_2 & tmp_5_3)> <Delay = 0.00>
ST_13 : Operation 134 [1/1] (0.00ns)   --->   "%B_addr_3 = getelementptr [10000 x i32]* %B, i64 0, i64 %tmp_22_cast" [PartA/parta1_3.cpp:15]   --->   Operation 134 'getelementptr' 'B_addr_3' <Predicate = (!tmp_26 & tmp_5_1 & tmp_5_2 & tmp_5_3)> <Delay = 0.00>
ST_13 : Operation 135 [2/2] (3.25ns)   --->   "%A_load_3 = load i32* %A_addr_3, align 4" [PartA/parta1_3.cpp:15]   --->   Operation 135 'load' 'A_load_3' <Predicate = (!tmp_26 & tmp_5_1 & tmp_5_2 & tmp_5_3)> <Delay = 3.25> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 10000> <RAM>
ST_13 : Operation 136 [2/2] (3.25ns)   --->   "%B_load_3 = load i32* %B_addr_3, align 4" [PartA/parta1_3.cpp:15]   --->   Operation 136 'load' 'B_load_3' <Predicate = (!tmp_26 & tmp_5_1 & tmp_5_2 & tmp_5_3)> <Delay = 3.25> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 10000> <RAM>
ST_13 : Operation 137 [1/1] (2.55ns)   --->   "%k_1_3 = add nsw i32 4, %k" [PartA/parta1_3.cpp:12]   --->   Operation 137 'add' 'k_1_3' <Predicate = (!tmp_26 & tmp_5_1 & tmp_5_2 & tmp_5_3)> <Delay = 2.55> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 2.55> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_13 : Operation 138 [1/1] (0.00ns)   --->   "%empty = call i32 (...)* @_ssdm_op_SpecRegionEnd([10 x i8]* @p_str18, i32 %tmp_5) nounwind" [PartA/parta1_3.cpp:17]   --->   Operation 138 'specregionend' 'empty' <Predicate = (tmp_26) | (!tmp_5_1) | (!tmp_5_2) | (!tmp_5_3)> <Delay = 0.00>
ST_13 : Operation 139 [1/1] (0.00ns)   --->   "br label %3" [PartA/parta1_3.cpp:10]   --->   Operation 139 'br' <Predicate = (tmp_26) | (!tmp_5_1) | (!tmp_5_2) | (!tmp_5_3)> <Delay = 0.00>

State 14 <SV = 13> <Delay = 3.25>
ST_14 : Operation 140 [1/2] (3.25ns)   --->   "%A_load_3 = load i32* %A_addr_3, align 4" [PartA/parta1_3.cpp:15]   --->   Operation 140 'load' 'A_load_3' <Predicate = true> <Delay = 3.25> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 10000> <RAM>
ST_14 : Operation 141 [1/2] (3.25ns)   --->   "%B_load_3 = load i32* %B_addr_3, align 4" [PartA/parta1_3.cpp:15]   --->   Operation 141 'load' 'B_load_3' <Predicate = true> <Delay = 3.25> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 10000> <RAM>

State 15 <SV = 14> <Delay = 8.51>
ST_15 : Operation 142 [1/1] (8.51ns)   --->   "%tmp_7_3 = mul nsw i32 %B_load_3, %A_load_3" [PartA/parta1_3.cpp:15]   --->   Operation 142 'mul' 'tmp_7_3' <Predicate = true> <Delay = 8.51> <Core = "Mul">   --->   Core 16 'Mul' <Latency = 0> <II = 1> <Delay = 8.51> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>

State 16 <SV = 15> <Delay = 5.80>
ST_16 : Operation 143 [1/1] (2.55ns)   --->   "%tmp_8_3 = add nsw i32 %tmp_8_2, %tmp_7_3" [PartA/parta1_3.cpp:15]   --->   Operation 143 'add' 'tmp_8_3' <Predicate = true> <Delay = 2.55> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 2.55> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_16 : Operation 144 [1/1] (3.25ns)   --->   "store i32 %tmp_8_3, i32* %C_addr, align 4" [PartA/parta1_3.cpp:15]   --->   Operation 144 'store' <Predicate = true> <Delay = 3.25> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 10000> <RAM>
ST_16 : Operation 145 [1/1] (0.00ns)   --->   "br label %5" [PartA/parta1_3.cpp:12]   --->   Operation 145 'br' <Predicate = true> <Delay = 0.00>


============================================================
+ Verbose Summary: Timing violations
============================================================
Target clock period: 10ns, clock uncertainty: 1.25ns.

 <State 1>: 1.77ns
The critical path consists of the following:
	multiplexor before 'phi' operation ('i') with incoming values : ('i', PartA/parta1_3.cpp:8) [25]  (1.77 ns)

 <State 2>: 2.8ns
The critical path consists of the following:
	'phi' operation ('phi_mul') with incoming values : ('next_mul') [26]  (0 ns)
	'add' operation ('next_mul') [28]  (2.8 ns)

 <State 3>: 5.81ns
The critical path consists of the following:
	'sub' operation ('p_neg') [53]  (2.55 ns)
	'sub' operation ('p_neg_t') [55]  (2.49 ns)
	'select' operation ('tmp_23') [57]  (0 ns)
	'select' operation ('tmp_24') [58]  (0.768 ns)

 <State 4>: 9.63ns
The critical path consists of the following:
	'phi' operation ('k', PartA/parta1_3.cpp:12) with incoming values : ('k_1_3', PartA/parta1_3.cpp:12) [62]  (0 ns)
	'mul' operation ('tmp_12', PartA/parta1_3.cpp:15) [71]  (3.36 ns)
	'add' operation ('tmp_13', PartA/parta1_3.cpp:15) [72]  (3.02 ns)
	'getelementptr' operation ('B_addr', PartA/parta1_3.cpp:15) [74]  (0 ns)
	'load' operation ('B_load', PartA/parta1_3.cpp:15) on array 'B' [76]  (3.25 ns)

 <State 5>: 3.25ns
The critical path consists of the following:
	'load' operation ('A_load', PartA/parta1_3.cpp:15) on array 'A' [75]  (3.25 ns)

 <State 6>: 8.51ns
The critical path consists of the following:
	'mul' operation ('tmp_7', PartA/parta1_3.cpp:15) [77]  (8.51 ns)

 <State 7>: 9.63ns
The critical path consists of the following:
	'or' operation ('k_1_s', PartA/parta1_3.cpp:12) [81]  (0 ns)
	'mul' operation ('tmp_15', PartA/parta1_3.cpp:15) [89]  (3.36 ns)
	'add' operation ('tmp_16', PartA/parta1_3.cpp:15) [90]  (3.02 ns)
	'getelementptr' operation ('B_addr_1', PartA/parta1_3.cpp:15) [92]  (0 ns)
	'load' operation ('B_load_1', PartA/parta1_3.cpp:15) on array 'B' [94]  (3.25 ns)

 <State 8>: 3.25ns
The critical path consists of the following:
	'load' operation ('A_load_1', PartA/parta1_3.cpp:15) on array 'A' [93]  (3.25 ns)

 <State 9>: 8.51ns
The critical path consists of the following:
	'mul' operation ('tmp_7_1', PartA/parta1_3.cpp:15) [95]  (8.51 ns)

 <State 10>: 9.63ns
The critical path consists of the following:
	'or' operation ('k_1_1', PartA/parta1_3.cpp:12) [98]  (0 ns)
	'mul' operation ('tmp_18', PartA/parta1_3.cpp:15) [106]  (3.36 ns)
	'add' operation ('tmp_19', PartA/parta1_3.cpp:15) [107]  (3.02 ns)
	'getelementptr' operation ('B_addr_2', PartA/parta1_3.cpp:15) [109]  (0 ns)
	'load' operation ('B_load_2', PartA/parta1_3.cpp:15) on array 'B' [111]  (3.25 ns)

 <State 11>: 3.25ns
The critical path consists of the following:
	'load' operation ('A_load_2', PartA/parta1_3.cpp:15) on array 'A' [110]  (3.25 ns)

 <State 12>: 8.51ns
The critical path consists of the following:
	'mul' operation ('tmp_7_2', PartA/parta1_3.cpp:15) [112]  (8.51 ns)

 <State 13>: 9.63ns
The critical path consists of the following:
	'or' operation ('k_1_2', PartA/parta1_3.cpp:12) [115]  (0 ns)
	'mul' operation ('tmp_21', PartA/parta1_3.cpp:15) [123]  (3.36 ns)
	'add' operation ('tmp_22', PartA/parta1_3.cpp:15) [124]  (3.02 ns)
	'getelementptr' operation ('B_addr_3', PartA/parta1_3.cpp:15) [126]  (0 ns)
	'load' operation ('B_load_3', PartA/parta1_3.cpp:15) on array 'B' [128]  (3.25 ns)

 <State 14>: 3.25ns
The critical path consists of the following:
	'load' operation ('A_load_3', PartA/parta1_3.cpp:15) on array 'A' [127]  (3.25 ns)

 <State 15>: 8.51ns
The critical path consists of the following:
	'mul' operation ('tmp_7_3', PartA/parta1_3.cpp:15) [129]  (8.51 ns)

 <State 16>: 5.81ns
The critical path consists of the following:
	'add' operation ('tmp_8_3', PartA/parta1_3.cpp:15) [130]  (2.55 ns)
	'store' operation (PartA/parta1_3.cpp:15) of variable 'tmp_8_3', PartA/parta1_3.cpp:15 on array 'C' [131]  (3.25 ns)


============================================================
+ Verbose Summary: Binding
============================================================
N/A
* FSMD analyzer results:
  - Output states:
 - Input state : 
  - Chain level:
	State 1
	State 2
	State 3
	State 4
	State 5
	State 6
	State 7
	State 8
	State 9
	State 10
	State 11
	State 12
	State 13
	State 14
	State 15
	State 16


============================================================
+ Verbose Summary: Datapath Resource usage 
============================================================
N/A
