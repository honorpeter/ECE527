// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2018.2
// Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#include "parta1_5.h"
#include "AESL_pkg.h"

using namespace std;

namespace ap_rtl {

const sc_logic parta1_5::ap_const_logic_1 = sc_dt::Log_1;
const sc_logic parta1_5::ap_const_logic_0 = sc_dt::Log_0;
const sc_lv<5> parta1_5::ap_ST_fsm_state1 = "1";
const sc_lv<5> parta1_5::ap_ST_fsm_state2 = "10";
const sc_lv<5> parta1_5::ap_ST_fsm_pp0_stage0 = "100";
const sc_lv<5> parta1_5::ap_ST_fsm_pp0_stage1 = "1000";
const sc_lv<5> parta1_5::ap_ST_fsm_state9 = "10000";
const sc_lv<32> parta1_5::ap_const_lv32_0 = "00000000000000000000000000000000";
const bool parta1_5::ap_const_boolean_1 = true;
const sc_lv<32> parta1_5::ap_const_lv32_1 = "1";
const sc_lv<32> parta1_5::ap_const_lv32_2 = "10";
const bool parta1_5::ap_const_boolean_0 = false;
const sc_lv<1> parta1_5::ap_const_lv1_0 = "0";
const sc_lv<32> parta1_5::ap_const_lv32_3 = "11";
const sc_lv<1> parta1_5::ap_const_lv1_1 = "1";
const sc_lv<31> parta1_5::ap_const_lv31_0 = "0000000000000000000000000000000";
const sc_lv<32> parta1_5::ap_const_lv32_4 = "100";
const sc_lv<38> parta1_5::ap_const_lv38_0 = "00000000000000000000000000000000000000";
const sc_lv<64> parta1_5::ap_const_lv64_0 = "0000000000000000000000000000000000000000000000000000000000000000";
const sc_lv<38> parta1_5::ap_const_lv38_64 = "1100100";
const sc_lv<31> parta1_5::ap_const_lv31_1 = "1";
const sc_lv<64> parta1_5::ap_const_lv64_1 = "1";
const sc_lv<15> parta1_5::ap_const_lv15_64 = "1100100";

parta1_5::parta1_5(sc_module_name name) : sc_module(name), mVcdFile(0) {
    parta1_5_mul_mul_bkb_U1 = new parta1_5_mul_mul_bkb<1,1,8,15,15>("parta1_5_mul_mul_bkb_U1");
    parta1_5_mul_mul_bkb_U1->din0(tmp_3_fu_337_p0);
    parta1_5_mul_mul_bkb_U1->din1(tmp_2_reg_396);
    parta1_5_mul_mul_bkb_U1->dout(tmp_3_fu_337_p2);

    SC_METHOD(thread_ap_clk_no_reset_);
    dont_initialize();
    sensitive << ( ap_clk.pos() );

    SC_METHOD(thread_A_address0);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_block_pp0_stage0 );
    sensitive << ( tmp_10_cast_fu_313_p1 );

    SC_METHOD(thread_A_ce0);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( ap_enable_reg_pp0_iter1 );

    SC_METHOD(thread_B_address0);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_block_pp0_stage0 );
    sensitive << ( tmp_11_cast_fu_322_p1 );

    SC_METHOD(thread_B_ce0);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( ap_enable_reg_pp0_iter1 );

    SC_METHOD(thread_C_address0);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_CS_fsm_pp0_stage1 );
    sensitive << ( C_addr_1_reg_414_pp0_iter1_reg );
    sensitive << ( ap_enable_reg_pp0_iter2 );
    sensitive << ( ap_block_pp0_stage0 );
    sensitive << ( ap_block_pp0_stage1 );

    SC_METHOD(thread_C_ce0);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( ap_CS_fsm_pp0_stage1 );
    sensitive << ( ap_block_pp0_stage1_11001 );
    sensitive << ( ap_enable_reg_pp0_iter2 );

    SC_METHOD(thread_C_d0);
    sensitive << ( C_q0 );
    sensitive << ( ap_CS_fsm_pp0_stage1 );
    sensitive << ( tmp_7_reg_444 );
    sensitive << ( ap_enable_reg_pp0_iter2 );
    sensitive << ( ap_block_pp0_stage1 );

    SC_METHOD(thread_C_we0);
    sensitive << ( exitcond_flatten_reg_377_pp0_iter2_reg );
    sensitive << ( ap_CS_fsm_pp0_stage1 );
    sensitive << ( ap_block_pp0_stage1_11001 );
    sensitive << ( ap_enable_reg_pp0_iter2 );

    SC_METHOD(thread_ap_CS_fsm_pp0_stage0);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_pp0_stage1);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state1);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state2);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state9);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_block_pp0_stage0);

    SC_METHOD(thread_ap_block_pp0_stage0_11001);

    SC_METHOD(thread_ap_block_pp0_stage0_subdone);

    SC_METHOD(thread_ap_block_pp0_stage1);

    SC_METHOD(thread_ap_block_pp0_stage1_11001);

    SC_METHOD(thread_ap_block_pp0_stage1_subdone);

    SC_METHOD(thread_ap_block_state3_pp0_stage0_iter0);

    SC_METHOD(thread_ap_block_state4_pp0_stage1_iter0);

    SC_METHOD(thread_ap_block_state5_pp0_stage0_iter1);

    SC_METHOD(thread_ap_block_state6_pp0_stage1_iter1);

    SC_METHOD(thread_ap_block_state7_pp0_stage0_iter2);

    SC_METHOD(thread_ap_block_state8_pp0_stage1_iter2);

    SC_METHOD(thread_ap_condition_pp0_exit_iter0_state3);
    sensitive << ( exitcond_flatten_fu_250_p2 );

    SC_METHOD(thread_ap_done);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( tmp_fu_230_p2 );

    SC_METHOD(thread_ap_enable_pp0);
    sensitive << ( ap_idle_pp0 );

    SC_METHOD(thread_ap_idle);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );

    SC_METHOD(thread_ap_idle_pp0);
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_enable_reg_pp0_iter2 );

    SC_METHOD(thread_ap_phi_mux_indvar_flatten_phi_fu_167_p4);
    sensitive << ( indvar_flatten_reg_163 );
    sensitive << ( exitcond_flatten_reg_377 );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( indvar_flatten_next_reg_381 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_block_pp0_stage0 );

    SC_METHOD(thread_ap_phi_mux_j_phi_fu_178_p4);
    sensitive << ( j_reg_174 );
    sensitive << ( exitcond_flatten_reg_377 );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( tmp_3_mid2_v_reg_391 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_block_pp0_stage0 );

    SC_METHOD(thread_ap_phi_mux_k_phi_fu_189_p4);
    sensitive << ( k_reg_185 );
    sensitive << ( exitcond_flatten_reg_377 );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( k_1_reg_419 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_block_pp0_stage0 );

    SC_METHOD(thread_ap_ready);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( tmp_fu_230_p2 );

    SC_METHOD(thread_bound_fu_204_p0);
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( bound_fu_204_p00 );

    SC_METHOD(thread_bound_fu_204_p00);
    sensitive << ( nA );

    SC_METHOD(thread_bound_fu_204_p1);
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( bound_fu_204_p10 );

    SC_METHOD(thread_bound_fu_204_p10);
    sensitive << ( nC );

    SC_METHOD(thread_bound_fu_204_p2);
    sensitive << ( bound_fu_204_p0 );
    sensitive << ( bound_fu_204_p1 );

    SC_METHOD(thread_exitcond_flatten_fu_250_p2);
    sensitive << ( bound_reg_352 );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_phi_mux_indvar_flatten_phi_fu_167_p4 );

    SC_METHOD(thread_i_1_fu_235_p2);
    sensitive << ( i_reg_141 );

    SC_METHOD(thread_i_cast_fu_226_p1);
    sensitive << ( i_reg_141 );

    SC_METHOD(thread_indvar_flatten_next_fu_255_p2);
    sensitive << ( ap_phi_mux_indvar_flatten_phi_fu_167_p4 );

    SC_METHOD(thread_j_1_fu_261_p2);
    sensitive << ( ap_phi_mux_j_phi_fu_178_p4 );

    SC_METHOD(thread_k_1_fu_300_p2);
    sensitive << ( k_mid2_reg_386 );

    SC_METHOD(thread_k_cast_fu_241_p1);
    sensitive << ( ap_phi_mux_k_phi_fu_189_p4 );

    SC_METHOD(thread_k_mid2_fu_267_p3);
    sensitive << ( ap_phi_mux_k_phi_fu_189_p4 );
    sensitive << ( tmp_5_fu_245_p2 );

    SC_METHOD(thread_next_mul_fu_220_p2);
    sensitive << ( phi_mul_reg_152 );

    SC_METHOD(thread_tmp_10_cast_fu_313_p1);
    sensitive << ( tmp_10_fu_309_p2 );

    SC_METHOD(thread_tmp_10_fu_309_p2);
    sensitive << ( tmp_1_reg_357 );
    sensitive << ( tmp_6_reg_402 );

    SC_METHOD(thread_tmp_11_cast_fu_322_p1);
    sensitive << ( tmp_11_fu_318_p2 );

    SC_METHOD(thread_tmp_11_fu_318_p2);
    sensitive << ( tmp_6_reg_402 );
    sensitive << ( tmp_3_reg_408 );

    SC_METHOD(thread_tmp_1_fu_210_p1);
    sensitive << ( phi_mul_reg_152 );

    SC_METHOD(thread_tmp_2_fu_283_p1);
    sensitive << ( tmp_3_mid2_v_fu_275_p3 );

    SC_METHOD(thread_tmp_3_fu_337_p0);
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_CS_fsm_pp0_stage1 );
    sensitive << ( ap_block_pp0_stage1 );

    SC_METHOD(thread_tmp_3_mid2_v_fu_275_p3);
    sensitive << ( ap_phi_mux_j_phi_fu_178_p4 );
    sensitive << ( tmp_5_fu_245_p2 );
    sensitive << ( j_1_fu_261_p2 );

    SC_METHOD(thread_tmp_5_fu_245_p2);
    sensitive << ( nA );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( k_cast_fu_241_p1 );

    SC_METHOD(thread_tmp_6_fu_287_p1);
    sensitive << ( k_mid2_fu_267_p3 );

    SC_METHOD(thread_tmp_7_fu_327_p2);
    sensitive << ( A_load_reg_434 );
    sensitive << ( B_load_reg_439 );

    SC_METHOD(thread_tmp_9_cast_fu_295_p1);
    sensitive << ( tmp_9_fu_291_p2 );

    SC_METHOD(thread_tmp_9_fu_291_p2);
    sensitive << ( tmp_1_reg_357 );
    sensitive << ( tmp_2_reg_396 );

    SC_METHOD(thread_tmp_fu_230_p2);
    sensitive << ( mC );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( i_cast_fu_226_p1 );

    SC_METHOD(thread_ap_NS_fsm);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( tmp_fu_230_p2 );
    sensitive << ( exitcond_flatten_fu_250_p2 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_CS_fsm_pp0_stage1 );
    sensitive << ( ap_block_pp0_stage0_subdone );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_block_pp0_stage1_subdone );
    sensitive << ( ap_enable_reg_pp0_iter2 );

    SC_THREAD(thread_hdltv_gen);
    sensitive << ( ap_clk.pos() );

    ap_CS_fsm = "00001";
    ap_enable_reg_pp0_iter0 = SC_LOGIC_0;
    ap_enable_reg_pp0_iter1 = SC_LOGIC_0;
    ap_enable_reg_pp0_iter2 = SC_LOGIC_0;
    static int apTFileNum = 0;
    stringstream apTFilenSS;
    apTFilenSS << "parta1_5_sc_trace_" << apTFileNum ++;
    string apTFn = apTFilenSS.str();
    mVcdFile = sc_create_vcd_trace_file(apTFn.c_str());
    mVcdFile->set_time_unit(1, SC_PS);
    if (1) {
#ifdef __HLS_TRACE_LEVEL_PORT__
    sc_trace(mVcdFile, ap_clk, "(port)ap_clk");
    sc_trace(mVcdFile, ap_rst, "(port)ap_rst");
    sc_trace(mVcdFile, ap_start, "(port)ap_start");
    sc_trace(mVcdFile, ap_done, "(port)ap_done");
    sc_trace(mVcdFile, ap_idle, "(port)ap_idle");
    sc_trace(mVcdFile, ap_ready, "(port)ap_ready");
    sc_trace(mVcdFile, A_address0, "(port)A_address0");
    sc_trace(mVcdFile, A_ce0, "(port)A_ce0");
    sc_trace(mVcdFile, A_q0, "(port)A_q0");
    sc_trace(mVcdFile, B_address0, "(port)B_address0");
    sc_trace(mVcdFile, B_ce0, "(port)B_ce0");
    sc_trace(mVcdFile, B_q0, "(port)B_q0");
    sc_trace(mVcdFile, C_address0, "(port)C_address0");
    sc_trace(mVcdFile, C_ce0, "(port)C_ce0");
    sc_trace(mVcdFile, C_we0, "(port)C_we0");
    sc_trace(mVcdFile, C_d0, "(port)C_d0");
    sc_trace(mVcdFile, C_q0, "(port)C_q0");
    sc_trace(mVcdFile, mA, "(port)mA");
    sc_trace(mVcdFile, nA, "(port)nA");
    sc_trace(mVcdFile, mB, "(port)mB");
    sc_trace(mVcdFile, nB, "(port)nB");
    sc_trace(mVcdFile, mC, "(port)mC");
    sc_trace(mVcdFile, nC, "(port)nC");
#endif
#ifdef __HLS_TRACE_LEVEL_INT__
    sc_trace(mVcdFile, ap_CS_fsm, "ap_CS_fsm");
    sc_trace(mVcdFile, ap_CS_fsm_state1, "ap_CS_fsm_state1");
    sc_trace(mVcdFile, indvar_flatten_reg_163, "indvar_flatten_reg_163");
    sc_trace(mVcdFile, j_reg_174, "j_reg_174");
    sc_trace(mVcdFile, k_reg_185, "k_reg_185");
    sc_trace(mVcdFile, bound_fu_204_p2, "bound_fu_204_p2");
    sc_trace(mVcdFile, bound_reg_352, "bound_reg_352");
    sc_trace(mVcdFile, tmp_1_fu_210_p1, "tmp_1_fu_210_p1");
    sc_trace(mVcdFile, tmp_1_reg_357, "tmp_1_reg_357");
    sc_trace(mVcdFile, ap_CS_fsm_state2, "ap_CS_fsm_state2");
    sc_trace(mVcdFile, next_mul_fu_220_p2, "next_mul_fu_220_p2");
    sc_trace(mVcdFile, next_mul_reg_363, "next_mul_reg_363");
    sc_trace(mVcdFile, tmp_fu_230_p2, "tmp_fu_230_p2");
    sc_trace(mVcdFile, i_1_fu_235_p2, "i_1_fu_235_p2");
    sc_trace(mVcdFile, i_1_reg_372, "i_1_reg_372");
    sc_trace(mVcdFile, exitcond_flatten_fu_250_p2, "exitcond_flatten_fu_250_p2");
    sc_trace(mVcdFile, exitcond_flatten_reg_377, "exitcond_flatten_reg_377");
    sc_trace(mVcdFile, ap_CS_fsm_pp0_stage0, "ap_CS_fsm_pp0_stage0");
    sc_trace(mVcdFile, ap_block_state3_pp0_stage0_iter0, "ap_block_state3_pp0_stage0_iter0");
    sc_trace(mVcdFile, ap_block_state5_pp0_stage0_iter1, "ap_block_state5_pp0_stage0_iter1");
    sc_trace(mVcdFile, ap_block_state7_pp0_stage0_iter2, "ap_block_state7_pp0_stage0_iter2");
    sc_trace(mVcdFile, ap_block_pp0_stage0_11001, "ap_block_pp0_stage0_11001");
    sc_trace(mVcdFile, exitcond_flatten_reg_377_pp0_iter1_reg, "exitcond_flatten_reg_377_pp0_iter1_reg");
    sc_trace(mVcdFile, exitcond_flatten_reg_377_pp0_iter2_reg, "exitcond_flatten_reg_377_pp0_iter2_reg");
    sc_trace(mVcdFile, indvar_flatten_next_fu_255_p2, "indvar_flatten_next_fu_255_p2");
    sc_trace(mVcdFile, indvar_flatten_next_reg_381, "indvar_flatten_next_reg_381");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter0, "ap_enable_reg_pp0_iter0");
    sc_trace(mVcdFile, k_mid2_fu_267_p3, "k_mid2_fu_267_p3");
    sc_trace(mVcdFile, k_mid2_reg_386, "k_mid2_reg_386");
    sc_trace(mVcdFile, tmp_3_mid2_v_fu_275_p3, "tmp_3_mid2_v_fu_275_p3");
    sc_trace(mVcdFile, tmp_3_mid2_v_reg_391, "tmp_3_mid2_v_reg_391");
    sc_trace(mVcdFile, tmp_2_fu_283_p1, "tmp_2_fu_283_p1");
    sc_trace(mVcdFile, tmp_2_reg_396, "tmp_2_reg_396");
    sc_trace(mVcdFile, tmp_6_fu_287_p1, "tmp_6_fu_287_p1");
    sc_trace(mVcdFile, tmp_6_reg_402, "tmp_6_reg_402");
    sc_trace(mVcdFile, tmp_3_fu_337_p2, "tmp_3_fu_337_p2");
    sc_trace(mVcdFile, tmp_3_reg_408, "tmp_3_reg_408");
    sc_trace(mVcdFile, ap_CS_fsm_pp0_stage1, "ap_CS_fsm_pp0_stage1");
    sc_trace(mVcdFile, ap_block_state4_pp0_stage1_iter0, "ap_block_state4_pp0_stage1_iter0");
    sc_trace(mVcdFile, ap_block_state6_pp0_stage1_iter1, "ap_block_state6_pp0_stage1_iter1");
    sc_trace(mVcdFile, ap_block_state8_pp0_stage1_iter2, "ap_block_state8_pp0_stage1_iter2");
    sc_trace(mVcdFile, ap_block_pp0_stage1_11001, "ap_block_pp0_stage1_11001");
    sc_trace(mVcdFile, C_addr_1_reg_414, "C_addr_1_reg_414");
    sc_trace(mVcdFile, C_addr_1_reg_414_pp0_iter1_reg, "C_addr_1_reg_414_pp0_iter1_reg");
    sc_trace(mVcdFile, k_1_fu_300_p2, "k_1_fu_300_p2");
    sc_trace(mVcdFile, k_1_reg_419, "k_1_reg_419");
    sc_trace(mVcdFile, A_load_reg_434, "A_load_reg_434");
    sc_trace(mVcdFile, B_load_reg_439, "B_load_reg_439");
    sc_trace(mVcdFile, tmp_7_fu_327_p2, "tmp_7_fu_327_p2");
    sc_trace(mVcdFile, tmp_7_reg_444, "tmp_7_reg_444");
    sc_trace(mVcdFile, ap_block_pp0_stage0_subdone, "ap_block_pp0_stage0_subdone");
    sc_trace(mVcdFile, ap_condition_pp0_exit_iter0_state3, "ap_condition_pp0_exit_iter0_state3");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter1, "ap_enable_reg_pp0_iter1");
    sc_trace(mVcdFile, ap_block_pp0_stage1_subdone, "ap_block_pp0_stage1_subdone");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter2, "ap_enable_reg_pp0_iter2");
    sc_trace(mVcdFile, i_reg_141, "i_reg_141");
    sc_trace(mVcdFile, ap_CS_fsm_state9, "ap_CS_fsm_state9");
    sc_trace(mVcdFile, phi_mul_reg_152, "phi_mul_reg_152");
    sc_trace(mVcdFile, ap_phi_mux_indvar_flatten_phi_fu_167_p4, "ap_phi_mux_indvar_flatten_phi_fu_167_p4");
    sc_trace(mVcdFile, ap_block_pp0_stage0, "ap_block_pp0_stage0");
    sc_trace(mVcdFile, ap_phi_mux_j_phi_fu_178_p4, "ap_phi_mux_j_phi_fu_178_p4");
    sc_trace(mVcdFile, ap_phi_mux_k_phi_fu_189_p4, "ap_phi_mux_k_phi_fu_189_p4");
    sc_trace(mVcdFile, tmp_9_cast_fu_295_p1, "tmp_9_cast_fu_295_p1");
    sc_trace(mVcdFile, ap_block_pp0_stage1, "ap_block_pp0_stage1");
    sc_trace(mVcdFile, tmp_10_cast_fu_313_p1, "tmp_10_cast_fu_313_p1");
    sc_trace(mVcdFile, tmp_11_cast_fu_322_p1, "tmp_11_cast_fu_322_p1");
    sc_trace(mVcdFile, bound_fu_204_p0, "bound_fu_204_p0");
    sc_trace(mVcdFile, bound_fu_204_p1, "bound_fu_204_p1");
    sc_trace(mVcdFile, i_cast_fu_226_p1, "i_cast_fu_226_p1");
    sc_trace(mVcdFile, k_cast_fu_241_p1, "k_cast_fu_241_p1");
    sc_trace(mVcdFile, tmp_5_fu_245_p2, "tmp_5_fu_245_p2");
    sc_trace(mVcdFile, j_1_fu_261_p2, "j_1_fu_261_p2");
    sc_trace(mVcdFile, tmp_9_fu_291_p2, "tmp_9_fu_291_p2");
    sc_trace(mVcdFile, tmp_10_fu_309_p2, "tmp_10_fu_309_p2");
    sc_trace(mVcdFile, tmp_11_fu_318_p2, "tmp_11_fu_318_p2");
    sc_trace(mVcdFile, tmp_3_fu_337_p0, "tmp_3_fu_337_p0");
    sc_trace(mVcdFile, ap_NS_fsm, "ap_NS_fsm");
    sc_trace(mVcdFile, ap_idle_pp0, "ap_idle_pp0");
    sc_trace(mVcdFile, ap_enable_pp0, "ap_enable_pp0");
    sc_trace(mVcdFile, bound_fu_204_p00, "bound_fu_204_p00");
    sc_trace(mVcdFile, bound_fu_204_p10, "bound_fu_204_p10");
#endif

    }
    mHdltvinHandle.open("parta1_5.hdltvin.dat");
    mHdltvoutHandle.open("parta1_5.hdltvout.dat");
}

parta1_5::~parta1_5() {
    if (mVcdFile) 
        sc_close_vcd_trace_file(mVcdFile);

    mHdltvinHandle << "] " << endl;
    mHdltvoutHandle << "] " << endl;
    mHdltvinHandle.close();
    mHdltvoutHandle.close();
    delete parta1_5_mul_mul_bkb_U1;
}

void parta1_5::thread_ap_clk_no_reset_() {
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_CS_fsm = ap_ST_fsm_state1;
    } else {
        ap_CS_fsm = ap_NS_fsm.read();
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter0 = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
             esl_seteq<1,1,1>(ap_const_logic_1, ap_condition_pp0_exit_iter0_state3.read()) && 
             esl_seteq<1,1,1>(ap_const_boolean_0, ap_block_pp0_stage0_subdone.read()))) {
            ap_enable_reg_pp0_iter0 = ap_const_logic_0;
        } else if ((esl_seteq<1,1,1>(tmp_fu_230_p2.read(), ap_const_lv1_1) && 
                    esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()))) {
            ap_enable_reg_pp0_iter0 = ap_const_logic_1;
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter1 = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage1.read()) && esl_seteq<1,1,1>(ap_const_boolean_0, ap_block_pp0_stage1_subdone.read()))) {
            if (esl_seteq<1,1,1>(ap_const_logic_1, ap_condition_pp0_exit_iter0_state3.read())) {
                ap_enable_reg_pp0_iter1 = (ap_condition_pp0_exit_iter0_state3.read() ^ ap_const_logic_1);
            } else if (esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1)) {
                ap_enable_reg_pp0_iter1 = ap_enable_reg_pp0_iter0.read();
            }
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter2 = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage1.read()) && 
             esl_seteq<1,1,1>(ap_const_boolean_0, ap_block_pp0_stage1_subdone.read()))) {
            ap_enable_reg_pp0_iter2 = ap_enable_reg_pp0_iter1.read();
        } else if ((esl_seteq<1,1,1>(tmp_fu_230_p2.read(), ap_const_lv1_1) && 
                    esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()))) {
            ap_enable_reg_pp0_iter2 = ap_const_logic_0;
        }
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read())) {
        i_reg_141 = i_1_reg_372.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
                esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
        i_reg_141 = ap_const_lv31_0;
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(exitcond_flatten_reg_377.read(), ap_const_lv1_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()))) {
        indvar_flatten_reg_163 = indvar_flatten_next_reg_381.read();
    } else if ((esl_seteq<1,1,1>(tmp_fu_230_p2.read(), ap_const_lv1_1) && 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()))) {
        indvar_flatten_reg_163 = ap_const_lv64_0;
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(exitcond_flatten_reg_377.read(), ap_const_lv1_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()))) {
        j_reg_174 = tmp_3_mid2_v_reg_391.read();
    } else if ((esl_seteq<1,1,1>(tmp_fu_230_p2.read(), ap_const_lv1_1) && 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()))) {
        j_reg_174 = ap_const_lv31_0;
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(exitcond_flatten_reg_377.read(), ap_const_lv1_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()))) {
        k_reg_185 = k_1_reg_419.read();
    } else if ((esl_seteq<1,1,1>(tmp_fu_230_p2.read(), ap_const_lv1_1) && 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()))) {
        k_reg_185 = ap_const_lv31_0;
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read())) {
        phi_mul_reg_152 = next_mul_reg_363.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
                esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
        phi_mul_reg_152 = ap_const_lv38_0;
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage1.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage1_11001.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(exitcond_flatten_reg_377_pp0_iter1_reg.read(), ap_const_lv1_0))) {
        A_load_reg_434 = A_q0.read();
        B_load_reg_439 = B_q0.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage1.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage1_11001.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(exitcond_flatten_reg_377.read(), ap_const_lv1_0))) {
        C_addr_1_reg_414 =  (sc_lv<14>) (tmp_9_cast_fu_295_p1.read());
        tmp_3_reg_408 = tmp_3_fu_337_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage1.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage1_11001.read(), ap_const_boolean_0))) {
        C_addr_1_reg_414_pp0_iter1_reg = C_addr_1_reg_414.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
        bound_reg_352 = bound_fu_204_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0))) {
        exitcond_flatten_reg_377 = exitcond_flatten_fu_250_p2.read();
        exitcond_flatten_reg_377_pp0_iter1_reg = exitcond_flatten_reg_377.read();
        exitcond_flatten_reg_377_pp0_iter2_reg = exitcond_flatten_reg_377_pp0_iter1_reg.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read())) {
        i_1_reg_372 = i_1_fu_235_p2.read();
        next_mul_reg_363 = next_mul_fu_220_p2.read();
        tmp_1_reg_357 = tmp_1_fu_210_p1.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(ap_enable_reg_pp0_iter0.read(), ap_const_logic_1))) {
        indvar_flatten_next_reg_381 = indvar_flatten_next_fu_255_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_enable_reg_pp0_iter0.read(), ap_const_logic_1) && esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage1.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage1_11001.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(exitcond_flatten_reg_377.read(), ap_const_lv1_0))) {
        k_1_reg_419 = k_1_fu_300_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(exitcond_flatten_fu_250_p2.read(), ap_const_lv1_0))) {
        k_mid2_reg_386 = k_mid2_fu_267_p3.read();
        tmp_2_reg_396 = tmp_2_fu_283_p1.read();
        tmp_6_reg_402 = tmp_6_fu_287_p1.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(ap_enable_reg_pp0_iter0.read(), ap_const_logic_1) && esl_seteq<1,1,1>(exitcond_flatten_fu_250_p2.read(), ap_const_lv1_0))) {
        tmp_3_mid2_v_reg_391 = tmp_3_mid2_v_fu_275_p3.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(exitcond_flatten_reg_377_pp0_iter1_reg.read(), ap_const_lv1_0))) {
        tmp_7_reg_444 = tmp_7_fu_327_p2.read();
    }
}

void parta1_5::thread_A_address0() {
    A_address0 =  (sc_lv<14>) (tmp_10_cast_fu_313_p1.read());
}

void parta1_5::thread_A_ce0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()))) {
        A_ce0 = ap_const_logic_1;
    } else {
        A_ce0 = ap_const_logic_0;
    }
}

void parta1_5::thread_B_address0() {
    B_address0 =  (sc_lv<14>) (tmp_11_cast_fu_322_p1.read());
}

void parta1_5::thread_B_ce0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()))) {
        B_ce0 = ap_const_logic_1;
    } else {
        B_ce0 = ap_const_logic_0;
    }
}

void parta1_5::thread_C_address0() {
    C_address0 = C_addr_1_reg_414_pp0_iter1_reg.read();
}

void parta1_5::thread_C_ce0() {
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && 
          esl_seteq<1,1,1>(ap_enable_reg_pp0_iter2.read(), ap_const_logic_1)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage1.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage1_11001.read(), ap_const_boolean_0) && 
          esl_seteq<1,1,1>(ap_enable_reg_pp0_iter2.read(), ap_const_logic_1)))) {
        C_ce0 = ap_const_logic_1;
    } else {
        C_ce0 = ap_const_logic_0;
    }
}

void parta1_5::thread_C_d0() {
    C_d0 = (!tmp_7_reg_444.read().is_01() || !C_q0.read().is_01())? sc_lv<32>(): (sc_biguint<32>(tmp_7_reg_444.read()) + sc_biguint<32>(C_q0.read()));
}

void parta1_5::thread_C_we0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage1.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage1_11001.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_enable_reg_pp0_iter2.read(), ap_const_logic_1) && 
         esl_seteq<1,1,1>(exitcond_flatten_reg_377_pp0_iter2_reg.read(), ap_const_lv1_0))) {
        C_we0 = ap_const_logic_1;
    } else {
        C_we0 = ap_const_logic_0;
    }
}

void parta1_5::thread_ap_CS_fsm_pp0_stage0() {
    ap_CS_fsm_pp0_stage0 = ap_CS_fsm.read()[2];
}

void parta1_5::thread_ap_CS_fsm_pp0_stage1() {
    ap_CS_fsm_pp0_stage1 = ap_CS_fsm.read()[3];
}

void parta1_5::thread_ap_CS_fsm_state1() {
    ap_CS_fsm_state1 = ap_CS_fsm.read()[0];
}

void parta1_5::thread_ap_CS_fsm_state2() {
    ap_CS_fsm_state2 = ap_CS_fsm.read()[1];
}

void parta1_5::thread_ap_CS_fsm_state9() {
    ap_CS_fsm_state9 = ap_CS_fsm.read()[4];
}

void parta1_5::thread_ap_block_pp0_stage0() {
    ap_block_pp0_stage0 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void parta1_5::thread_ap_block_pp0_stage0_11001() {
    ap_block_pp0_stage0_11001 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void parta1_5::thread_ap_block_pp0_stage0_subdone() {
    ap_block_pp0_stage0_subdone = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void parta1_5::thread_ap_block_pp0_stage1() {
    ap_block_pp0_stage1 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void parta1_5::thread_ap_block_pp0_stage1_11001() {
    ap_block_pp0_stage1_11001 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void parta1_5::thread_ap_block_pp0_stage1_subdone() {
    ap_block_pp0_stage1_subdone = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void parta1_5::thread_ap_block_state3_pp0_stage0_iter0() {
    ap_block_state3_pp0_stage0_iter0 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void parta1_5::thread_ap_block_state4_pp0_stage1_iter0() {
    ap_block_state4_pp0_stage1_iter0 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void parta1_5::thread_ap_block_state5_pp0_stage0_iter1() {
    ap_block_state5_pp0_stage0_iter1 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void parta1_5::thread_ap_block_state6_pp0_stage1_iter1() {
    ap_block_state6_pp0_stage1_iter1 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void parta1_5::thread_ap_block_state7_pp0_stage0_iter2() {
    ap_block_state7_pp0_stage0_iter2 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void parta1_5::thread_ap_block_state8_pp0_stage1_iter2() {
    ap_block_state8_pp0_stage1_iter2 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void parta1_5::thread_ap_condition_pp0_exit_iter0_state3() {
    if (esl_seteq<1,1,1>(exitcond_flatten_fu_250_p2.read(), ap_const_lv1_1)) {
        ap_condition_pp0_exit_iter0_state3 = ap_const_logic_1;
    } else {
        ap_condition_pp0_exit_iter0_state3 = ap_const_logic_0;
    }
}

void parta1_5::thread_ap_done() {
    if ((esl_seteq<1,1,1>(tmp_fu_230_p2.read(), ap_const_lv1_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()))) {
        ap_done = ap_const_logic_1;
    } else {
        ap_done = ap_const_logic_0;
    }
}

void parta1_5::thread_ap_enable_pp0() {
    ap_enable_pp0 = (ap_idle_pp0.read() ^ ap_const_logic_1);
}

void parta1_5::thread_ap_idle() {
    if ((esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()))) {
        ap_idle = ap_const_logic_1;
    } else {
        ap_idle = ap_const_logic_0;
    }
}

void parta1_5::thread_ap_idle_pp0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter1.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter2.read()))) {
        ap_idle_pp0 = ap_const_logic_1;
    } else {
        ap_idle_pp0 = ap_const_logic_0;
    }
}

void parta1_5::thread_ap_phi_mux_indvar_flatten_phi_fu_167_p4() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(exitcond_flatten_reg_377.read(), ap_const_lv1_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0.read(), ap_const_boolean_0))) {
        ap_phi_mux_indvar_flatten_phi_fu_167_p4 = indvar_flatten_next_reg_381.read();
    } else {
        ap_phi_mux_indvar_flatten_phi_fu_167_p4 = indvar_flatten_reg_163.read();
    }
}

void parta1_5::thread_ap_phi_mux_j_phi_fu_178_p4() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(exitcond_flatten_reg_377.read(), ap_const_lv1_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0.read(), ap_const_boolean_0))) {
        ap_phi_mux_j_phi_fu_178_p4 = tmp_3_mid2_v_reg_391.read();
    } else {
        ap_phi_mux_j_phi_fu_178_p4 = j_reg_174.read();
    }
}

void parta1_5::thread_ap_phi_mux_k_phi_fu_189_p4() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(exitcond_flatten_reg_377.read(), ap_const_lv1_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0.read(), ap_const_boolean_0))) {
        ap_phi_mux_k_phi_fu_189_p4 = k_1_reg_419.read();
    } else {
        ap_phi_mux_k_phi_fu_189_p4 = k_reg_185.read();
    }
}

void parta1_5::thread_ap_ready() {
    if ((esl_seteq<1,1,1>(tmp_fu_230_p2.read(), ap_const_lv1_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()))) {
        ap_ready = ap_const_logic_1;
    } else {
        ap_ready = ap_const_logic_0;
    }
}

void parta1_5::thread_bound_fu_204_p0() {
    bound_fu_204_p0 =  (sc_lv<32>) (bound_fu_204_p00.read());
}

void parta1_5::thread_bound_fu_204_p00() {
    bound_fu_204_p00 = esl_zext<64,32>(nA.read());
}

void parta1_5::thread_bound_fu_204_p1() {
    bound_fu_204_p1 =  (sc_lv<32>) (bound_fu_204_p10.read());
}

void parta1_5::thread_bound_fu_204_p10() {
    bound_fu_204_p10 = esl_zext<64,32>(nC.read());
}

void parta1_5::thread_bound_fu_204_p2() {
    bound_fu_204_p2 = (!bound_fu_204_p0.read().is_01() || !bound_fu_204_p1.read().is_01())? sc_lv<64>(): sc_biguint<32>(bound_fu_204_p0.read()) * sc_biguint<32>(bound_fu_204_p1.read());
}

void parta1_5::thread_exitcond_flatten_fu_250_p2() {
    exitcond_flatten_fu_250_p2 = (!ap_phi_mux_indvar_flatten_phi_fu_167_p4.read().is_01() || !bound_reg_352.read().is_01())? sc_lv<1>(): sc_lv<1>(ap_phi_mux_indvar_flatten_phi_fu_167_p4.read() == bound_reg_352.read());
}

void parta1_5::thread_i_1_fu_235_p2() {
    i_1_fu_235_p2 = (!ap_const_lv31_1.is_01() || !i_reg_141.read().is_01())? sc_lv<31>(): (sc_biguint<31>(ap_const_lv31_1) + sc_biguint<31>(i_reg_141.read()));
}

void parta1_5::thread_i_cast_fu_226_p1() {
    i_cast_fu_226_p1 = esl_zext<32,31>(i_reg_141.read());
}

void parta1_5::thread_indvar_flatten_next_fu_255_p2() {
    indvar_flatten_next_fu_255_p2 = (!ap_phi_mux_indvar_flatten_phi_fu_167_p4.read().is_01() || !ap_const_lv64_1.is_01())? sc_lv<64>(): (sc_biguint<64>(ap_phi_mux_indvar_flatten_phi_fu_167_p4.read()) + sc_biguint<64>(ap_const_lv64_1));
}

void parta1_5::thread_j_1_fu_261_p2() {
    j_1_fu_261_p2 = (!ap_const_lv31_1.is_01() || !ap_phi_mux_j_phi_fu_178_p4.read().is_01())? sc_lv<31>(): (sc_biguint<31>(ap_const_lv31_1) + sc_biguint<31>(ap_phi_mux_j_phi_fu_178_p4.read()));
}

void parta1_5::thread_k_1_fu_300_p2() {
    k_1_fu_300_p2 = (!ap_const_lv31_1.is_01() || !k_mid2_reg_386.read().is_01())? sc_lv<31>(): (sc_biguint<31>(ap_const_lv31_1) + sc_biguint<31>(k_mid2_reg_386.read()));
}

void parta1_5::thread_k_cast_fu_241_p1() {
    k_cast_fu_241_p1 = esl_zext<32,31>(ap_phi_mux_k_phi_fu_189_p4.read());
}

void parta1_5::thread_k_mid2_fu_267_p3() {
    k_mid2_fu_267_p3 = (!tmp_5_fu_245_p2.read()[0].is_01())? sc_lv<31>(): ((tmp_5_fu_245_p2.read()[0].to_bool())? ap_phi_mux_k_phi_fu_189_p4.read(): ap_const_lv31_0);
}

void parta1_5::thread_next_mul_fu_220_p2() {
    next_mul_fu_220_p2 = (!ap_const_lv38_64.is_01() || !phi_mul_reg_152.read().is_01())? sc_lv<38>(): (sc_biguint<38>(ap_const_lv38_64) + sc_biguint<38>(phi_mul_reg_152.read()));
}

void parta1_5::thread_tmp_10_cast_fu_313_p1() {
    tmp_10_cast_fu_313_p1 = esl_zext<64,15>(tmp_10_fu_309_p2.read());
}

void parta1_5::thread_tmp_10_fu_309_p2() {
    tmp_10_fu_309_p2 = (!tmp_1_reg_357.read().is_01() || !tmp_6_reg_402.read().is_01())? sc_lv<15>(): (sc_biguint<15>(tmp_1_reg_357.read()) + sc_biguint<15>(tmp_6_reg_402.read()));
}

void parta1_5::thread_tmp_11_cast_fu_322_p1() {
    tmp_11_cast_fu_322_p1 = esl_sext<64,15>(tmp_11_fu_318_p2.read());
}

void parta1_5::thread_tmp_11_fu_318_p2() {
    tmp_11_fu_318_p2 = (!tmp_3_reg_408.read().is_01() || !tmp_6_reg_402.read().is_01())? sc_lv<15>(): (sc_bigint<15>(tmp_3_reg_408.read()) + sc_biguint<15>(tmp_6_reg_402.read()));
}

void parta1_5::thread_tmp_1_fu_210_p1() {
    tmp_1_fu_210_p1 = phi_mul_reg_152.read().range(15-1, 0);
}

void parta1_5::thread_tmp_2_fu_283_p1() {
    tmp_2_fu_283_p1 = tmp_3_mid2_v_fu_275_p3.read().range(15-1, 0);
}

void parta1_5::thread_tmp_3_fu_337_p0() {
    tmp_3_fu_337_p0 =  (sc_lv<8>) (ap_const_lv15_64);
}

void parta1_5::thread_tmp_3_mid2_v_fu_275_p3() {
    tmp_3_mid2_v_fu_275_p3 = (!tmp_5_fu_245_p2.read()[0].is_01())? sc_lv<31>(): ((tmp_5_fu_245_p2.read()[0].to_bool())? ap_phi_mux_j_phi_fu_178_p4.read(): j_1_fu_261_p2.read());
}

void parta1_5::thread_tmp_5_fu_245_p2() {
    tmp_5_fu_245_p2 = (!k_cast_fu_241_p1.read().is_01() || !nA.read().is_01())? sc_lv<1>(): (sc_bigint<32>(k_cast_fu_241_p1.read()) < sc_bigint<32>(nA.read()));
}

void parta1_5::thread_tmp_6_fu_287_p1() {
    tmp_6_fu_287_p1 = k_mid2_fu_267_p3.read().range(15-1, 0);
}

void parta1_5::thread_tmp_7_fu_327_p2() {
    tmp_7_fu_327_p2 = (!B_load_reg_439.read().is_01() || !A_load_reg_434.read().is_01())? sc_lv<32>(): sc_bigint<32>(B_load_reg_439.read()) * sc_bigint<32>(A_load_reg_434.read());
}

void parta1_5::thread_tmp_9_cast_fu_295_p1() {
    tmp_9_cast_fu_295_p1 = esl_zext<64,15>(tmp_9_fu_291_p2.read());
}

void parta1_5::thread_tmp_9_fu_291_p2() {
    tmp_9_fu_291_p2 = (!tmp_1_reg_357.read().is_01() || !tmp_2_reg_396.read().is_01())? sc_lv<15>(): (sc_biguint<15>(tmp_1_reg_357.read()) + sc_bigint<15>(tmp_2_reg_396.read()));
}

void parta1_5::thread_tmp_fu_230_p2() {
    tmp_fu_230_p2 = (!i_cast_fu_226_p1.read().is_01() || !mC.read().is_01())? sc_lv<1>(): (sc_bigint<32>(i_cast_fu_226_p1.read()) < sc_bigint<32>(mC.read()));
}

void parta1_5::thread_ap_NS_fsm() {
    switch (ap_CS_fsm.read().to_uint64()) {
        case 1 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
                ap_NS_fsm = ap_ST_fsm_state2;
            } else {
                ap_NS_fsm = ap_ST_fsm_state1;
            }
            break;
        case 2 : 
            if ((esl_seteq<1,1,1>(tmp_fu_230_p2.read(), ap_const_lv1_0) && esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()))) {
                ap_NS_fsm = ap_ST_fsm_state1;
            } else {
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            }
            break;
        case 4 : 
            if ((!(esl_seteq<1,1,1>(exitcond_flatten_fu_250_p2.read(), ap_const_lv1_1) && esl_seteq<1,1,1>(ap_enable_reg_pp0_iter0.read(), ap_const_logic_1) && esl_seteq<1,1,1>(ap_enable_reg_pp0_iter1.read(), ap_const_logic_0) && esl_seteq<1,1,1>(ap_const_boolean_0, ap_block_pp0_stage0_subdone.read())) && esl_seteq<1,1,1>(ap_const_boolean_0, ap_block_pp0_stage0_subdone.read()))) {
                ap_NS_fsm = ap_ST_fsm_pp0_stage1;
            } else if ((esl_seteq<1,1,1>(exitcond_flatten_fu_250_p2.read(), ap_const_lv1_1) && esl_seteq<1,1,1>(ap_enable_reg_pp0_iter0.read(), ap_const_logic_1) && esl_seteq<1,1,1>(ap_enable_reg_pp0_iter1.read(), ap_const_logic_0) && esl_seteq<1,1,1>(ap_const_boolean_0, ap_block_pp0_stage0_subdone.read()))) {
                ap_NS_fsm = ap_ST_fsm_state9;
            } else {
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            }
            break;
        case 8 : 
            if ((!(esl_seteq<1,1,1>(ap_enable_reg_pp0_iter2.read(), ap_const_logic_1) && esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage1.read()) && esl_seteq<1,1,1>(ap_const_boolean_0, ap_block_pp0_stage1_subdone.read()) && esl_seteq<1,1,1>(ap_enable_reg_pp0_iter1.read(), ap_const_logic_0)) && esl_seteq<1,1,1>(ap_const_boolean_0, ap_block_pp0_stage1_subdone.read()))) {
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            } else if ((esl_seteq<1,1,1>(ap_enable_reg_pp0_iter2.read(), ap_const_logic_1) && esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage1.read()) && esl_seteq<1,1,1>(ap_const_boolean_0, ap_block_pp0_stage1_subdone.read()) && esl_seteq<1,1,1>(ap_enable_reg_pp0_iter1.read(), ap_const_logic_0))) {
                ap_NS_fsm = ap_ST_fsm_state9;
            } else {
                ap_NS_fsm = ap_ST_fsm_pp0_stage1;
            }
            break;
        case 16 : 
            ap_NS_fsm = ap_ST_fsm_state2;
            break;
        default : 
            ap_NS_fsm = "XXXXX";
            break;
    }
}

void parta1_5::thread_hdltv_gen() {
    const char* dump_tv = std::getenv("AP_WRITE_TV");
    if (!(dump_tv && string(dump_tv) == "on")) return;

    wait();

    mHdltvinHandle << "[ " << endl;
    mHdltvoutHandle << "[ " << endl;
    int ap_cycleNo = 0;
    while (1) {
        wait();
        const char* mComma = ap_cycleNo == 0 ? " " : ", " ;
        mHdltvinHandle << mComma << "{"  <<  " \"ap_rst\" :  \"" << ap_rst.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"ap_start\" :  \"" << ap_start.read() << "\" ";
        mHdltvoutHandle << mComma << "{"  <<  " \"ap_done\" :  \"" << ap_done.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"ap_idle\" :  \"" << ap_idle.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"ap_ready\" :  \"" << ap_ready.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"A_address0\" :  \"" << A_address0.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"A_ce0\" :  \"" << A_ce0.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"A_q0\" :  \"" << A_q0.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"B_address0\" :  \"" << B_address0.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"B_ce0\" :  \"" << B_ce0.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"B_q0\" :  \"" << B_q0.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"C_address0\" :  \"" << C_address0.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"C_ce0\" :  \"" << C_ce0.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"C_we0\" :  \"" << C_we0.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"C_d0\" :  \"" << C_d0.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"C_q0\" :  \"" << C_q0.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"mA\" :  \"" << mA.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"nA\" :  \"" << nA.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"mB\" :  \"" << mB.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"nB\" :  \"" << nB.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"mC\" :  \"" << mC.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"nC\" :  \"" << nC.read() << "\" ";
        mHdltvinHandle << "}" << std::endl;
        mHdltvoutHandle << "}" << std::endl;
        ap_cycleNo++;
    }
}

}

