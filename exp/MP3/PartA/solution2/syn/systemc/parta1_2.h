// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2018.2
// Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#ifndef _parta1_2_HH_
#define _parta1_2_HH_

#include "systemc.h"
#include "AESL_pkg.h"

#include "parta1_2_mul_64nsbkb.h"
#include "parta1_2_mul_mul_cud.h"
#include "parta1_2_mac_muladEe.h"

namespace ap_rtl {

struct parta1_2 : public sc_module {
    // Port declarations 23
    sc_in_clk ap_clk;
    sc_in< sc_logic > ap_rst;
    sc_in< sc_logic > ap_start;
    sc_out< sc_logic > ap_done;
    sc_out< sc_logic > ap_idle;
    sc_out< sc_logic > ap_ready;
    sc_out< sc_lv<14> > A_address0;
    sc_out< sc_logic > A_ce0;
    sc_in< sc_lv<32> > A_q0;
    sc_out< sc_lv<14> > B_address0;
    sc_out< sc_logic > B_ce0;
    sc_in< sc_lv<32> > B_q0;
    sc_out< sc_lv<14> > C_address0;
    sc_out< sc_logic > C_ce0;
    sc_out< sc_logic > C_we0;
    sc_out< sc_lv<32> > C_d0;
    sc_in< sc_lv<32> > C_q0;
    sc_in< sc_lv<32> > mA;
    sc_in< sc_lv<32> > nA;
    sc_in< sc_lv<32> > mB;
    sc_in< sc_lv<32> > nB;
    sc_in< sc_lv<32> > mC;
    sc_in< sc_lv<32> > nC;
    sc_signal< sc_logic > ap_var_for_const0;


    // Module declarations
    parta1_2(sc_module_name name);
    SC_HAS_PROCESS(parta1_2);

    ~parta1_2();

    sc_trace_file* mVcdFile;

    ofstream mHdltvinHandle;
    ofstream mHdltvoutHandle;
    parta1_2_mul_64nsbkb<1,5,64,32,96>* parta1_2_mul_64nsbkb_U1;
    parta1_2_mul_mul_cud<1,1,8,15,15>* parta1_2_mul_mul_cud_U2;
    parta1_2_mac_muladEe<1,1,8,15,15,15>* parta1_2_mac_muladEe_U3;
    sc_signal< sc_lv<9> > ap_CS_fsm;
    sc_signal< sc_logic > ap_CS_fsm_state1;
    sc_signal< sc_lv<96> > indvar_flatten1_reg_114;
    sc_signal< sc_lv<31> > i_reg_125;
    sc_signal< sc_lv<64> > indvar_flatten_reg_136;
    sc_signal< sc_lv<31> > j_reg_147;
    sc_signal< sc_lv<31> > k_reg_158;
    sc_signal< sc_lv<64> > bound_fu_177_p2;
    sc_signal< sc_lv<64> > bound_reg_386;
    sc_signal< sc_logic > ap_CS_fsm_state2;
    sc_signal< sc_lv<96> > grp_fu_190_p2;
    sc_signal< sc_lv<96> > bound6_reg_402;
    sc_signal< sc_logic > ap_CS_fsm_state6;
    sc_signal< sc_lv<1> > tmp_5_mid_fu_196_p2;
    sc_signal< sc_lv<1> > tmp_5_mid_reg_407;
    sc_signal< sc_lv<1> > exitcond_flatten1_fu_210_p2;
    sc_signal< sc_lv<1> > exitcond_flatten1_reg_412;
    sc_signal< sc_logic > ap_CS_fsm_pp0_stage0;
    sc_signal< bool > ap_block_state7_pp0_stage0_iter0;
    sc_signal< bool > ap_block_state9_pp0_stage0_iter1;
    sc_signal< bool > ap_block_state11_pp0_stage0_iter2;
    sc_signal< bool > ap_block_pp0_stage0_11001;
    sc_signal< sc_lv<1> > exitcond_flatten1_reg_412_pp0_iter1_reg;
    sc_signal< sc_lv<1> > exitcond_flatten1_reg_412_pp0_iter2_reg;
    sc_signal< sc_lv<96> > indvar_flatten_next1_fu_215_p2;
    sc_signal< sc_lv<96> > indvar_flatten_next1_reg_416;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter0;
    sc_signal< sc_lv<31> > tmp_1_mid2_v_fu_248_p3;
    sc_signal< sc_lv<31> > tmp_1_mid2_v_reg_421;
    sc_signal< sc_lv<15> > tmp_3_fu_256_p1;
    sc_signal< sc_lv<15> > tmp_3_reg_426;
    sc_signal< sc_lv<31> > k_mid2_fu_273_p3;
    sc_signal< sc_lv<31> > k_mid2_reg_431;
    sc_signal< sc_lv<15> > tmp_12_fu_297_p3;
    sc_signal< sc_lv<15> > tmp_12_reg_436;
    sc_signal< sc_lv<31> > j_mid2_fu_305_p3;
    sc_signal< sc_lv<31> > j_mid2_reg_442;
    sc_signal< sc_lv<15> > tmp_13_fu_313_p1;
    sc_signal< sc_lv<15> > tmp_13_reg_447;
    sc_signal< sc_lv<64> > indvar_flatten_next_fu_323_p3;
    sc_signal< sc_lv<64> > indvar_flatten_next_reg_453;
    sc_signal< sc_lv<15> > tmp_fu_368_p2;
    sc_signal< sc_lv<15> > tmp_reg_458;
    sc_signal< sc_logic > ap_CS_fsm_pp0_stage1;
    sc_signal< bool > ap_block_state8_pp0_stage1_iter0;
    sc_signal< bool > ap_block_state10_pp0_stage1_iter1;
    sc_signal< bool > ap_block_state12_pp0_stage1_iter2;
    sc_signal< bool > ap_block_pp0_stage1_11001;
    sc_signal< sc_lv<31> > k_1_fu_331_p2;
    sc_signal< sc_lv<31> > k_1_reg_464;
    sc_signal< sc_lv<14> > C_addr_reg_469;
    sc_signal< sc_lv<14> > C_addr_reg_469_pp0_iter2_reg;
    sc_signal< sc_lv<32> > A_load_reg_484;
    sc_signal< sc_lv<32> > B_load_reg_489;
    sc_signal< sc_lv<32> > tmp_7_fu_358_p2;
    sc_signal< sc_lv<32> > tmp_7_reg_494;
    sc_signal< bool > ap_block_pp0_stage0_subdone;
    sc_signal< sc_logic > ap_condition_pp0_exit_iter0_state7;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter1;
    sc_signal< bool > ap_block_pp0_stage1_subdone;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter2;
    sc_signal< sc_lv<96> > ap_phi_mux_indvar_flatten1_phi_fu_118_p4;
    sc_signal< bool > ap_block_pp0_stage0;
    sc_signal< sc_lv<31> > ap_phi_mux_i_phi_fu_129_p4;
    sc_signal< sc_lv<64> > ap_phi_mux_indvar_flatten_phi_fu_140_p4;
    sc_signal< sc_lv<31> > ap_phi_mux_j_phi_fu_151_p4;
    sc_signal< sc_lv<31> > ap_phi_mux_k_phi_fu_162_p4;
    sc_signal< sc_lv<64> > tmp_1_cast_fu_340_p1;
    sc_signal< sc_lv<64> > tmp_2_cast_fu_349_p1;
    sc_signal< sc_lv<64> > tmp_9_cast_fu_354_p1;
    sc_signal< bool > ap_block_pp0_stage1;
    sc_signal< sc_lv<32> > bound_fu_177_p0;
    sc_signal< sc_lv<32> > bound_fu_177_p1;
    sc_signal< sc_lv<64> > grp_fu_190_p0;
    sc_signal< sc_lv<32> > grp_fu_190_p1;
    sc_signal< sc_lv<32> > k_cast_fu_201_p1;
    sc_signal< sc_lv<1> > exitcond_flatten7_fu_227_p2;
    sc_signal< sc_lv<31> > i_1_fu_221_p2;
    sc_signal< sc_lv<1> > tmp_5_fu_205_p2;
    sc_signal< sc_lv<31> > j_mid_fu_232_p3;
    sc_signal< sc_lv<1> > tmp_5_mid1_fu_260_p3;
    sc_signal< sc_lv<31> > k_mid_fu_240_p3;
    sc_signal< sc_lv<15> > tmp_6_fu_281_p1;
    sc_signal< sc_lv<31> > j_1_fu_267_p2;
    sc_signal< sc_lv<15> > tmp_10_fu_285_p3;
    sc_signal< sc_lv<15> > tmp_11_fu_293_p1;
    sc_signal< sc_lv<64> > indvar_flatten_op_fu_317_p2;
    sc_signal< sc_lv<15> > tmp_1_fu_336_p2;
    sc_signal< sc_lv<15> > tmp_2_fu_345_p2;
    sc_signal< sc_lv<15> > grp_fu_373_p3;
    sc_signal< sc_lv<8> > tmp_fu_368_p0;
    sc_signal< sc_lv<8> > grp_fu_373_p0;
    sc_signal< sc_logic > ap_CS_fsm_state13;
    sc_signal< sc_lv<9> > ap_NS_fsm;
    sc_signal< sc_logic > ap_idle_pp0;
    sc_signal< sc_logic > ap_enable_pp0;
    sc_signal< sc_lv<64> > bound_fu_177_p00;
    sc_signal< sc_lv<64> > bound_fu_177_p10;
    sc_signal< sc_lv<96> > grp_fu_190_p00;
    sc_signal< sc_lv<96> > grp_fu_190_p10;
    static const sc_logic ap_const_logic_1;
    static const sc_logic ap_const_logic_0;
    static const sc_lv<9> ap_ST_fsm_state1;
    static const sc_lv<9> ap_ST_fsm_state2;
    static const sc_lv<9> ap_ST_fsm_state3;
    static const sc_lv<9> ap_ST_fsm_state4;
    static const sc_lv<9> ap_ST_fsm_state5;
    static const sc_lv<9> ap_ST_fsm_state6;
    static const sc_lv<9> ap_ST_fsm_pp0_stage0;
    static const sc_lv<9> ap_ST_fsm_pp0_stage1;
    static const sc_lv<9> ap_ST_fsm_state13;
    static const sc_lv<32> ap_const_lv32_0;
    static const bool ap_const_boolean_1;
    static const sc_lv<32> ap_const_lv32_1;
    static const sc_lv<32> ap_const_lv32_5;
    static const sc_lv<32> ap_const_lv32_6;
    static const bool ap_const_boolean_0;
    static const sc_lv<1> ap_const_lv1_0;
    static const sc_lv<32> ap_const_lv32_7;
    static const sc_lv<1> ap_const_lv1_1;
    static const sc_lv<96> ap_const_lv96_0;
    static const sc_lv<31> ap_const_lv31_0;
    static const sc_lv<64> ap_const_lv64_0;
    static const sc_lv<96> ap_const_lv96_1;
    static const sc_lv<31> ap_const_lv31_1;
    static const sc_lv<15> ap_const_lv15_0;
    static const sc_lv<64> ap_const_lv64_1;
    static const sc_lv<15> ap_const_lv15_64;
    static const sc_lv<32> ap_const_lv32_8;
    // Thread declarations
    void thread_ap_var_for_const0();
    void thread_ap_clk_no_reset_();
    void thread_A_address0();
    void thread_A_ce0();
    void thread_B_address0();
    void thread_B_ce0();
    void thread_C_address0();
    void thread_C_ce0();
    void thread_C_d0();
    void thread_C_we0();
    void thread_ap_CS_fsm_pp0_stage0();
    void thread_ap_CS_fsm_pp0_stage1();
    void thread_ap_CS_fsm_state1();
    void thread_ap_CS_fsm_state13();
    void thread_ap_CS_fsm_state2();
    void thread_ap_CS_fsm_state6();
    void thread_ap_block_pp0_stage0();
    void thread_ap_block_pp0_stage0_11001();
    void thread_ap_block_pp0_stage0_subdone();
    void thread_ap_block_pp0_stage1();
    void thread_ap_block_pp0_stage1_11001();
    void thread_ap_block_pp0_stage1_subdone();
    void thread_ap_block_state10_pp0_stage1_iter1();
    void thread_ap_block_state11_pp0_stage0_iter2();
    void thread_ap_block_state12_pp0_stage1_iter2();
    void thread_ap_block_state7_pp0_stage0_iter0();
    void thread_ap_block_state8_pp0_stage1_iter0();
    void thread_ap_block_state9_pp0_stage0_iter1();
    void thread_ap_condition_pp0_exit_iter0_state7();
    void thread_ap_done();
    void thread_ap_enable_pp0();
    void thread_ap_idle();
    void thread_ap_idle_pp0();
    void thread_ap_phi_mux_i_phi_fu_129_p4();
    void thread_ap_phi_mux_indvar_flatten1_phi_fu_118_p4();
    void thread_ap_phi_mux_indvar_flatten_phi_fu_140_p4();
    void thread_ap_phi_mux_j_phi_fu_151_p4();
    void thread_ap_phi_mux_k_phi_fu_162_p4();
    void thread_ap_ready();
    void thread_bound_fu_177_p0();
    void thread_bound_fu_177_p00();
    void thread_bound_fu_177_p1();
    void thread_bound_fu_177_p10();
    void thread_bound_fu_177_p2();
    void thread_exitcond_flatten1_fu_210_p2();
    void thread_exitcond_flatten7_fu_227_p2();
    void thread_grp_fu_190_p0();
    void thread_grp_fu_190_p00();
    void thread_grp_fu_190_p1();
    void thread_grp_fu_190_p10();
    void thread_grp_fu_373_p0();
    void thread_i_1_fu_221_p2();
    void thread_indvar_flatten_next1_fu_215_p2();
    void thread_indvar_flatten_next_fu_323_p3();
    void thread_indvar_flatten_op_fu_317_p2();
    void thread_j_1_fu_267_p2();
    void thread_j_mid2_fu_305_p3();
    void thread_j_mid_fu_232_p3();
    void thread_k_1_fu_331_p2();
    void thread_k_cast_fu_201_p1();
    void thread_k_mid2_fu_273_p3();
    void thread_k_mid_fu_240_p3();
    void thread_tmp_10_fu_285_p3();
    void thread_tmp_11_fu_293_p1();
    void thread_tmp_12_fu_297_p3();
    void thread_tmp_13_fu_313_p1();
    void thread_tmp_1_cast_fu_340_p1();
    void thread_tmp_1_fu_336_p2();
    void thread_tmp_1_mid2_v_fu_248_p3();
    void thread_tmp_2_cast_fu_349_p1();
    void thread_tmp_2_fu_345_p2();
    void thread_tmp_3_fu_256_p1();
    void thread_tmp_5_fu_205_p2();
    void thread_tmp_5_mid1_fu_260_p3();
    void thread_tmp_5_mid_fu_196_p2();
    void thread_tmp_6_fu_281_p1();
    void thread_tmp_7_fu_358_p2();
    void thread_tmp_9_cast_fu_354_p1();
    void thread_tmp_fu_368_p0();
    void thread_ap_NS_fsm();
    void thread_hdltv_gen();
};

}

using namespace ap_rtl;

#endif
