-- ==============================================================
-- RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
-- Version: 2018.2
-- Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity convolution_3 is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    input_r_address0 : OUT STD_LOGIC_VECTOR (10 downto 0);
    input_r_ce0 : OUT STD_LOGIC;
    input_r_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    input_r_address1 : OUT STD_LOGIC_VECTOR (10 downto 0);
    input_r_ce1 : OUT STD_LOGIC;
    input_r_q1 : IN STD_LOGIC_VECTOR (31 downto 0);
    weights_0_address0 : OUT STD_LOGIC_VECTOR (8 downto 0);
    weights_0_ce0 : OUT STD_LOGIC;
    weights_0_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    weights_1_address0 : OUT STD_LOGIC_VECTOR (8 downto 0);
    weights_1_ce0 : OUT STD_LOGIC;
    weights_1_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    weights_2_address0 : OUT STD_LOGIC_VECTOR (8 downto 0);
    weights_2_ce0 : OUT STD_LOGIC;
    weights_2_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    weights_3_address0 : OUT STD_LOGIC_VECTOR (8 downto 0);
    weights_3_ce0 : OUT STD_LOGIC;
    weights_3_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    weights_4_address0 : OUT STD_LOGIC_VECTOR (8 downto 0);
    weights_4_ce0 : OUT STD_LOGIC;
    weights_4_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    weights_5_address0 : OUT STD_LOGIC_VECTOR (8 downto 0);
    weights_5_ce0 : OUT STD_LOGIC;
    weights_5_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    bias_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
    bias_ce0 : OUT STD_LOGIC;
    bias_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    output_r_address0 : OUT STD_LOGIC_VECTOR (10 downto 0);
    output_r_ce0 : OUT STD_LOGIC;
    output_r_we0 : OUT STD_LOGIC;
    output_r_d0 : OUT STD_LOGIC_VECTOR (31 downto 0) );
end;


architecture behav of convolution_3 is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_state1 : STD_LOGIC_VECTOR (6 downto 0) := "0000001";
    constant ap_ST_fsm_pp0_stage0 : STD_LOGIC_VECTOR (6 downto 0) := "0000010";
    constant ap_ST_fsm_pp0_stage1 : STD_LOGIC_VECTOR (6 downto 0) := "0000100";
    constant ap_ST_fsm_pp0_stage2 : STD_LOGIC_VECTOR (6 downto 0) := "0001000";
    constant ap_ST_fsm_pp0_stage3 : STD_LOGIC_VECTOR (6 downto 0) := "0010000";
    constant ap_ST_fsm_pp0_stage4 : STD_LOGIC_VECTOR (6 downto 0) := "0100000";
    constant ap_ST_fsm_state49 : STD_LOGIC_VECTOR (6 downto 0) := "1000000";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_boolean_0 : BOOLEAN := false;
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";
    constant ap_const_lv32_3 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000011";
    constant ap_const_lv32_4 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000100";
    constant ap_const_lv32_5 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000101";
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv16_0 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000000";
    constant ap_const_lv5_0 : STD_LOGIC_VECTOR (4 downto 0) := "00000";
    constant ap_const_lv12_0 : STD_LOGIC_VECTOR (11 downto 0) := "000000000000";
    constant ap_const_lv4_0 : STD_LOGIC_VECTOR (3 downto 0) := "0000";
    constant ap_const_lv9_0 : STD_LOGIC_VECTOR (8 downto 0) := "000000000";
    constant ap_const_lv6_0 : STD_LOGIC_VECTOR (5 downto 0) := "000000";
    constant ap_const_lv3_0 : STD_LOGIC_VECTOR (2 downto 0) := "000";
    constant ap_const_lv16_9C40 : STD_LOGIC_VECTOR (15 downto 0) := "1001110001000000";
    constant ap_const_lv16_1 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000001";
    constant ap_const_lv5_1 : STD_LOGIC_VECTOR (4 downto 0) := "00001";
    constant ap_const_lv12_9C4 : STD_LOGIC_VECTOR (11 downto 0) := "100111000100";
    constant ap_const_lv3_4 : STD_LOGIC_VECTOR (2 downto 0) := "100";
    constant ap_const_lv3_5 : STD_LOGIC_VECTOR (2 downto 0) := "101";
    constant ap_const_lv6_19 : STD_LOGIC_VECTOR (5 downto 0) := "011001";
    constant ap_const_lv9_FA : STD_LOGIC_VECTOR (8 downto 0) := "011111010";
    constant ap_const_lv4_1 : STD_LOGIC_VECTOR (3 downto 0) := "0001";
    constant ap_const_lv6_1 : STD_LOGIC_VECTOR (5 downto 0) := "000001";
    constant ap_const_lv9_1 : STD_LOGIC_VECTOR (8 downto 0) := "000000001";
    constant ap_const_lv12_1 : STD_LOGIC_VECTOR (11 downto 0) := "000000000001";
    constant ap_const_lv2_0 : STD_LOGIC_VECTOR (1 downto 0) := "00";
    constant ap_const_lv3_1 : STD_LOGIC_VECTOR (2 downto 0) := "001";
    constant ap_const_lv12_C4 : STD_LOGIC_VECTOR (11 downto 0) := "000011000100";
    constant ap_const_lv12_188 : STD_LOGIC_VECTOR (11 downto 0) := "000110001000";
    constant ap_const_lv12_24C : STD_LOGIC_VECTOR (11 downto 0) := "001001001100";
    constant ap_const_lv12_310 : STD_LOGIC_VECTOR (11 downto 0) := "001100010000";
    constant ap_const_lv12_3D4 : STD_LOGIC_VECTOR (11 downto 0) := "001111010100";
    constant ap_const_lv32_6 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000110";

    signal ap_CS_fsm : STD_LOGIC_VECTOR (6 downto 0) := "0000001";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_state1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state1 : signal is "none";
    signal indvar_flatten3_reg_298 : STD_LOGIC_VECTOR (15 downto 0);
    signal co_reg_309 : STD_LOGIC_VECTOR (4 downto 0);
    signal indvar_flatten4_reg_320 : STD_LOGIC_VECTOR (11 downto 0);
    signal h_reg_331 : STD_LOGIC_VECTOR (3 downto 0);
    signal indvar_flatten5_reg_342 : STD_LOGIC_VECTOR (8 downto 0);
    signal w_reg_353 : STD_LOGIC_VECTOR (3 downto 0);
    signal indvar_flatten_reg_364 : STD_LOGIC_VECTOR (5 downto 0);
    signal m_reg_375 : STD_LOGIC_VECTOR (2 downto 0);
    signal n_reg_386 : STD_LOGIC_VECTOR (2 downto 0);
    signal exitcond_flatten5_fu_427_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal exitcond_flatten5_reg_1180 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_pp0_stage0 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage0 : signal is "none";
    signal ap_block_state2_pp0_stage0_iter0 : BOOLEAN;
    signal ap_block_state7_pp0_stage0_iter1 : BOOLEAN;
    signal ap_block_state12_pp0_stage0_iter2 : BOOLEAN;
    signal ap_block_state17_pp0_stage0_iter3 : BOOLEAN;
    signal ap_block_state22_pp0_stage0_iter4 : BOOLEAN;
    signal ap_block_state27_pp0_stage0_iter5 : BOOLEAN;
    signal ap_block_state32_pp0_stage0_iter6 : BOOLEAN;
    signal ap_block_state37_pp0_stage0_iter7 : BOOLEAN;
    signal ap_block_state42_pp0_stage0_iter8 : BOOLEAN;
    signal ap_block_state47_pp0_stage0_iter9 : BOOLEAN;
    signal ap_block_pp0_stage0_11001 : BOOLEAN;
    signal exitcond_flatten5_reg_1180_pp0_iter1_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal exitcond_flatten5_reg_1180_pp0_iter2_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal exitcond_flatten5_reg_1180_pp0_iter3_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal exitcond_flatten5_reg_1180_pp0_iter4_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal exitcond_flatten5_reg_1180_pp0_iter5_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal exitcond_flatten5_reg_1180_pp0_iter6_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal exitcond_flatten5_reg_1180_pp0_iter7_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal indvar_flatten_next5_fu_433_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal indvar_flatten_next5_reg_1184 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_enable_reg_pp0_iter0 : STD_LOGIC := '0';
    signal tmp_93_mid2_v_fu_459_p3 : STD_LOGIC_VECTOR (4 downto 0);
    signal tmp_93_mid2_v_reg_1189 : STD_LOGIC_VECTOR (4 downto 0);
    signal tmp_93_mid2_v_reg_1189_pp0_iter1_reg : STD_LOGIC_VECTOR (4 downto 0);
    signal tmp_93_mid2_v_reg_1189_pp0_iter2_reg : STD_LOGIC_VECTOR (4 downto 0);
    signal tmp_93_mid2_v_reg_1189_pp0_iter3_reg : STD_LOGIC_VECTOR (4 downto 0);
    signal tmp_93_mid2_v_reg_1189_pp0_iter4_reg : STD_LOGIC_VECTOR (4 downto 0);
    signal tmp_93_mid2_v_reg_1189_pp0_iter5_reg : STD_LOGIC_VECTOR (4 downto 0);
    signal tmp_93_mid2_v_reg_1189_pp0_iter6_reg : STD_LOGIC_VECTOR (4 downto 0);
    signal tmp_93_mid2_v_reg_1189_pp0_iter7_reg : STD_LOGIC_VECTOR (4 downto 0);
    signal not_exitcond_flatten_fu_475_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal not_exitcond_flatten_reg_1199 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_169_fu_481_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_169_reg_1204 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_100_mid2_fu_543_p3 : STD_LOGIC_VECTOR (3 downto 0);
    signal tmp_100_mid2_reg_1209 : STD_LOGIC_VECTOR (3 downto 0);
    signal tmp_100_mid2_reg_1209_pp0_iter1_reg : STD_LOGIC_VECTOR (3 downto 0);
    signal tmp_100_mid2_reg_1209_pp0_iter2_reg : STD_LOGIC_VECTOR (3 downto 0);
    signal tmp_100_mid2_reg_1209_pp0_iter3_reg : STD_LOGIC_VECTOR (3 downto 0);
    signal tmp_100_mid2_reg_1209_pp0_iter4_reg : STD_LOGIC_VECTOR (3 downto 0);
    signal tmp_100_mid2_reg_1209_pp0_iter5_reg : STD_LOGIC_VECTOR (3 downto 0);
    signal tmp_100_mid2_reg_1209_pp0_iter6_reg : STD_LOGIC_VECTOR (3 downto 0);
    signal tmp_100_mid2_reg_1209_pp0_iter7_reg : STD_LOGIC_VECTOR (3 downto 0);
    signal not_exitcond_flatten_1_fu_565_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal not_exitcond_flatten_1_reg_1216 : STD_LOGIC_VECTOR (0 downto 0);
    signal m_mid1_fu_601_p3 : STD_LOGIC_VECTOR (2 downto 0);
    signal m_mid1_reg_1221 : STD_LOGIC_VECTOR (2 downto 0);
    signal tmp_107_mid2_fu_609_p3 : STD_LOGIC_VECTOR (3 downto 0);
    signal tmp_107_mid2_reg_1227 : STD_LOGIC_VECTOR (3 downto 0);
    signal tmp_107_mid2_reg_1227_pp0_iter1_reg : STD_LOGIC_VECTOR (3 downto 0);
    signal tmp_107_mid2_reg_1227_pp0_iter2_reg : STD_LOGIC_VECTOR (3 downto 0);
    signal tmp_107_mid2_reg_1227_pp0_iter3_reg : STD_LOGIC_VECTOR (3 downto 0);
    signal tmp_107_mid2_reg_1227_pp0_iter4_reg : STD_LOGIC_VECTOR (3 downto 0);
    signal tmp_107_mid2_reg_1227_pp0_iter5_reg : STD_LOGIC_VECTOR (3 downto 0);
    signal tmp_107_mid2_reg_1227_pp0_iter6_reg : STD_LOGIC_VECTOR (3 downto 0);
    signal tmp_107_mid2_reg_1227_pp0_iter7_reg : STD_LOGIC_VECTOR (3 downto 0);
    signal tmp_116_mid5_fu_617_p3 : STD_LOGIC_VECTOR (3 downto 0);
    signal tmp_116_mid5_reg_1234 : STD_LOGIC_VECTOR (3 downto 0);
    signal not_exitcond_flatten_2_fu_625_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal not_exitcond_flatten_2_reg_1239 : STD_LOGIC_VECTOR (0 downto 0);
    signal exitcond_mid2_fu_631_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal exitcond_mid2_reg_1244 : STD_LOGIC_VECTOR (0 downto 0);
    signal n_mid2_fu_649_p3 : STD_LOGIC_VECTOR (2 downto 0);
    signal n_mid2_reg_1251 : STD_LOGIC_VECTOR (2 downto 0);
    signal indvar_flatten_next_fu_663_p3 : STD_LOGIC_VECTOR (5 downto 0);
    signal indvar_flatten_next_reg_1260 : STD_LOGIC_VECTOR (5 downto 0);
    signal indvar_flatten_next3_fu_677_p3 : STD_LOGIC_VECTOR (8 downto 0);
    signal indvar_flatten_next3_reg_1265 : STD_LOGIC_VECTOR (8 downto 0);
    signal indvar_flatten_next4_fu_691_p3 : STD_LOGIC_VECTOR (11 downto 0);
    signal indvar_flatten_next4_reg_1270 : STD_LOGIC_VECTOR (11 downto 0);
    signal tmp_114_mid2_fu_742_p3 : STD_LOGIC_VECTOR (2 downto 0);
    signal tmp_114_mid2_reg_1275 : STD_LOGIC_VECTOR (2 downto 0);
    signal ap_CS_fsm_pp0_stage1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage1 : signal is "none";
    signal ap_block_state3_pp0_stage1_iter0 : BOOLEAN;
    signal ap_block_state8_pp0_stage1_iter1 : BOOLEAN;
    signal ap_block_state13_pp0_stage1_iter2 : BOOLEAN;
    signal ap_block_state18_pp0_stage1_iter3 : BOOLEAN;
    signal ap_block_state23_pp0_stage1_iter4 : BOOLEAN;
    signal ap_block_state28_pp0_stage1_iter5 : BOOLEAN;
    signal ap_block_state33_pp0_stage1_iter6 : BOOLEAN;
    signal ap_block_state38_pp0_stage1_iter7 : BOOLEAN;
    signal ap_block_state43_pp0_stage1_iter8 : BOOLEAN;
    signal ap_block_state48_pp0_stage1_iter9 : BOOLEAN;
    signal ap_block_pp0_stage1_11001 : BOOLEAN;
    signal tmp_176_fu_752_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_176_reg_1281 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_178_fu_793_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal tmp_178_reg_1287 : STD_LOGIC_VECTOR (11 downto 0);
    signal or_cond5_fu_817_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_cond5_reg_1297 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_cond5_reg_1297_pp0_iter1_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal or_cond5_reg_1297_pp0_iter2_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal or_cond5_reg_1297_pp0_iter3_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal or_cond5_reg_1297_pp0_iter4_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal or_cond5_reg_1297_pp0_iter5_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal or_cond5_reg_1297_pp0_iter6_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal or_cond5_reg_1297_pp0_iter7_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal or_cond5_reg_1297_pp0_iter8_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_230_cast_fu_856_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_230_cast_reg_1301 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_CS_fsm_pp0_stage2 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage2 : signal is "none";
    signal ap_block_state4_pp0_stage2_iter0 : BOOLEAN;
    signal ap_block_state9_pp0_stage2_iter1 : BOOLEAN;
    signal ap_block_state14_pp0_stage2_iter2 : BOOLEAN;
    signal ap_block_state19_pp0_stage2_iter3 : BOOLEAN;
    signal ap_block_state24_pp0_stage2_iter4 : BOOLEAN;
    signal ap_block_state29_pp0_stage2_iter5 : BOOLEAN;
    signal ap_block_state34_pp0_stage2_iter6 : BOOLEAN;
    signal ap_block_state39_pp0_stage2_iter7 : BOOLEAN;
    signal ap_block_state44_pp0_stage2_iter8 : BOOLEAN;
    signal ap_block_pp0_stage2_11001 : BOOLEAN;
    signal tmp_104_cast_fu_867_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal tmp_104_cast_reg_1319 : STD_LOGIC_VECTOR (11 downto 0);
    signal ap_CS_fsm_pp0_stage3 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage3 : signal is "none";
    signal ap_block_state5_pp0_stage3_iter0 : BOOLEAN;
    signal ap_block_state10_pp0_stage3_iter1 : BOOLEAN;
    signal ap_block_state15_pp0_stage3_iter2 : BOOLEAN;
    signal ap_block_state20_pp0_stage3_iter3 : BOOLEAN;
    signal ap_block_state25_pp0_stage3_iter4 : BOOLEAN;
    signal ap_block_state30_pp0_stage3_iter5 : BOOLEAN;
    signal ap_block_state35_pp0_stage3_iter6 : BOOLEAN;
    signal ap_block_state40_pp0_stage3_iter7 : BOOLEAN;
    signal ap_block_state45_pp0_stage3_iter8 : BOOLEAN;
    signal ap_block_pp0_stage3_11001 : BOOLEAN;
    signal weights_0_load_reg_1347 : STD_LOGIC_VECTOR (31 downto 0);
    signal input_load_reg_1362 : STD_LOGIC_VECTOR (31 downto 0);
    signal weights_1_load_reg_1367 : STD_LOGIC_VECTOR (31 downto 0);
    signal input_load_16_reg_1372 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_101_fu_936_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_101_reg_1377 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_pp0_stage4 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage4 : signal is "none";
    signal ap_block_state6_pp0_stage4_iter0 : BOOLEAN;
    signal ap_block_state11_pp0_stage4_iter1 : BOOLEAN;
    signal ap_block_state16_pp0_stage4_iter2 : BOOLEAN;
    signal ap_block_state21_pp0_stage4_iter3 : BOOLEAN;
    signal ap_block_state26_pp0_stage4_iter4 : BOOLEAN;
    signal ap_block_state31_pp0_stage4_iter5 : BOOLEAN;
    signal ap_block_state36_pp0_stage4_iter6 : BOOLEAN;
    signal ap_block_state41_pp0_stage4_iter7 : BOOLEAN;
    signal ap_block_state46_pp0_stage4_iter8 : BOOLEAN;
    signal ap_block_pp0_stage4_11001 : BOOLEAN;
    signal tmp_101_reg_1377_pp0_iter1_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal weights_2_load_reg_1407 : STD_LOGIC_VECTOR (31 downto 0);
    signal input_load_17_reg_1412 : STD_LOGIC_VECTOR (31 downto 0);
    signal weights_3_load_reg_1417 : STD_LOGIC_VECTOR (31 downto 0);
    signal input_load_18_reg_1422 : STD_LOGIC_VECTOR (31 downto 0);
    signal n_2_fu_962_p2 : STD_LOGIC_VECTOR (2 downto 0);
    signal n_2_reg_1427 : STD_LOGIC_VECTOR (2 downto 0);
    signal weights_4_load_reg_1432 : STD_LOGIC_VECTOR (31 downto 0);
    signal input_load_19_reg_1437 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_enable_reg_pp0_iter1 : STD_LOGIC := '0';
    signal weights_5_load_reg_1442 : STD_LOGIC_VECTOR (31 downto 0);
    signal input_load_20_reg_1447 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_409_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_105_reg_1452 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_413_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_107_reg_1457 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_13_fu_973_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_14_fu_981_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_109_reg_1472 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_111_reg_1477 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_11_fu_995_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_12_fu_1003_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_113_reg_1492 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_115_reg_1497 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_s_fu_1017_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_10_fu_1025_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_397_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_106_reg_1512 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_enable_reg_pp0_iter2 : STD_LOGIC := '0';
    signal grp_fu_401_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_108_reg_1517 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_110_reg_1522 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_110_reg_1522_pp0_iter3_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_112_reg_1527 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_112_reg_1527_pp0_iter3_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_112_reg_1527_pp0_iter4_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_114_reg_1532 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_114_reg_1532_pp0_iter3_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_114_reg_1532_pp0_iter4_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_114_reg_1532_pp0_iter5_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_116_reg_1537 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_116_reg_1537_pp0_iter3_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_116_reg_1537_pp0_iter4_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_116_reg_1537_pp0_iter5_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_116_reg_1537_pp0_iter6_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_405_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_118_reg_1542 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_enable_reg_pp0_iter3 : STD_LOGIC := '0';
    signal tmp_119_reg_1547 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_enable_reg_pp0_iter4 : STD_LOGIC := '0';
    signal tmp_120_reg_1552 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_enable_reg_pp0_iter5 : STD_LOGIC := '0';
    signal tmp_121_reg_1557 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_enable_reg_pp0_iter7 : STD_LOGIC := '0';
    signal output_addr_reg_1562 : STD_LOGIC_VECTOR (10 downto 0);
    signal output_addr_reg_1562_pp0_iter8_reg : STD_LOGIC_VECTOR (10 downto 0);
    signal tmp_122_reg_1572 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_enable_reg_pp0_iter8 : STD_LOGIC := '0';
    signal bias_load_reg_1577 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_123_reg_1582 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_enable_reg_pp0_iter9 : STD_LOGIC := '0';
    signal ap_block_pp0_stage0_subdone : BOOLEAN;
    signal ap_condition_pp0_exit_iter0_state2 : STD_LOGIC;
    signal ap_block_pp0_stage4_subdone : BOOLEAN;
    signal ap_block_pp0_stage1_subdone : BOOLEAN;
    signal ap_enable_reg_pp0_iter6 : STD_LOGIC := '0';
    signal ap_phi_mux_indvar_flatten3_phi_fu_302_p4 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_block_pp0_stage0 : BOOLEAN;
    signal ap_phi_mux_co_phi_fu_313_p4 : STD_LOGIC_VECTOR (4 downto 0);
    signal ap_phi_mux_indvar_flatten4_phi_fu_324_p4 : STD_LOGIC_VECTOR (11 downto 0);
    signal ap_phi_mux_h_phi_fu_335_p4 : STD_LOGIC_VECTOR (3 downto 0);
    signal ap_phi_mux_indvar_flatten5_phi_fu_346_p4 : STD_LOGIC_VECTOR (8 downto 0);
    signal ap_phi_mux_w_phi_fu_357_p4 : STD_LOGIC_VECTOR (3 downto 0);
    signal ap_phi_mux_indvar_flatten_phi_fu_368_p4 : STD_LOGIC_VECTOR (5 downto 0);
    signal ap_phi_mux_m_phi_fu_379_p4 : STD_LOGIC_VECTOR (2 downto 0);
    signal ap_phi_mux_n_phi_fu_390_p4 : STD_LOGIC_VECTOR (2 downto 0);
    signal ap_block_pp0_stage2 : BOOLEAN;
    signal tmp_231_cast_fu_876_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_232_cast_fu_887_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_block_pp0_stage3 : BOOLEAN;
    signal tmp_233_cast_fu_907_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_234_cast_fu_917_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_block_pp0_stage4 : BOOLEAN;
    signal tmp_235_cast_fu_947_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_236_cast_fu_957_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_216_cast_fu_1139_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_93_mid2_fu_1063_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_93_fu_114 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_92_fu_118 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_91_fu_122 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_90_fu_126 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_89_fu_130 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_s_fu_134 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_block_pp0_stage1 : BOOLEAN;
    signal grp_fu_397_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_397_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_401_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_401_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_405_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_405_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_409_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_409_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_413_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_413_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal m_cast_fu_417_p1 : STD_LOGIC_VECTOR (3 downto 0);
    signal exitcond_flatten_fu_445_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal co_3_fu_439_p2 : STD_LOGIC_VECTOR (4 downto 0);
    signal tmp_97_fu_421_p2 : STD_LOGIC_VECTOR (3 downto 0);
    signal exitcond_fu_487_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal exitcond_flatten1_fu_499_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal exitcond_flatten2_fu_511_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal h_mid_fu_451_p3 : STD_LOGIC_VECTOR (3 downto 0);
    signal exitcond_flatten36_m_fu_517_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_170_fu_529_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal h_3_fu_523_p2 : STD_LOGIC_VECTOR (3 downto 0);
    signal tmp_116_mid_fu_467_p3 : STD_LOGIC_VECTOR (3 downto 0);
    signal exitcond_flatten36_n_fu_559_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal exitcond_mid_fu_493_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal exitcond_flatten_mid_fu_505_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal w_mid_fu_535_p3 : STD_LOGIC_VECTOR (3 downto 0);
    signal exitcond_flatten_mid_2_fu_577_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_173_fu_589_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_95_fu_595_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal w_4_fu_583_p2 : STD_LOGIC_VECTOR (3 downto 0);
    signal tmp_116_mid3_fu_551_p3 : STD_LOGIC_VECTOR (3 downto 0);
    signal exitcond_mid1_fu_571_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_175_fu_637_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_96_fu_643_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal indvar_flatten_op_fu_657_p2 : STD_LOGIC_VECTOR (5 downto 0);
    signal indvar_flatten34_op_fu_671_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal indvar_flatten84_op_fu_685_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal tmp_fu_702_p3 : STD_LOGIC_VECTOR (6 downto 0);
    signal p_shl1_cast_fu_709_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_93_mid2_cast_fu_699_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_117_mid_fu_719_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_117_mid3_fu_723_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal m_1_fu_733_p2 : STD_LOGIC_VECTOR (2 downto 0);
    signal tmp_114_mid2_cast_fu_748_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_165_fu_713_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal m_cast_mid1_fu_738_p1 : STD_LOGIC_VECTOR (3 downto 0);
    signal tmp_115_mid1_fu_758_p2 : STD_LOGIC_VECTOR (3 downto 0);
    signal tmp_116_mid2_fu_763_p3 : STD_LOGIC_VECTOR (3 downto 0);
    signal tmp_98_fu_769_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_99_fu_781_p3 : STD_LOGIC_VECTOR (4 downto 0);
    signal p_shl_cast_fu_777_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal p_shl9_cast_fu_789_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal tmp_117_mid1_fu_799_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_117_mid4_fu_728_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_117_fu_812_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_117_mid2_fu_805_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_shl6_cast_fu_826_p3 : STD_LOGIC_VECTOR (9 downto 0);
    signal tmp_219_cast_fu_823_p1 : STD_LOGIC_VECTOR (9 downto 0);
    signal tmp_102_cast_fu_847_p1 : STD_LOGIC_VECTOR (9 downto 0);
    signal tmp_177_fu_833_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal tmp_184_fu_850_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal n_cast_fu_844_p1 : STD_LOGIC_VECTOR (3 downto 0);
    signal tmp_103_fu_862_p2 : STD_LOGIC_VECTOR (3 downto 0);
    signal tmp_185_fu_871_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal tmp_179_fu_839_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal tmp_186_fu_881_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal tmp_180_fu_892_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal tmp_187_fu_902_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal tmp_181_fu_897_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal tmp_188_fu_912_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal tmp_100_fu_932_p2 : STD_LOGIC_VECTOR (2 downto 0);
    signal tmp_182_fu_922_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal tmp_189_fu_942_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal tmp_183_fu_927_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal tmp_190_fu_952_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal tmp_166_fu_1067_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_167_fu_1078_p3 : STD_LOGIC_VECTOR (5 downto 0);
    signal p_shl2_cast_fu_1074_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal p_shl3_cast_fu_1085_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp_100_mid2_cast_fu_1095_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp_168_fu_1089_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp_171_fu_1098_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp_94_fu_1112_p3 : STD_LOGIC_VECTOR (9 downto 0);
    signal p_shl4_cast_fu_1104_p3 : STD_LOGIC_VECTOR (11 downto 0);
    signal p_shl5_cast_fu_1120_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal tmp_107_mid2_cast_fu_1130_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal tmp_172_fu_1124_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal tmp_174_fu_1133_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal ap_CS_fsm_state49 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state49 : signal is "none";
    signal ap_NS_fsm : STD_LOGIC_VECTOR (6 downto 0);
    signal ap_block_pp0_stage2_subdone : BOOLEAN;
    signal ap_block_pp0_stage3_subdone : BOOLEAN;
    signal ap_idle_pp0 : STD_LOGIC;
    signal ap_enable_pp0 : STD_LOGIC;

    component conv1_fadd_32ns_3bkb IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (31 downto 0);
        din1 : IN STD_LOGIC_VECTOR (31 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component conv1_fmul_32ns_3cud IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (31 downto 0);
        din1 : IN STD_LOGIC_VECTOR (31 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;



begin
    conv1_fadd_32ns_3bkb_U40 : component conv1_fadd_32ns_3bkb
    generic map (
        ID => 1,
        NUM_STAGE => 5,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_397_p0,
        din1 => grp_fu_397_p1,
        ce => ap_const_logic_1,
        dout => grp_fu_397_p2);

    conv1_fadd_32ns_3bkb_U41 : component conv1_fadd_32ns_3bkb
    generic map (
        ID => 1,
        NUM_STAGE => 5,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_401_p0,
        din1 => grp_fu_401_p1,
        ce => ap_const_logic_1,
        dout => grp_fu_401_p2);

    conv1_fadd_32ns_3bkb_U42 : component conv1_fadd_32ns_3bkb
    generic map (
        ID => 1,
        NUM_STAGE => 5,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_405_p0,
        din1 => grp_fu_405_p1,
        ce => ap_const_logic_1,
        dout => grp_fu_405_p2);

    conv1_fmul_32ns_3cud_U43 : component conv1_fmul_32ns_3cud
    generic map (
        ID => 1,
        NUM_STAGE => 4,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_409_p0,
        din1 => grp_fu_409_p1,
        ce => ap_const_logic_1,
        dout => grp_fu_409_p2);

    conv1_fmul_32ns_3cud_U44 : component conv1_fmul_32ns_3cud
    generic map (
        ID => 1,
        NUM_STAGE => 4,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_413_p0,
        din1 => grp_fu_413_p1,
        ce => ap_const_logic_1,
        dout => grp_fu_413_p2);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_state1;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter0_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter0 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_const_logic_1 = ap_condition_pp0_exit_iter0_state2) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                    ap_enable_reg_pp0_iter0 <= ap_const_logic_0;
                elsif (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1))) then 
                    ap_enable_reg_pp0_iter0 <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage4_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4))) then
                    if ((ap_const_logic_1 = ap_condition_pp0_exit_iter0_state2)) then 
                        ap_enable_reg_pp0_iter1 <= (ap_const_logic_1 xor ap_condition_pp0_exit_iter0_state2);
                    elsif ((ap_const_boolean_1 = ap_const_boolean_1)) then 
                        ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
                    end if;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter2_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter2 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage4_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4))) then 
                    ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter3_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter3 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage4_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4))) then 
                    ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter4_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter4 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage4_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4))) then 
                    ap_enable_reg_pp0_iter4 <= ap_enable_reg_pp0_iter3;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter5_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter5 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage4_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4))) then 
                    ap_enable_reg_pp0_iter5 <= ap_enable_reg_pp0_iter4;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter6_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter6 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage4_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4))) then 
                    ap_enable_reg_pp0_iter6 <= ap_enable_reg_pp0_iter5;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter7_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter7 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage4_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4))) then 
                    ap_enable_reg_pp0_iter7 <= ap_enable_reg_pp0_iter6;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter8_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter8 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage4_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4))) then 
                    ap_enable_reg_pp0_iter8 <= ap_enable_reg_pp0_iter7;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter9_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter9 <= ap_const_logic_0;
            else
                if ((((ap_const_boolean_0 = ap_block_pp0_stage4_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4)) or ((ap_const_boolean_0 = ap_block_pp0_stage1_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1)))) then 
                    ap_enable_reg_pp0_iter9 <= ap_enable_reg_pp0_iter8;
                elsif (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1))) then 
                    ap_enable_reg_pp0_iter9 <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    co_reg_309_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (exitcond_flatten5_reg_1180 = ap_const_lv1_0))) then 
                co_reg_309 <= tmp_93_mid2_v_reg_1189;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1))) then 
                co_reg_309 <= ap_const_lv5_0;
            end if; 
        end if;
    end process;

    h_reg_331_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (exitcond_flatten5_reg_1180 = ap_const_lv1_0))) then 
                h_reg_331 <= tmp_100_mid2_reg_1209;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1))) then 
                h_reg_331 <= ap_const_lv4_0;
            end if; 
        end if;
    end process;

    indvar_flatten3_reg_298_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (exitcond_flatten5_reg_1180 = ap_const_lv1_0))) then 
                indvar_flatten3_reg_298 <= indvar_flatten_next5_reg_1184;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1))) then 
                indvar_flatten3_reg_298 <= ap_const_lv16_0;
            end if; 
        end if;
    end process;

    indvar_flatten4_reg_320_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (exitcond_flatten5_reg_1180 = ap_const_lv1_0))) then 
                indvar_flatten4_reg_320 <= indvar_flatten_next4_reg_1270;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1))) then 
                indvar_flatten4_reg_320 <= ap_const_lv12_0;
            end if; 
        end if;
    end process;

    indvar_flatten5_reg_342_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (exitcond_flatten5_reg_1180 = ap_const_lv1_0))) then 
                indvar_flatten5_reg_342 <= indvar_flatten_next3_reg_1265;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1))) then 
                indvar_flatten5_reg_342 <= ap_const_lv9_0;
            end if; 
        end if;
    end process;

    indvar_flatten_reg_364_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (exitcond_flatten5_reg_1180 = ap_const_lv1_0))) then 
                indvar_flatten_reg_364 <= indvar_flatten_next_reg_1260;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1))) then 
                indvar_flatten_reg_364 <= ap_const_lv6_0;
            end if; 
        end if;
    end process;

    m_reg_375_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (exitcond_flatten5_reg_1180 = ap_const_lv1_0))) then 
                m_reg_375 <= tmp_114_mid2_reg_1275;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1))) then 
                m_reg_375 <= ap_const_lv3_0;
            end if; 
        end if;
    end process;

    n_reg_386_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (exitcond_flatten5_reg_1180 = ap_const_lv1_0))) then 
                n_reg_386 <= n_2_reg_1427;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1))) then 
                n_reg_386 <= ap_const_lv3_0;
            end if; 
        end if;
    end process;

    w_reg_353_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (exitcond_flatten5_reg_1180 = ap_const_lv1_0))) then 
                w_reg_353 <= tmp_107_mid2_reg_1227;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1))) then 
                w_reg_353 <= ap_const_lv4_0;
            end if; 
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((or_cond5_reg_1297_pp0_iter7_reg = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                bias_load_reg_1577 <= bias_q0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                exitcond_flatten5_reg_1180 <= exitcond_flatten5_fu_427_p2;
                exitcond_flatten5_reg_1180_pp0_iter1_reg <= exitcond_flatten5_reg_1180;
                exitcond_flatten5_reg_1180_pp0_iter2_reg <= exitcond_flatten5_reg_1180_pp0_iter1_reg;
                exitcond_flatten5_reg_1180_pp0_iter3_reg <= exitcond_flatten5_reg_1180_pp0_iter2_reg;
                exitcond_flatten5_reg_1180_pp0_iter4_reg <= exitcond_flatten5_reg_1180_pp0_iter3_reg;
                exitcond_flatten5_reg_1180_pp0_iter5_reg <= exitcond_flatten5_reg_1180_pp0_iter4_reg;
                exitcond_flatten5_reg_1180_pp0_iter6_reg <= exitcond_flatten5_reg_1180_pp0_iter5_reg;
                exitcond_flatten5_reg_1180_pp0_iter7_reg <= exitcond_flatten5_reg_1180_pp0_iter6_reg;
                tmp_100_mid2_reg_1209_pp0_iter1_reg <= tmp_100_mid2_reg_1209;
                tmp_100_mid2_reg_1209_pp0_iter2_reg <= tmp_100_mid2_reg_1209_pp0_iter1_reg;
                tmp_100_mid2_reg_1209_pp0_iter3_reg <= tmp_100_mid2_reg_1209_pp0_iter2_reg;
                tmp_100_mid2_reg_1209_pp0_iter4_reg <= tmp_100_mid2_reg_1209_pp0_iter3_reg;
                tmp_100_mid2_reg_1209_pp0_iter5_reg <= tmp_100_mid2_reg_1209_pp0_iter4_reg;
                tmp_100_mid2_reg_1209_pp0_iter6_reg <= tmp_100_mid2_reg_1209_pp0_iter5_reg;
                tmp_100_mid2_reg_1209_pp0_iter7_reg <= tmp_100_mid2_reg_1209_pp0_iter6_reg;
                tmp_107_mid2_reg_1227_pp0_iter1_reg <= tmp_107_mid2_reg_1227;
                tmp_107_mid2_reg_1227_pp0_iter2_reg <= tmp_107_mid2_reg_1227_pp0_iter1_reg;
                tmp_107_mid2_reg_1227_pp0_iter3_reg <= tmp_107_mid2_reg_1227_pp0_iter2_reg;
                tmp_107_mid2_reg_1227_pp0_iter4_reg <= tmp_107_mid2_reg_1227_pp0_iter3_reg;
                tmp_107_mid2_reg_1227_pp0_iter5_reg <= tmp_107_mid2_reg_1227_pp0_iter4_reg;
                tmp_107_mid2_reg_1227_pp0_iter6_reg <= tmp_107_mid2_reg_1227_pp0_iter5_reg;
                tmp_107_mid2_reg_1227_pp0_iter7_reg <= tmp_107_mid2_reg_1227_pp0_iter6_reg;
                tmp_93_mid2_v_reg_1189_pp0_iter1_reg <= tmp_93_mid2_v_reg_1189;
                tmp_93_mid2_v_reg_1189_pp0_iter2_reg <= tmp_93_mid2_v_reg_1189_pp0_iter1_reg;
                tmp_93_mid2_v_reg_1189_pp0_iter3_reg <= tmp_93_mid2_v_reg_1189_pp0_iter2_reg;
                tmp_93_mid2_v_reg_1189_pp0_iter4_reg <= tmp_93_mid2_v_reg_1189_pp0_iter3_reg;
                tmp_93_mid2_v_reg_1189_pp0_iter5_reg <= tmp_93_mid2_v_reg_1189_pp0_iter4_reg;
                tmp_93_mid2_v_reg_1189_pp0_iter6_reg <= tmp_93_mid2_v_reg_1189_pp0_iter5_reg;
                tmp_93_mid2_v_reg_1189_pp0_iter7_reg <= tmp_93_mid2_v_reg_1189_pp0_iter6_reg;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (exitcond_flatten5_fu_427_p2 = ap_const_lv1_0))) then
                exitcond_mid2_reg_1244 <= exitcond_mid2_fu_631_p2;
                m_mid1_reg_1221 <= m_mid1_fu_601_p3;
                n_mid2_reg_1251 <= n_mid2_fu_649_p3;
                not_exitcond_flatten_1_reg_1216 <= not_exitcond_flatten_1_fu_565_p2;
                not_exitcond_flatten_2_reg_1239 <= not_exitcond_flatten_2_fu_625_p2;
                not_exitcond_flatten_reg_1199 <= not_exitcond_flatten_fu_475_p2;
                tmp_116_mid5_reg_1234 <= tmp_116_mid5_fu_617_p3;
                tmp_169_reg_1204 <= tmp_169_fu_481_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (exitcond_flatten5_fu_427_p2 = ap_const_lv1_0))) then
                indvar_flatten_next3_reg_1265 <= indvar_flatten_next3_fu_677_p3;
                indvar_flatten_next4_reg_1270 <= indvar_flatten_next4_fu_691_p3;
                indvar_flatten_next_reg_1260 <= indvar_flatten_next_fu_663_p3;
                tmp_100_mid2_reg_1209 <= tmp_100_mid2_fu_543_p3;
                tmp_107_mid2_reg_1227 <= tmp_107_mid2_fu_609_p3;
                tmp_93_mid2_v_reg_1189 <= tmp_93_mid2_v_fu_459_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                indvar_flatten_next5_reg_1184 <= indvar_flatten_next5_fu_433_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage3_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (exitcond_flatten5_reg_1180 = ap_const_lv1_0))) then
                input_load_16_reg_1372 <= input_r_q1;
                input_load_reg_1362 <= input_r_q0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage4_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (exitcond_flatten5_reg_1180 = ap_const_lv1_0))) then
                input_load_17_reg_1412 <= input_r_q0;
                input_load_18_reg_1422 <= input_r_q1;
                n_2_reg_1427 <= n_2_fu_962_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (exitcond_flatten5_reg_1180 = ap_const_lv1_0))) then
                input_load_19_reg_1437 <= input_r_q0;
                input_load_20_reg_1447 <= input_r_q1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (exitcond_flatten5_reg_1180 = ap_const_lv1_0))) then
                or_cond5_reg_1297 <= or_cond5_fu_817_p2;
                tmp_176_reg_1281 <= tmp_176_fu_752_p2;
                    tmp_178_reg_1287(11 downto 1) <= tmp_178_fu_793_p2(11 downto 1);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then
                or_cond5_reg_1297_pp0_iter1_reg <= or_cond5_reg_1297;
                or_cond5_reg_1297_pp0_iter2_reg <= or_cond5_reg_1297_pp0_iter1_reg;
                or_cond5_reg_1297_pp0_iter3_reg <= or_cond5_reg_1297_pp0_iter2_reg;
                or_cond5_reg_1297_pp0_iter4_reg <= or_cond5_reg_1297_pp0_iter3_reg;
                or_cond5_reg_1297_pp0_iter5_reg <= or_cond5_reg_1297_pp0_iter4_reg;
                or_cond5_reg_1297_pp0_iter6_reg <= or_cond5_reg_1297_pp0_iter5_reg;
                or_cond5_reg_1297_pp0_iter7_reg <= or_cond5_reg_1297_pp0_iter6_reg;
                or_cond5_reg_1297_pp0_iter8_reg <= or_cond5_reg_1297_pp0_iter7_reg;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage4_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4) and (exitcond_flatten5_reg_1180_pp0_iter7_reg = ap_const_lv1_0))) then
                output_addr_reg_1562 <= tmp_216_cast_fu_1139_p1(11 - 1 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage4_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4))) then
                output_addr_reg_1562_pp0_iter8_reg <= output_addr_reg_1562;
                tmp_101_reg_1377_pp0_iter1_reg <= tmp_101_reg_1377;
                tmp_114_reg_1532_pp0_iter3_reg <= tmp_114_reg_1532;
                tmp_114_reg_1532_pp0_iter4_reg <= tmp_114_reg_1532_pp0_iter3_reg;
                tmp_114_reg_1532_pp0_iter5_reg <= tmp_114_reg_1532_pp0_iter4_reg;
                tmp_116_reg_1537_pp0_iter3_reg <= tmp_116_reg_1537;
                tmp_116_reg_1537_pp0_iter4_reg <= tmp_116_reg_1537_pp0_iter3_reg;
                tmp_116_reg_1537_pp0_iter5_reg <= tmp_116_reg_1537_pp0_iter4_reg;
                tmp_116_reg_1537_pp0_iter6_reg <= tmp_116_reg_1537_pp0_iter5_reg;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage4_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4) and (exitcond_flatten5_reg_1180 = ap_const_lv1_0))) then
                tmp_101_reg_1377 <= tmp_101_fu_936_p2;
                weights_2_load_reg_1407 <= weights_2_q0;
                weights_3_load_reg_1417 <= weights_3_q0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (exitcond_flatten5_reg_1180 = ap_const_lv1_0))) then
                    tmp_104_cast_reg_1319(3 downto 0) <= tmp_104_cast_fu_867_p1(3 downto 0);
                    tmp_230_cast_reg_1301(9 downto 0) <= tmp_230_cast_fu_856_p1(9 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (exitcond_flatten5_reg_1180_pp0_iter1_reg = ap_const_lv1_0))) then
                tmp_105_reg_1452 <= grp_fu_409_p2;
                tmp_107_reg_1457 <= grp_fu_413_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (exitcond_flatten5_reg_1180_pp0_iter2_reg = ap_const_lv1_0))) then
                tmp_106_reg_1512 <= grp_fu_397_p2;
                tmp_108_reg_1517 <= grp_fu_401_p2;
                tmp_92_fu_118 <= grp_fu_401_p2;
                tmp_93_fu_114 <= grp_fu_397_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage3_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3) and (exitcond_flatten5_reg_1180_pp0_iter1_reg = ap_const_lv1_0))) then
                tmp_109_reg_1472 <= grp_fu_409_p2;
                tmp_111_reg_1477 <= grp_fu_413_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage3_11001) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3) and (exitcond_flatten5_reg_1180_pp0_iter2_reg = ap_const_lv1_0))) then
                tmp_110_reg_1522 <= grp_fu_397_p2;
                tmp_112_reg_1527 <= grp_fu_401_p2;
                tmp_90_fu_126 <= grp_fu_401_p2;
                tmp_91_fu_122 <= grp_fu_397_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage3_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3))) then
                tmp_110_reg_1522_pp0_iter3_reg <= tmp_110_reg_1522;
                tmp_112_reg_1527_pp0_iter3_reg <= tmp_112_reg_1527;
                tmp_112_reg_1527_pp0_iter4_reg <= tmp_112_reg_1527_pp0_iter3_reg;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage4_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4) and (exitcond_flatten5_reg_1180_pp0_iter1_reg = ap_const_lv1_0))) then
                tmp_113_reg_1492 <= grp_fu_409_p2;
                tmp_115_reg_1497 <= grp_fu_413_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (exitcond_flatten5_reg_1180 = ap_const_lv1_0))) then
                tmp_114_mid2_reg_1275 <= tmp_114_mid2_fu_742_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage4_11001) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4) and (exitcond_flatten5_reg_1180_pp0_iter2_reg = ap_const_lv1_0))) then
                tmp_114_reg_1532 <= grp_fu_397_p2;
                tmp_116_reg_1537 <= grp_fu_401_p2;
                tmp_89_fu_130 <= grp_fu_397_p2;
                tmp_s_fu_134 <= grp_fu_401_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (or_cond5_reg_1297_pp0_iter3_reg = ap_const_lv1_1) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then
                tmp_118_reg_1542 <= grp_fu_405_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage3_11001) and (or_cond5_reg_1297_pp0_iter4_reg = ap_const_lv1_1) and (ap_enable_reg_pp0_iter4 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3))) then
                tmp_119_reg_1547 <= grp_fu_405_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage4_11001) and (or_cond5_reg_1297_pp0_iter5_reg = ap_const_lv1_1) and (ap_enable_reg_pp0_iter5 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4))) then
                tmp_120_reg_1552 <= grp_fu_405_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((or_cond5_reg_1297_pp0_iter6_reg = ap_const_lv1_1) and (ap_enable_reg_pp0_iter7 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                tmp_121_reg_1557 <= grp_fu_397_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((or_cond5_reg_1297_pp0_iter7_reg = ap_const_lv1_1) and (ap_enable_reg_pp0_iter8 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                tmp_122_reg_1572 <= grp_fu_401_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((or_cond5_reg_1297_pp0_iter8_reg = ap_const_lv1_1) and (ap_enable_reg_pp0_iter9 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                tmp_123_reg_1582 <= grp_fu_405_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage3_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3) and (exitcond_flatten5_reg_1180 = ap_const_lv1_0))) then
                weights_0_load_reg_1347 <= weights_0_q0;
                weights_1_load_reg_1367 <= weights_1_q0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (exitcond_flatten5_reg_1180 = ap_const_lv1_0))) then
                weights_4_load_reg_1432 <= weights_4_q0;
                weights_5_load_reg_1442 <= weights_5_q0;
            end if;
        end if;
    end process;
    tmp_178_reg_1287(0) <= '0';
    tmp_230_cast_reg_1301(63 downto 10) <= "000000000000000000000000000000000000000000000000000000";
    tmp_104_cast_reg_1319(11 downto 4) <= "00000000";

    ap_NS_fsm_assign_proc : process (ap_start, ap_CS_fsm, ap_CS_fsm_state1, exitcond_flatten5_fu_427_p2, ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage1, ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter8, ap_enable_reg_pp0_iter9, ap_block_pp0_stage0_subdone, ap_block_pp0_stage4_subdone, ap_block_pp0_stage1_subdone, ap_block_pp0_stage2_subdone, ap_block_pp0_stage3_subdone)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_state1 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1))) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                else
                    ap_NS_fsm <= ap_ST_fsm_state1;
                end if;
            when ap_ST_fsm_pp0_stage0 => 
                if ((not(((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (exitcond_flatten5_fu_427_p2 = ap_const_lv1_1))) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone))) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage1;
                elsif (((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (exitcond_flatten5_fu_427_p2 = ap_const_lv1_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state49;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                end if;
            when ap_ST_fsm_pp0_stage1 => 
                if ((not(((ap_const_boolean_0 = ap_block_pp0_stage1_subdone) and (ap_enable_reg_pp0_iter8 = ap_const_logic_0) and (ap_enable_reg_pp0_iter9 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) and (ap_const_boolean_0 = ap_block_pp0_stage1_subdone))) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage2;
                elsif (((ap_const_boolean_0 = ap_block_pp0_stage1_subdone) and (ap_enable_reg_pp0_iter8 = ap_const_logic_0) and (ap_enable_reg_pp0_iter9 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then
                    ap_NS_fsm <= ap_ST_fsm_state49;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage1;
                end if;
            when ap_ST_fsm_pp0_stage2 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage2_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage3;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage2;
                end if;
            when ap_ST_fsm_pp0_stage3 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage3_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage4;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage3;
                end if;
            when ap_ST_fsm_pp0_stage4 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage4_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage4;
                end if;
            when ap_ST_fsm_state49 => 
                ap_NS_fsm <= ap_ST_fsm_state1;
            when others =>  
                ap_NS_fsm <= "XXXXXXX";
        end case;
    end process;
    ap_CS_fsm_pp0_stage0 <= ap_CS_fsm(1);
    ap_CS_fsm_pp0_stage1 <= ap_CS_fsm(2);
    ap_CS_fsm_pp0_stage2 <= ap_CS_fsm(3);
    ap_CS_fsm_pp0_stage3 <= ap_CS_fsm(4);
    ap_CS_fsm_pp0_stage4 <= ap_CS_fsm(5);
    ap_CS_fsm_state1 <= ap_CS_fsm(0);
    ap_CS_fsm_state49 <= ap_CS_fsm(6);
        ap_block_pp0_stage0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage0_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage0_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage1_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage1_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage2 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage2_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage2_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage3 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage3_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage3_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage4 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage4_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage4_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state10_pp0_stage3_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state11_pp0_stage4_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state12_pp0_stage0_iter2 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state13_pp0_stage1_iter2 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state14_pp0_stage2_iter2 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state15_pp0_stage3_iter2 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state16_pp0_stage4_iter2 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state17_pp0_stage0_iter3 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state18_pp0_stage1_iter3 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state19_pp0_stage2_iter3 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state20_pp0_stage3_iter3 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state21_pp0_stage4_iter3 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state22_pp0_stage0_iter4 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state23_pp0_stage1_iter4 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state24_pp0_stage2_iter4 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state25_pp0_stage3_iter4 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state26_pp0_stage4_iter4 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state27_pp0_stage0_iter5 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state28_pp0_stage1_iter5 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state29_pp0_stage2_iter5 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state2_pp0_stage0_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state30_pp0_stage3_iter5 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state31_pp0_stage4_iter5 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state32_pp0_stage0_iter6 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state33_pp0_stage1_iter6 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state34_pp0_stage2_iter6 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state35_pp0_stage3_iter6 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state36_pp0_stage4_iter6 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state37_pp0_stage0_iter7 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state38_pp0_stage1_iter7 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state39_pp0_stage2_iter7 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state3_pp0_stage1_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state40_pp0_stage3_iter7 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state41_pp0_stage4_iter7 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state42_pp0_stage0_iter8 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state43_pp0_stage1_iter8 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state44_pp0_stage2_iter8 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state45_pp0_stage3_iter8 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state46_pp0_stage4_iter8 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state47_pp0_stage0_iter9 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state48_pp0_stage1_iter9 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state4_pp0_stage2_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state5_pp0_stage3_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state6_pp0_stage4_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state7_pp0_stage0_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state8_pp0_stage1_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state9_pp0_stage2_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_condition_pp0_exit_iter0_state2_assign_proc : process(exitcond_flatten5_fu_427_p2)
    begin
        if ((exitcond_flatten5_fu_427_p2 = ap_const_lv1_1)) then 
            ap_condition_pp0_exit_iter0_state2 <= ap_const_logic_1;
        else 
            ap_condition_pp0_exit_iter0_state2 <= ap_const_logic_0;
        end if; 
    end process;


    ap_done_assign_proc : process(ap_start, ap_CS_fsm_state1, ap_CS_fsm_state49)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state49) or ((ap_start = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_state1)))) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_const_logic_0;
        end if; 
    end process;

    ap_enable_pp0 <= (ap_idle_pp0 xor ap_const_logic_1);

    ap_idle_assign_proc : process(ap_start, ap_CS_fsm_state1)
    begin
        if (((ap_start = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp0_assign_proc : process(ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter2, ap_enable_reg_pp0_iter3, ap_enable_reg_pp0_iter4, ap_enable_reg_pp0_iter5, ap_enable_reg_pp0_iter7, ap_enable_reg_pp0_iter8, ap_enable_reg_pp0_iter9, ap_enable_reg_pp0_iter6)
    begin
        if (((ap_enable_reg_pp0_iter6 = ap_const_logic_0) and (ap_enable_reg_pp0_iter9 = ap_const_logic_0) and (ap_enable_reg_pp0_iter8 = ap_const_logic_0) and (ap_enable_reg_pp0_iter7 = ap_const_logic_0) and (ap_enable_reg_pp0_iter5 = ap_const_logic_0) and (ap_enable_reg_pp0_iter4 = ap_const_logic_0) and (ap_enable_reg_pp0_iter3 = ap_const_logic_0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_0))) then 
            ap_idle_pp0 <= ap_const_logic_1;
        else 
            ap_idle_pp0 <= ap_const_logic_0;
        end if; 
    end process;


    ap_phi_mux_co_phi_fu_313_p4_assign_proc : process(co_reg_309, exitcond_flatten5_reg_1180, ap_CS_fsm_pp0_stage0, tmp_93_mid2_v_reg_1189, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (exitcond_flatten5_reg_1180 = ap_const_lv1_0))) then 
            ap_phi_mux_co_phi_fu_313_p4 <= tmp_93_mid2_v_reg_1189;
        else 
            ap_phi_mux_co_phi_fu_313_p4 <= co_reg_309;
        end if; 
    end process;


    ap_phi_mux_h_phi_fu_335_p4_assign_proc : process(h_reg_331, exitcond_flatten5_reg_1180, ap_CS_fsm_pp0_stage0, tmp_100_mid2_reg_1209, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (exitcond_flatten5_reg_1180 = ap_const_lv1_0))) then 
            ap_phi_mux_h_phi_fu_335_p4 <= tmp_100_mid2_reg_1209;
        else 
            ap_phi_mux_h_phi_fu_335_p4 <= h_reg_331;
        end if; 
    end process;


    ap_phi_mux_indvar_flatten3_phi_fu_302_p4_assign_proc : process(indvar_flatten3_reg_298, exitcond_flatten5_reg_1180, ap_CS_fsm_pp0_stage0, indvar_flatten_next5_reg_1184, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (exitcond_flatten5_reg_1180 = ap_const_lv1_0))) then 
            ap_phi_mux_indvar_flatten3_phi_fu_302_p4 <= indvar_flatten_next5_reg_1184;
        else 
            ap_phi_mux_indvar_flatten3_phi_fu_302_p4 <= indvar_flatten3_reg_298;
        end if; 
    end process;


    ap_phi_mux_indvar_flatten4_phi_fu_324_p4_assign_proc : process(indvar_flatten4_reg_320, exitcond_flatten5_reg_1180, ap_CS_fsm_pp0_stage0, indvar_flatten_next4_reg_1270, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (exitcond_flatten5_reg_1180 = ap_const_lv1_0))) then 
            ap_phi_mux_indvar_flatten4_phi_fu_324_p4 <= indvar_flatten_next4_reg_1270;
        else 
            ap_phi_mux_indvar_flatten4_phi_fu_324_p4 <= indvar_flatten4_reg_320;
        end if; 
    end process;


    ap_phi_mux_indvar_flatten5_phi_fu_346_p4_assign_proc : process(indvar_flatten5_reg_342, exitcond_flatten5_reg_1180, ap_CS_fsm_pp0_stage0, indvar_flatten_next3_reg_1265, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (exitcond_flatten5_reg_1180 = ap_const_lv1_0))) then 
            ap_phi_mux_indvar_flatten5_phi_fu_346_p4 <= indvar_flatten_next3_reg_1265;
        else 
            ap_phi_mux_indvar_flatten5_phi_fu_346_p4 <= indvar_flatten5_reg_342;
        end if; 
    end process;


    ap_phi_mux_indvar_flatten_phi_fu_368_p4_assign_proc : process(indvar_flatten_reg_364, exitcond_flatten5_reg_1180, ap_CS_fsm_pp0_stage0, indvar_flatten_next_reg_1260, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (exitcond_flatten5_reg_1180 = ap_const_lv1_0))) then 
            ap_phi_mux_indvar_flatten_phi_fu_368_p4 <= indvar_flatten_next_reg_1260;
        else 
            ap_phi_mux_indvar_flatten_phi_fu_368_p4 <= indvar_flatten_reg_364;
        end if; 
    end process;


    ap_phi_mux_m_phi_fu_379_p4_assign_proc : process(m_reg_375, exitcond_flatten5_reg_1180, ap_CS_fsm_pp0_stage0, tmp_114_mid2_reg_1275, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (exitcond_flatten5_reg_1180 = ap_const_lv1_0))) then 
            ap_phi_mux_m_phi_fu_379_p4 <= tmp_114_mid2_reg_1275;
        else 
            ap_phi_mux_m_phi_fu_379_p4 <= m_reg_375;
        end if; 
    end process;


    ap_phi_mux_n_phi_fu_390_p4_assign_proc : process(n_reg_386, exitcond_flatten5_reg_1180, ap_CS_fsm_pp0_stage0, n_2_reg_1427, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (exitcond_flatten5_reg_1180 = ap_const_lv1_0))) then 
            ap_phi_mux_n_phi_fu_390_p4 <= n_2_reg_1427;
        else 
            ap_phi_mux_n_phi_fu_390_p4 <= n_reg_386;
        end if; 
    end process;


    ap_phi_mux_w_phi_fu_357_p4_assign_proc : process(w_reg_353, exitcond_flatten5_reg_1180, ap_CS_fsm_pp0_stage0, tmp_107_mid2_reg_1227, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (exitcond_flatten5_reg_1180 = ap_const_lv1_0))) then 
            ap_phi_mux_w_phi_fu_357_p4 <= tmp_107_mid2_reg_1227;
        else 
            ap_phi_mux_w_phi_fu_357_p4 <= w_reg_353;
        end if; 
    end process;


    ap_ready_assign_proc : process(ap_CS_fsm_state49)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state49)) then 
            ap_ready <= ap_const_logic_1;
        else 
            ap_ready <= ap_const_logic_0;
        end if; 
    end process;

    bias_address0 <= tmp_93_mid2_fu_1063_p1(4 - 1 downto 0);

    bias_ce0_assign_proc : process(ap_CS_fsm_pp0_stage4, ap_block_pp0_stage4_11001, ap_enable_reg_pp0_iter7)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage4_11001) and (ap_enable_reg_pp0_iter7 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4))) then 
            bias_ce0 <= ap_const_logic_1;
        else 
            bias_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    co_3_fu_439_p2 <= std_logic_vector(unsigned(ap_phi_mux_co_phi_fu_313_p4) + unsigned(ap_const_lv5_1));
    exitcond_flatten1_fu_499_p2 <= "1" when (ap_phi_mux_indvar_flatten_phi_fu_368_p4 = ap_const_lv6_19) else "0";
    exitcond_flatten2_fu_511_p2 <= "1" when (ap_phi_mux_indvar_flatten5_phi_fu_346_p4 = ap_const_lv9_FA) else "0";
    exitcond_flatten36_m_fu_517_p2 <= (not_exitcond_flatten_fu_475_p2 and exitcond_flatten2_fu_511_p2);
    exitcond_flatten36_n_fu_559_p2 <= (exitcond_flatten2_fu_511_p2 xor ap_const_lv1_1);
    exitcond_flatten5_fu_427_p2 <= "1" when (ap_phi_mux_indvar_flatten3_phi_fu_302_p4 = ap_const_lv16_9C40) else "0";
    exitcond_flatten_fu_445_p2 <= "1" when (ap_phi_mux_indvar_flatten4_phi_fu_324_p4 = ap_const_lv12_9C4) else "0";
    exitcond_flatten_mid_2_fu_577_p2 <= (not_exitcond_flatten_1_fu_565_p2 and exitcond_flatten_mid_fu_505_p2);
    exitcond_flatten_mid_fu_505_p2 <= (not_exitcond_flatten_fu_475_p2 and exitcond_flatten1_fu_499_p2);
    exitcond_fu_487_p2 <= "1" when (ap_phi_mux_n_phi_fu_390_p4 = ap_const_lv3_5) else "0";
    exitcond_mid1_fu_571_p2 <= (not_exitcond_flatten_1_fu_565_p2 and exitcond_mid_fu_493_p2);
    exitcond_mid2_fu_631_p2 <= (not_exitcond_flatten_2_fu_625_p2 and exitcond_mid1_fu_571_p2);
    exitcond_mid_fu_493_p2 <= (not_exitcond_flatten_fu_475_p2 and exitcond_fu_487_p2);

    grp_fu_397_p0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_CS_fsm_pp0_stage1, ap_CS_fsm_pp0_stage3, ap_CS_fsm_pp0_stage4, ap_enable_reg_pp0_iter1, p_14_fu_981_p3, p_12_fu_1003_p3, p_10_fu_1025_p3, ap_enable_reg_pp0_iter2, tmp_120_reg_1552, ap_enable_reg_pp0_iter6, ap_block_pp0_stage0, ap_block_pp0_stage3, ap_block_pp0_stage4, ap_block_pp0_stage1)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_enable_reg_pp0_iter6 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
            grp_fu_397_p0 <= tmp_120_reg_1552;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            grp_fu_397_p0 <= p_10_fu_1025_p3;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage4) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4))) then 
            grp_fu_397_p0 <= p_12_fu_1003_p3;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage3) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3))) then 
            grp_fu_397_p0 <= p_14_fu_981_p3;
        else 
            grp_fu_397_p0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_397_p1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_CS_fsm_pp0_stage1, ap_CS_fsm_pp0_stage3, ap_CS_fsm_pp0_stage4, ap_enable_reg_pp0_iter1, tmp_105_reg_1452, tmp_109_reg_1472, tmp_113_reg_1492, ap_enable_reg_pp0_iter2, tmp_114_reg_1532_pp0_iter5_reg, ap_enable_reg_pp0_iter6, ap_block_pp0_stage0, ap_block_pp0_stage3, ap_block_pp0_stage4, ap_block_pp0_stage1)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_enable_reg_pp0_iter6 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
            grp_fu_397_p1 <= tmp_114_reg_1532_pp0_iter5_reg;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            grp_fu_397_p1 <= tmp_113_reg_1492;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage4) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4))) then 
            grp_fu_397_p1 <= tmp_109_reg_1472;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage3) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3))) then 
            grp_fu_397_p1 <= tmp_105_reg_1452;
        else 
            grp_fu_397_p1 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_401_p0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_CS_fsm_pp0_stage1, ap_CS_fsm_pp0_stage3, ap_CS_fsm_pp0_stage4, ap_enable_reg_pp0_iter1, p_13_fu_973_p3, p_11_fu_995_p3, p_s_fu_1017_p3, ap_enable_reg_pp0_iter2, tmp_121_reg_1557, ap_enable_reg_pp0_iter7, ap_block_pp0_stage0, ap_block_pp0_stage3, ap_block_pp0_stage4, ap_block_pp0_stage1)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_enable_reg_pp0_iter7 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
            grp_fu_401_p0 <= tmp_121_reg_1557;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            grp_fu_401_p0 <= p_s_fu_1017_p3;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage4) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4))) then 
            grp_fu_401_p0 <= p_11_fu_995_p3;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage3) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3))) then 
            grp_fu_401_p0 <= p_13_fu_973_p3;
        else 
            grp_fu_401_p0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_401_p1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_CS_fsm_pp0_stage1, ap_CS_fsm_pp0_stage3, ap_CS_fsm_pp0_stage4, ap_enable_reg_pp0_iter1, tmp_107_reg_1457, tmp_111_reg_1477, tmp_115_reg_1497, ap_enable_reg_pp0_iter2, tmp_116_reg_1537_pp0_iter6_reg, ap_enable_reg_pp0_iter7, ap_block_pp0_stage0, ap_block_pp0_stage3, ap_block_pp0_stage4, ap_block_pp0_stage1)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_enable_reg_pp0_iter7 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
            grp_fu_401_p1 <= tmp_116_reg_1537_pp0_iter6_reg;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            grp_fu_401_p1 <= tmp_115_reg_1497;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage4) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4))) then 
            grp_fu_401_p1 <= tmp_111_reg_1477;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage3) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3))) then 
            grp_fu_401_p1 <= tmp_107_reg_1457;
        else 
            grp_fu_401_p1 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_405_p0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_CS_fsm_pp0_stage1, ap_CS_fsm_pp0_stage3, ap_CS_fsm_pp0_stage4, tmp_106_reg_1512, ap_enable_reg_pp0_iter2, tmp_118_reg_1542, ap_enable_reg_pp0_iter3, tmp_119_reg_1547, ap_enable_reg_pp0_iter5, tmp_122_reg_1572, ap_enable_reg_pp0_iter8, ap_block_pp0_stage0, ap_block_pp0_stage3, ap_block_pp0_stage4, ap_block_pp0_stage1)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_enable_reg_pp0_iter8 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
            grp_fu_405_p0 <= tmp_122_reg_1572;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter5 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            grp_fu_405_p0 <= tmp_119_reg_1547;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage4) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4))) then 
            grp_fu_405_p0 <= tmp_118_reg_1542;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage3) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3))) then 
            grp_fu_405_p0 <= tmp_106_reg_1512;
        else 
            grp_fu_405_p0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_405_p1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_CS_fsm_pp0_stage1, ap_CS_fsm_pp0_stage3, ap_CS_fsm_pp0_stage4, ap_enable_reg_pp0_iter2, tmp_108_reg_1517, tmp_110_reg_1522_pp0_iter3_reg, tmp_112_reg_1527_pp0_iter4_reg, ap_enable_reg_pp0_iter3, ap_enable_reg_pp0_iter5, ap_enable_reg_pp0_iter8, bias_load_reg_1577, ap_block_pp0_stage0, ap_block_pp0_stage3, ap_block_pp0_stage4, ap_block_pp0_stage1)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_enable_reg_pp0_iter8 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
            grp_fu_405_p1 <= bias_load_reg_1577;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter5 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            grp_fu_405_p1 <= tmp_112_reg_1527_pp0_iter4_reg;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage4) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4))) then 
            grp_fu_405_p1 <= tmp_110_reg_1522_pp0_iter3_reg;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage3) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3))) then 
            grp_fu_405_p1 <= tmp_108_reg_1517;
        else 
            grp_fu_405_p1 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_409_p0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage1, weights_0_load_reg_1347, ap_CS_fsm_pp0_stage4, weights_2_load_reg_1407, weights_4_load_reg_1432, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0, ap_block_pp0_stage4, ap_block_pp0_stage1)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
            grp_fu_409_p0 <= weights_4_load_reg_1432;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            grp_fu_409_p0 <= weights_2_load_reg_1407;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage4) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1))) then 
            grp_fu_409_p0 <= weights_0_load_reg_1347;
        else 
            grp_fu_409_p0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_409_p1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage1, input_load_reg_1362, ap_CS_fsm_pp0_stage4, input_load_17_reg_1412, input_load_19_reg_1437, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0, ap_block_pp0_stage4, ap_block_pp0_stage1)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
            grp_fu_409_p1 <= input_load_19_reg_1437;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            grp_fu_409_p1 <= input_load_17_reg_1412;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage4) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1))) then 
            grp_fu_409_p1 <= input_load_reg_1362;
        else 
            grp_fu_409_p1 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_413_p0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage1, weights_1_load_reg_1367, ap_CS_fsm_pp0_stage4, weights_3_load_reg_1417, ap_enable_reg_pp0_iter1, weights_5_load_reg_1442, ap_block_pp0_stage0, ap_block_pp0_stage4, ap_block_pp0_stage1)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
            grp_fu_413_p0 <= weights_5_load_reg_1442;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            grp_fu_413_p0 <= weights_3_load_reg_1417;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage4) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1))) then 
            grp_fu_413_p0 <= weights_1_load_reg_1367;
        else 
            grp_fu_413_p0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_413_p1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage1, input_load_16_reg_1372, ap_CS_fsm_pp0_stage4, input_load_18_reg_1422, ap_enable_reg_pp0_iter1, input_load_20_reg_1447, ap_block_pp0_stage0, ap_block_pp0_stage4, ap_block_pp0_stage1)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
            grp_fu_413_p1 <= input_load_20_reg_1447;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            grp_fu_413_p1 <= input_load_18_reg_1422;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage4) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1))) then 
            grp_fu_413_p1 <= input_load_16_reg_1372;
        else 
            grp_fu_413_p1 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;

    h_3_fu_523_p2 <= std_logic_vector(unsigned(h_mid_fu_451_p3) + unsigned(ap_const_lv4_1));
    h_mid_fu_451_p3 <= 
        ap_const_lv4_0 when (exitcond_flatten_fu_445_p2(0) = '1') else 
        ap_phi_mux_h_phi_fu_335_p4;
    indvar_flatten34_op_fu_671_p2 <= std_logic_vector(unsigned(ap_phi_mux_indvar_flatten5_phi_fu_346_p4) + unsigned(ap_const_lv9_1));
    indvar_flatten84_op_fu_685_p2 <= std_logic_vector(unsigned(ap_phi_mux_indvar_flatten4_phi_fu_324_p4) + unsigned(ap_const_lv12_1));
    indvar_flatten_next3_fu_677_p3 <= 
        ap_const_lv9_1 when (tmp_170_fu_529_p2(0) = '1') else 
        indvar_flatten34_op_fu_671_p2;
    indvar_flatten_next4_fu_691_p3 <= 
        ap_const_lv12_1 when (exitcond_flatten_fu_445_p2(0) = '1') else 
        indvar_flatten84_op_fu_685_p2;
    indvar_flatten_next5_fu_433_p2 <= std_logic_vector(unsigned(ap_phi_mux_indvar_flatten3_phi_fu_302_p4) + unsigned(ap_const_lv16_1));
    indvar_flatten_next_fu_663_p3 <= 
        ap_const_lv6_1 when (tmp_95_fu_595_p2(0) = '1') else 
        indvar_flatten_op_fu_657_p2;
    indvar_flatten_op_fu_657_p2 <= std_logic_vector(unsigned(ap_phi_mux_indvar_flatten_phi_fu_368_p4) + unsigned(ap_const_lv6_1));

    input_r_address0_assign_proc : process(ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage2, ap_CS_fsm_pp0_stage3, ap_CS_fsm_pp0_stage4, ap_block_pp0_stage2, tmp_231_cast_fu_876_p1, ap_block_pp0_stage3, tmp_233_cast_fu_907_p1, ap_block_pp0_stage4, tmp_235_cast_fu_947_p1)
    begin
        if ((ap_enable_reg_pp0_iter0 = ap_const_logic_1)) then
            if (((ap_const_boolean_0 = ap_block_pp0_stage4) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4))) then 
                input_r_address0 <= tmp_235_cast_fu_947_p1(11 - 1 downto 0);
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage3) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3))) then 
                input_r_address0 <= tmp_233_cast_fu_907_p1(11 - 1 downto 0);
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage2) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then 
                input_r_address0 <= tmp_231_cast_fu_876_p1(11 - 1 downto 0);
            else 
                input_r_address0 <= "XXXXXXXXXXX";
            end if;
        else 
            input_r_address0 <= "XXXXXXXXXXX";
        end if; 
    end process;


    input_r_address1_assign_proc : process(ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage2, ap_CS_fsm_pp0_stage3, ap_CS_fsm_pp0_stage4, ap_block_pp0_stage2, tmp_232_cast_fu_887_p1, ap_block_pp0_stage3, tmp_234_cast_fu_917_p1, ap_block_pp0_stage4, tmp_236_cast_fu_957_p1)
    begin
        if ((ap_enable_reg_pp0_iter0 = ap_const_logic_1)) then
            if (((ap_const_boolean_0 = ap_block_pp0_stage4) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4))) then 
                input_r_address1 <= tmp_236_cast_fu_957_p1(11 - 1 downto 0);
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage3) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3))) then 
                input_r_address1 <= tmp_234_cast_fu_917_p1(11 - 1 downto 0);
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage2) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then 
                input_r_address1 <= tmp_232_cast_fu_887_p1(11 - 1 downto 0);
            else 
                input_r_address1 <= "XXXXXXXXXXX";
            end if;
        else 
            input_r_address1 <= "XXXXXXXXXXX";
        end if; 
    end process;


    input_r_ce0_assign_proc : process(ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage2, ap_block_pp0_stage2_11001, ap_CS_fsm_pp0_stage3, ap_block_pp0_stage3_11001, ap_CS_fsm_pp0_stage4, ap_block_pp0_stage4_11001)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage4_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1)) or ((ap_const_boolean_0 = ap_block_pp0_stage3_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1)) or ((ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1)))) then 
            input_r_ce0 <= ap_const_logic_1;
        else 
            input_r_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    input_r_ce1_assign_proc : process(ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage2, ap_block_pp0_stage2_11001, ap_CS_fsm_pp0_stage3, ap_block_pp0_stage3_11001, ap_CS_fsm_pp0_stage4, ap_block_pp0_stage4_11001)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage4_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1)) or ((ap_const_boolean_0 = ap_block_pp0_stage3_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1)) or ((ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1)))) then 
            input_r_ce1 <= ap_const_logic_1;
        else 
            input_r_ce1 <= ap_const_logic_0;
        end if; 
    end process;

    m_1_fu_733_p2 <= std_logic_vector(unsigned(m_mid1_reg_1221) + unsigned(ap_const_lv3_1));
    m_cast_fu_417_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(ap_phi_mux_m_phi_fu_379_p4),4));
    m_cast_mid1_fu_738_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(m_1_fu_733_p2),4));
    m_mid1_fu_601_p3 <= 
        ap_const_lv3_0 when (tmp_95_fu_595_p2(0) = '1') else 
        ap_phi_mux_m_phi_fu_379_p4;
    n_2_fu_962_p2 <= std_logic_vector(unsigned(n_mid2_reg_1251) + unsigned(ap_const_lv3_1));
    n_cast_fu_844_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(n_mid2_reg_1251),4));
    n_mid2_fu_649_p3 <= 
        ap_const_lv3_0 when (tmp_96_fu_643_p2(0) = '1') else 
        ap_phi_mux_n_phi_fu_390_p4;
    not_exitcond_flatten_1_fu_565_p2 <= (exitcond_flatten_fu_445_p2 or exitcond_flatten36_n_fu_559_p2);
    not_exitcond_flatten_2_fu_625_p2 <= (exitcond_flatten_mid_2_fu_577_p2 xor ap_const_lv1_1);
    not_exitcond_flatten_fu_475_p2 <= (exitcond_flatten_fu_445_p2 xor ap_const_lv1_1);
    or_cond5_fu_817_p2 <= (tmp_117_mid2_fu_805_p3 and tmp_117_fu_812_p2);
    output_r_address0 <= output_addr_reg_1562_pp0_iter8_reg;

    output_r_ce0_assign_proc : process(ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1_11001, ap_enable_reg_pp0_iter9)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_enable_reg_pp0_iter9 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
            output_r_ce0 <= ap_const_logic_1;
        else 
            output_r_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    output_r_d0 <= tmp_123_reg_1582;

    output_r_we0_assign_proc : process(ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1_11001, or_cond5_reg_1297_pp0_iter8_reg, ap_enable_reg_pp0_iter9)
    begin
        if (((or_cond5_reg_1297_pp0_iter8_reg = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_enable_reg_pp0_iter9 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
            output_r_we0 <= ap_const_logic_1;
        else 
            output_r_we0 <= ap_const_logic_0;
        end if; 
    end process;

    p_10_fu_1025_p3 <= 
        ap_const_lv32_0 when (tmp_101_reg_1377_pp0_iter1_reg(0) = '1') else 
        tmp_89_fu_130;
    p_11_fu_995_p3 <= 
        ap_const_lv32_0 when (tmp_101_reg_1377(0) = '1') else 
        tmp_90_fu_126;
    p_12_fu_1003_p3 <= 
        ap_const_lv32_0 when (tmp_101_reg_1377(0) = '1') else 
        tmp_91_fu_122;
    p_13_fu_973_p3 <= 
        ap_const_lv32_0 when (tmp_101_reg_1377(0) = '1') else 
        tmp_92_fu_118;
    p_14_fu_981_p3 <= 
        ap_const_lv32_0 when (tmp_101_reg_1377(0) = '1') else 
        tmp_93_fu_114;
    p_s_fu_1017_p3 <= 
        ap_const_lv32_0 when (tmp_101_reg_1377_pp0_iter1_reg(0) = '1') else 
        tmp_s_fu_134;
    p_shl1_cast_fu_709_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_fu_702_p3),8));
    p_shl2_cast_fu_1074_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_166_fu_1067_p3),9));
    p_shl3_cast_fu_1085_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_167_fu_1078_p3),9));
    p_shl4_cast_fu_1104_p3 <= (tmp_171_fu_1098_p2 & ap_const_lv3_0);
    p_shl5_cast_fu_1120_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_94_fu_1112_p3),12));
    p_shl6_cast_fu_826_p3 <= (tmp_176_reg_1281 & ap_const_lv2_0);
    p_shl9_cast_fu_789_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_99_fu_781_p3),12));
    p_shl_cast_fu_777_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_98_fu_769_p3),12));
    tmp_100_fu_932_p2 <= (tmp_114_mid2_reg_1275 or n_mid2_reg_1251);
    tmp_100_mid2_cast_fu_1095_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_100_mid2_reg_1209_pp0_iter7_reg),9));
    tmp_100_mid2_fu_543_p3 <= 
        h_3_fu_523_p2 when (exitcond_flatten36_m_fu_517_p2(0) = '1') else 
        h_mid_fu_451_p3;
    tmp_101_fu_936_p2 <= "1" when (tmp_100_fu_932_p2 = ap_const_lv3_0) else "0";
    tmp_102_cast_fu_847_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(n_mid2_reg_1251),10));
    tmp_103_fu_862_p2 <= std_logic_vector(unsigned(tmp_107_mid2_reg_1227) + unsigned(n_cast_fu_844_p1));
    tmp_104_cast_fu_867_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_103_fu_862_p2),12));
    tmp_107_mid2_cast_fu_1130_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_107_mid2_reg_1227_pp0_iter7_reg),12));
    tmp_107_mid2_fu_609_p3 <= 
        w_4_fu_583_p2 when (exitcond_flatten_mid_2_fu_577_p2(0) = '1') else 
        w_mid_fu_535_p3;
    tmp_114_mid2_cast_fu_748_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_114_mid2_fu_742_p3),8));
    tmp_114_mid2_fu_742_p3 <= 
        m_1_fu_733_p2 when (exitcond_mid2_reg_1244(0) = '1') else 
        m_mid1_reg_1221;
    tmp_115_mid1_fu_758_p2 <= std_logic_vector(unsigned(tmp_100_mid2_reg_1209) + unsigned(m_cast_mid1_fu_738_p1));
    tmp_116_mid2_fu_763_p3 <= 
        tmp_115_mid1_fu_758_p2 when (exitcond_mid2_reg_1244(0) = '1') else 
        tmp_116_mid5_reg_1234;
    tmp_116_mid3_fu_551_p3 <= 
        h_3_fu_523_p2 when (exitcond_flatten36_m_fu_517_p2(0) = '1') else 
        tmp_116_mid_fu_467_p3;
    tmp_116_mid5_fu_617_p3 <= 
        tmp_100_mid2_fu_543_p3 when (exitcond_flatten_mid_2_fu_577_p2(0) = '1') else 
        tmp_116_mid3_fu_551_p3;
    tmp_116_mid_fu_467_p3 <= 
        ap_const_lv4_0 when (exitcond_flatten_fu_445_p2(0) = '1') else 
        tmp_97_fu_421_p2;
    tmp_117_fu_812_p2 <= "1" when (n_mid2_reg_1251 = ap_const_lv3_4) else "0";
    tmp_117_mid1_fu_799_p2 <= "1" when (m_1_fu_733_p2 = ap_const_lv3_4) else "0";
    tmp_117_mid2_fu_805_p3 <= 
        tmp_117_mid1_fu_799_p2 when (exitcond_mid2_reg_1244(0) = '1') else 
        tmp_117_mid4_fu_728_p2;
    tmp_117_mid3_fu_723_p2 <= (tmp_117_mid_fu_719_p2 and not_exitcond_flatten_1_reg_1216);
    tmp_117_mid4_fu_728_p2 <= (tmp_117_mid3_fu_723_p2 and not_exitcond_flatten_2_reg_1239);
    tmp_117_mid_fu_719_p2 <= (tmp_169_reg_1204 and not_exitcond_flatten_reg_1199);
    tmp_165_fu_713_p2 <= std_logic_vector(unsigned(p_shl1_cast_fu_709_p1) + unsigned(tmp_93_mid2_cast_fu_699_p1));
    tmp_166_fu_1067_p3 <= (tmp_93_mid2_v_reg_1189_pp0_iter7_reg & ap_const_lv3_0);
    tmp_167_fu_1078_p3 <= (tmp_93_mid2_v_reg_1189_pp0_iter7_reg & ap_const_lv1_0);
    tmp_168_fu_1089_p2 <= std_logic_vector(unsigned(p_shl2_cast_fu_1074_p1) + unsigned(p_shl3_cast_fu_1085_p1));
    tmp_169_fu_481_p2 <= "1" when (ap_phi_mux_m_phi_fu_379_p4 = ap_const_lv3_4) else "0";
    tmp_170_fu_529_p2 <= (exitcond_flatten_fu_445_p2 or exitcond_flatten36_m_fu_517_p2);
    tmp_171_fu_1098_p2 <= std_logic_vector(unsigned(tmp_100_mid2_cast_fu_1095_p1) + unsigned(tmp_168_fu_1089_p2));
    tmp_172_fu_1124_p2 <= std_logic_vector(unsigned(p_shl4_cast_fu_1104_p3) + unsigned(p_shl5_cast_fu_1120_p1));
    tmp_173_fu_589_p2 <= (exitcond_flatten_mid_2_fu_577_p2 or exitcond_flatten36_m_fu_517_p2);
    tmp_174_fu_1133_p2 <= std_logic_vector(unsigned(tmp_107_mid2_cast_fu_1130_p1) + unsigned(tmp_172_fu_1124_p2));
    tmp_175_fu_637_p2 <= (exitcond_mid2_fu_631_p2 or exitcond_flatten_mid_2_fu_577_p2);
    tmp_176_fu_752_p2 <= std_logic_vector(unsigned(tmp_114_mid2_cast_fu_748_p1) + unsigned(tmp_165_fu_713_p2));
    tmp_177_fu_833_p2 <= std_logic_vector(unsigned(p_shl6_cast_fu_826_p3) + unsigned(tmp_219_cast_fu_823_p1));
    tmp_178_fu_793_p2 <= std_logic_vector(unsigned(p_shl_cast_fu_777_p1) - unsigned(p_shl9_cast_fu_789_p1));
    tmp_179_fu_839_p2 <= std_logic_vector(unsigned(tmp_178_reg_1287) + unsigned(ap_const_lv12_C4));
    tmp_180_fu_892_p2 <= std_logic_vector(unsigned(tmp_178_reg_1287) + unsigned(ap_const_lv12_188));
    tmp_181_fu_897_p2 <= std_logic_vector(unsigned(tmp_178_reg_1287) + unsigned(ap_const_lv12_24C));
    tmp_182_fu_922_p2 <= std_logic_vector(unsigned(tmp_178_reg_1287) + unsigned(ap_const_lv12_310));
    tmp_183_fu_927_p2 <= std_logic_vector(unsigned(tmp_178_reg_1287) + unsigned(ap_const_lv12_3D4));
    tmp_184_fu_850_p2 <= std_logic_vector(unsigned(tmp_102_cast_fu_847_p1) + unsigned(tmp_177_fu_833_p2));
    tmp_185_fu_871_p2 <= std_logic_vector(unsigned(tmp_104_cast_fu_867_p1) + unsigned(tmp_178_reg_1287));
    tmp_186_fu_881_p2 <= std_logic_vector(unsigned(tmp_104_cast_fu_867_p1) + unsigned(tmp_179_fu_839_p2));
    tmp_187_fu_902_p2 <= std_logic_vector(unsigned(tmp_104_cast_reg_1319) + unsigned(tmp_180_fu_892_p2));
    tmp_188_fu_912_p2 <= std_logic_vector(unsigned(tmp_104_cast_reg_1319) + unsigned(tmp_181_fu_897_p2));
    tmp_189_fu_942_p2 <= std_logic_vector(unsigned(tmp_104_cast_reg_1319) + unsigned(tmp_182_fu_922_p2));
    tmp_190_fu_952_p2 <= std_logic_vector(unsigned(tmp_104_cast_reg_1319) + unsigned(tmp_183_fu_927_p2));
    tmp_216_cast_fu_1139_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_174_fu_1133_p2),64));
    tmp_219_cast_fu_823_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_176_reg_1281),10));
    tmp_230_cast_fu_856_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_184_fu_850_p2),64));
    tmp_231_cast_fu_876_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_185_fu_871_p2),64));
    tmp_232_cast_fu_887_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_186_fu_881_p2),64));
    tmp_233_cast_fu_907_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_187_fu_902_p2),64));
    tmp_234_cast_fu_917_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_188_fu_912_p2),64));
    tmp_235_cast_fu_947_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_189_fu_942_p2),64));
    tmp_236_cast_fu_957_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_190_fu_952_p2),64));
    tmp_93_mid2_cast_fu_699_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_93_mid2_v_reg_1189),8));
    tmp_93_mid2_fu_1063_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_93_mid2_v_reg_1189_pp0_iter7_reg),64));
    tmp_93_mid2_v_fu_459_p3 <= 
        co_3_fu_439_p2 when (exitcond_flatten_fu_445_p2(0) = '1') else 
        ap_phi_mux_co_phi_fu_313_p4;
    tmp_94_fu_1112_p3 <= (tmp_171_fu_1098_p2 & ap_const_lv1_0);
    tmp_95_fu_595_p2 <= (tmp_173_fu_589_p2 or exitcond_flatten_fu_445_p2);
    tmp_96_fu_643_p2 <= (tmp_175_fu_637_p2 or tmp_170_fu_529_p2);
    tmp_97_fu_421_p2 <= std_logic_vector(unsigned(m_cast_fu_417_p1) + unsigned(ap_phi_mux_h_phi_fu_335_p4));
    tmp_98_fu_769_p3 <= (tmp_116_mid2_fu_763_p3 & ap_const_lv4_0);
    tmp_99_fu_781_p3 <= (tmp_116_mid2_fu_763_p3 & ap_const_lv1_0);
    tmp_fu_702_p3 <= (tmp_93_mid2_v_reg_1189 & ap_const_lv2_0);
    w_4_fu_583_p2 <= std_logic_vector(unsigned(w_mid_fu_535_p3) + unsigned(ap_const_lv4_1));
    w_mid_fu_535_p3 <= 
        ap_const_lv4_0 when (tmp_170_fu_529_p2(0) = '1') else 
        ap_phi_mux_w_phi_fu_357_p4;
    weights_0_address0 <= tmp_230_cast_fu_856_p1(9 - 1 downto 0);

    weights_0_ce0_assign_proc : process(ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage2, ap_block_pp0_stage2_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1))) then 
            weights_0_ce0 <= ap_const_logic_1;
        else 
            weights_0_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    weights_1_address0 <= tmp_230_cast_fu_856_p1(9 - 1 downto 0);

    weights_1_ce0_assign_proc : process(ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage2, ap_block_pp0_stage2_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1))) then 
            weights_1_ce0 <= ap_const_logic_1;
        else 
            weights_1_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    weights_2_address0 <= tmp_230_cast_reg_1301(9 - 1 downto 0);

    weights_2_ce0_assign_proc : process(ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage3, ap_block_pp0_stage3_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage3_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1))) then 
            weights_2_ce0 <= ap_const_logic_1;
        else 
            weights_2_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    weights_3_address0 <= tmp_230_cast_reg_1301(9 - 1 downto 0);

    weights_3_ce0_assign_proc : process(ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage3, ap_block_pp0_stage3_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage3_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1))) then 
            weights_3_ce0 <= ap_const_logic_1;
        else 
            weights_3_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    weights_4_address0 <= tmp_230_cast_reg_1301(9 - 1 downto 0);

    weights_4_ce0_assign_proc : process(ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage4, ap_block_pp0_stage4_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage4_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1))) then 
            weights_4_ce0 <= ap_const_logic_1;
        else 
            weights_4_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    weights_5_address0 <= tmp_230_cast_reg_1301(9 - 1 downto 0);

    weights_5_ce0_assign_proc : process(ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage4, ap_block_pp0_stage4_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage4_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1))) then 
            weights_5_ce0 <= ap_const_logic_1;
        else 
            weights_5_ce0 <= ap_const_logic_0;
        end if; 
    end process;

end behav;
