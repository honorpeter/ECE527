-- ==============================================================
-- RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
-- Version: 2018.2
-- Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity convolution_5 is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    input_r_address0 : OUT STD_LOGIC_VECTOR (8 downto 0);
    input_r_ce0 : OUT STD_LOGIC;
    input_r_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    input_r_address1 : OUT STD_LOGIC_VECTOR (8 downto 0);
    input_r_ce1 : OUT STD_LOGIC;
    input_r_q1 : IN STD_LOGIC_VECTOR (31 downto 0);
    weights_0_address0 : OUT STD_LOGIC_VECTOR (11 downto 0);
    weights_0_ce0 : OUT STD_LOGIC;
    weights_0_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    weights_1_address0 : OUT STD_LOGIC_VECTOR (11 downto 0);
    weights_1_ce0 : OUT STD_LOGIC;
    weights_1_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    weights_2_address0 : OUT STD_LOGIC_VECTOR (11 downto 0);
    weights_2_ce0 : OUT STD_LOGIC;
    weights_2_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    weights_3_address0 : OUT STD_LOGIC_VECTOR (11 downto 0);
    weights_3_ce0 : OUT STD_LOGIC;
    weights_3_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    weights_4_address0 : OUT STD_LOGIC_VECTOR (11 downto 0);
    weights_4_ce0 : OUT STD_LOGIC;
    weights_4_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    weights_5_address0 : OUT STD_LOGIC_VECTOR (11 downto 0);
    weights_5_ce0 : OUT STD_LOGIC;
    weights_5_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    weights_6_address0 : OUT STD_LOGIC_VECTOR (11 downto 0);
    weights_6_ce0 : OUT STD_LOGIC;
    weights_6_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    weights_7_address0 : OUT STD_LOGIC_VECTOR (11 downto 0);
    weights_7_ce0 : OUT STD_LOGIC;
    weights_7_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    weights_8_address0 : OUT STD_LOGIC_VECTOR (11 downto 0);
    weights_8_ce0 : OUT STD_LOGIC;
    weights_8_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    weights_9_address0 : OUT STD_LOGIC_VECTOR (11 downto 0);
    weights_9_ce0 : OUT STD_LOGIC;
    weights_9_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    weights_10_address0 : OUT STD_LOGIC_VECTOR (11 downto 0);
    weights_10_ce0 : OUT STD_LOGIC;
    weights_10_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    weights_11_address0 : OUT STD_LOGIC_VECTOR (11 downto 0);
    weights_11_ce0 : OUT STD_LOGIC;
    weights_11_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    weights_12_address0 : OUT STD_LOGIC_VECTOR (11 downto 0);
    weights_12_ce0 : OUT STD_LOGIC;
    weights_12_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    weights_13_address0 : OUT STD_LOGIC_VECTOR (11 downto 0);
    weights_13_ce0 : OUT STD_LOGIC;
    weights_13_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    weights_14_address0 : OUT STD_LOGIC_VECTOR (11 downto 0);
    weights_14_ce0 : OUT STD_LOGIC;
    weights_14_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    weights_15_address0 : OUT STD_LOGIC_VECTOR (11 downto 0);
    weights_15_ce0 : OUT STD_LOGIC;
    weights_15_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    bias_address0 : OUT STD_LOGIC_VECTOR (6 downto 0);
    bias_ce0 : OUT STD_LOGIC;
    bias_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    output_0_0_address0 : OUT STD_LOGIC_VECTOR (6 downto 0);
    output_0_0_ce0 : OUT STD_LOGIC;
    output_0_0_we0 : OUT STD_LOGIC;
    output_0_0_d0 : OUT STD_LOGIC_VECTOR (31 downto 0) );
end;


architecture behav of convolution_5 is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_state1 : STD_LOGIC_VECTOR (9 downto 0) := "0000000001";
    constant ap_ST_fsm_pp0_stage0 : STD_LOGIC_VECTOR (9 downto 0) := "0000000010";
    constant ap_ST_fsm_pp0_stage1 : STD_LOGIC_VECTOR (9 downto 0) := "0000000100";
    constant ap_ST_fsm_pp0_stage2 : STD_LOGIC_VECTOR (9 downto 0) := "0000001000";
    constant ap_ST_fsm_pp0_stage3 : STD_LOGIC_VECTOR (9 downto 0) := "0000010000";
    constant ap_ST_fsm_pp0_stage4 : STD_LOGIC_VECTOR (9 downto 0) := "0000100000";
    constant ap_ST_fsm_pp0_stage5 : STD_LOGIC_VECTOR (9 downto 0) := "0001000000";
    constant ap_ST_fsm_pp0_stage6 : STD_LOGIC_VECTOR (9 downto 0) := "0010000000";
    constant ap_ST_fsm_pp0_stage7 : STD_LOGIC_VECTOR (9 downto 0) := "0100000000";
    constant ap_ST_fsm_state96 : STD_LOGIC_VECTOR (9 downto 0) := "1000000000";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_lv32_7 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000111";
    constant ap_const_boolean_0 : BOOLEAN := false;
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv32_5 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000101";
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";
    constant ap_const_lv32_3 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000011";
    constant ap_const_lv32_4 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000100";
    constant ap_const_lv32_6 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000110";
    constant ap_const_lv32_8 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001000";
    constant ap_const_lv12_0 : STD_LOGIC_VECTOR (11 downto 0) := "000000000000";
    constant ap_const_lv7_0 : STD_LOGIC_VECTOR (6 downto 0) := "0000000";
    constant ap_const_lv6_0 : STD_LOGIC_VECTOR (5 downto 0) := "000000";
    constant ap_const_lv3_0 : STD_LOGIC_VECTOR (2 downto 0) := "000";
    constant ap_const_lv12_BB8 : STD_LOGIC_VECTOR (11 downto 0) := "101110111000";
    constant ap_const_lv12_1 : STD_LOGIC_VECTOR (11 downto 0) := "000000000001";
    constant ap_const_lv6_19 : STD_LOGIC_VECTOR (5 downto 0) := "011001";
    constant ap_const_lv3_4 : STD_LOGIC_VECTOR (2 downto 0) := "100";
    constant ap_const_lv3_5 : STD_LOGIC_VECTOR (2 downto 0) := "101";
    constant ap_const_lv3_1 : STD_LOGIC_VECTOR (2 downto 0) := "001";
    constant ap_const_lv6_1 : STD_LOGIC_VECTOR (5 downto 0) := "000001";
    constant ap_const_lv7_1 : STD_LOGIC_VECTOR (6 downto 0) := "0000001";
    constant ap_const_lv2_0 : STD_LOGIC_VECTOR (1 downto 0) := "00";
    constant ap_const_lv10_19 : STD_LOGIC_VECTOR (9 downto 0) := "0000011001";
    constant ap_const_lv10_32 : STD_LOGIC_VECTOR (9 downto 0) := "0000110010";
    constant ap_const_lv10_4B : STD_LOGIC_VECTOR (9 downto 0) := "0001001011";
    constant ap_const_lv10_64 : STD_LOGIC_VECTOR (9 downto 0) := "0001100100";
    constant ap_const_lv10_7D : STD_LOGIC_VECTOR (9 downto 0) := "0001111101";
    constant ap_const_lv10_96 : STD_LOGIC_VECTOR (9 downto 0) := "0010010110";
    constant ap_const_lv10_AF : STD_LOGIC_VECTOR (9 downto 0) := "0010101111";
    constant ap_const_lv10_E1 : STD_LOGIC_VECTOR (9 downto 0) := "0011100001";
    constant ap_const_lv10_FA : STD_LOGIC_VECTOR (9 downto 0) := "0011111010";
    constant ap_const_lv10_113 : STD_LOGIC_VECTOR (9 downto 0) := "0100010011";
    constant ap_const_lv10_12C : STD_LOGIC_VECTOR (9 downto 0) := "0100101100";
    constant ap_const_lv10_145 : STD_LOGIC_VECTOR (9 downto 0) := "0101000101";
    constant ap_const_lv10_15E : STD_LOGIC_VECTOR (9 downto 0) := "0101011110";
    constant ap_const_lv10_177 : STD_LOGIC_VECTOR (9 downto 0) := "0101110111";
    constant ap_const_lv32_9 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001001";

    signal ap_CS_fsm : STD_LOGIC_VECTOR (9 downto 0) := "0000000001";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_state1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state1 : signal is "none";
    signal indvar_flatten3_reg_499 : STD_LOGIC_VECTOR (11 downto 0);
    signal co_reg_510 : STD_LOGIC_VECTOR (6 downto 0);
    signal indvar_flatten_reg_522 : STD_LOGIC_VECTOR (5 downto 0);
    signal i_reg_533 : STD_LOGIC_VECTOR (2 downto 0);
    signal tmp_22_reg_544 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_23_reg_556 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_24_reg_568 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_25_reg_580 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_26_reg_592 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_27_reg_604 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_28_reg_616 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_29_reg_628 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_s_reg_640 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_30_reg_652 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_31_reg_664 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_32_reg_676 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_33_reg_688 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_34_reg_700 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_35_reg_712 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_36_reg_724 : STD_LOGIC_VECTOR (31 downto 0);
    signal j_reg_736 : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_fu_759_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal reg_771 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_pp0_stage6 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage6 : signal is "none";
    signal ap_enable_reg_pp0_iter7 : STD_LOGIC := '0';
    signal ap_block_state8_pp0_stage6_iter0 : BOOLEAN;
    signal ap_block_state16_pp0_stage6_iter1 : BOOLEAN;
    signal ap_block_state24_pp0_stage6_iter2 : BOOLEAN;
    signal ap_block_state32_pp0_stage6_iter3 : BOOLEAN;
    signal ap_block_state40_pp0_stage6_iter4 : BOOLEAN;
    signal ap_block_state48_pp0_stage6_iter5 : BOOLEAN;
    signal ap_block_state56_pp0_stage6_iter6 : BOOLEAN;
    signal ap_block_state64_pp0_stage6_iter7 : BOOLEAN;
    signal ap_block_state72_pp0_stage6_iter8 : BOOLEAN;
    signal ap_block_state80_pp0_stage6_iter9 : BOOLEAN;
    signal ap_block_state88_pp0_stage6_iter10 : BOOLEAN;
    signal ap_block_pp0_stage6_11001 : BOOLEAN;
    signal or_cond3_reg_1441 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_cond3_reg_1441_pp0_iter7_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_pp0_stage4 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage4 : signal is "none";
    signal ap_enable_reg_pp0_iter11 : STD_LOGIC := '0';
    signal ap_block_state6_pp0_stage4_iter0 : BOOLEAN;
    signal ap_block_state14_pp0_stage4_iter1 : BOOLEAN;
    signal ap_block_state22_pp0_stage4_iter2 : BOOLEAN;
    signal ap_block_state30_pp0_stage4_iter3 : BOOLEAN;
    signal ap_block_state38_pp0_stage4_iter4 : BOOLEAN;
    signal ap_block_state46_pp0_stage4_iter5 : BOOLEAN;
    signal ap_block_state54_pp0_stage4_iter6 : BOOLEAN;
    signal ap_block_state62_pp0_stage4_iter7 : BOOLEAN;
    signal ap_block_state70_pp0_stage4_iter8 : BOOLEAN;
    signal ap_block_state78_pp0_stage4_iter9 : BOOLEAN;
    signal ap_block_state86_pp0_stage4_iter10 : BOOLEAN;
    signal ap_block_state94_pp0_stage4_iter11 : BOOLEAN;
    signal ap_block_pp0_stage4_11001 : BOOLEAN;
    signal or_cond3_reg_1441_pp0_iter11_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal exitcond_flatten3_fu_777_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal exitcond_flatten3_reg_1407 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_pp0_stage0 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage0 : signal is "none";
    signal ap_block_state2_pp0_stage0_iter0 : BOOLEAN;
    signal ap_block_state10_pp0_stage0_iter1 : BOOLEAN;
    signal ap_block_state18_pp0_stage0_iter2 : BOOLEAN;
    signal ap_block_state26_pp0_stage0_iter3 : BOOLEAN;
    signal ap_block_state34_pp0_stage0_iter4 : BOOLEAN;
    signal ap_block_state42_pp0_stage0_iter5 : BOOLEAN;
    signal ap_block_state50_pp0_stage0_iter6 : BOOLEAN;
    signal ap_block_state58_pp0_stage0_iter7 : BOOLEAN;
    signal ap_block_state66_pp0_stage0_iter8 : BOOLEAN;
    signal ap_block_state74_pp0_stage0_iter9 : BOOLEAN;
    signal ap_block_state82_pp0_stage0_iter10 : BOOLEAN;
    signal ap_block_state90_pp0_stage0_iter11 : BOOLEAN;
    signal ap_block_pp0_stage0_11001 : BOOLEAN;
    signal exitcond_flatten3_reg_1407_pp0_iter1_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal exitcond_flatten3_reg_1407_pp0_iter2_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal exitcond_flatten3_reg_1407_pp0_iter3_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal exitcond_flatten3_reg_1407_pp0_iter4_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal exitcond_flatten3_reg_1407_pp0_iter5_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal exitcond_flatten3_reg_1407_pp0_iter6_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal exitcond_flatten3_reg_1407_pp0_iter7_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal exitcond_flatten3_reg_1407_pp0_iter8_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal exitcond_flatten3_reg_1407_pp0_iter9_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal exitcond_flatten3_reg_1407_pp0_iter10_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal indvar_flatten_next3_fu_783_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal indvar_flatten_next3_reg_1411 : STD_LOGIC_VECTOR (11 downto 0);
    signal ap_enable_reg_pp0_iter0 : STD_LOGIC := '0';
    signal exitcond_flatten_fu_789_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal exitcond_flatten_reg_1416 : STD_LOGIC_VECTOR (0 downto 0);
    signal j_mid2_fu_845_p3 : STD_LOGIC_VECTOR (2 downto 0);
    signal j_mid2_reg_1423 : STD_LOGIC_VECTOR (2 downto 0);
    signal tmp_20_mid2_fu_853_p3 : STD_LOGIC_VECTOR (2 downto 0);
    signal tmp_20_mid2_reg_1431 : STD_LOGIC_VECTOR (2 downto 0);
    signal or_cond3_fu_881_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_cond3_reg_1441_pp0_iter1_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal or_cond3_reg_1441_pp0_iter2_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal or_cond3_reg_1441_pp0_iter3_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal or_cond3_reg_1441_pp0_iter4_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal or_cond3_reg_1441_pp0_iter5_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal or_cond3_reg_1441_pp0_iter6_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal or_cond3_reg_1441_pp0_iter8_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal or_cond3_reg_1441_pp0_iter9_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal or_cond3_reg_1441_pp0_iter10_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal indvar_flatten_op_fu_887_p2 : STD_LOGIC_VECTOR (5 downto 0);
    signal indvar_flatten_op_reg_1445 : STD_LOGIC_VECTOR (5 downto 0);
    signal tmp_mid2_v_fu_899_p3 : STD_LOGIC_VECTOR (6 downto 0);
    signal tmp_mid2_v_reg_1450 : STD_LOGIC_VECTOR (6 downto 0);
    signal ap_CS_fsm_pp0_stage1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage1 : signal is "none";
    signal ap_block_state3_pp0_stage1_iter0 : BOOLEAN;
    signal ap_block_state11_pp0_stage1_iter1 : BOOLEAN;
    signal ap_block_state19_pp0_stage1_iter2 : BOOLEAN;
    signal ap_block_state27_pp0_stage1_iter3 : BOOLEAN;
    signal ap_block_state35_pp0_stage1_iter4 : BOOLEAN;
    signal ap_block_state43_pp0_stage1_iter5 : BOOLEAN;
    signal ap_block_state51_pp0_stage1_iter6 : BOOLEAN;
    signal ap_block_state59_pp0_stage1_iter7 : BOOLEAN;
    signal ap_block_state67_pp0_stage1_iter8 : BOOLEAN;
    signal ap_block_state75_pp0_stage1_iter9 : BOOLEAN;
    signal ap_block_state83_pp0_stage1_iter10 : BOOLEAN;
    signal ap_block_state91_pp0_stage1_iter11 : BOOLEAN;
    signal ap_block_pp0_stage1_11001 : BOOLEAN;
    signal tmp_mid2_v_reg_1450_pp0_iter1_reg : STD_LOGIC_VECTOR (6 downto 0);
    signal tmp_mid2_v_reg_1450_pp0_iter2_reg : STD_LOGIC_VECTOR (6 downto 0);
    signal tmp_mid2_v_reg_1450_pp0_iter3_reg : STD_LOGIC_VECTOR (6 downto 0);
    signal tmp_mid2_v_reg_1450_pp0_iter4_reg : STD_LOGIC_VECTOR (6 downto 0);
    signal tmp_mid2_v_reg_1450_pp0_iter5_reg : STD_LOGIC_VECTOR (6 downto 0);
    signal tmp_mid2_v_reg_1450_pp0_iter6_reg : STD_LOGIC_VECTOR (6 downto 0);
    signal tmp_mid2_v_reg_1450_pp0_iter7_reg : STD_LOGIC_VECTOR (6 downto 0);
    signal tmp_mid2_v_reg_1450_pp0_iter8_reg : STD_LOGIC_VECTOR (6 downto 0);
    signal tmp_mid2_v_reg_1450_pp0_iter9_reg : STD_LOGIC_VECTOR (6 downto 0);
    signal tmp_mid2_v_reg_1450_pp0_iter10_reg : STD_LOGIC_VECTOR (6 downto 0);
    signal tmp_130_fu_942_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal tmp_130_reg_1456 : STD_LOGIC_VECTOR (9 downto 0);
    signal tmp_147_fu_954_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal tmp_147_reg_1473 : STD_LOGIC_VECTOR (9 downto 0);
    signal tmp_39_cast_fu_960_p1 : STD_LOGIC_VECTOR (9 downto 0);
    signal tmp_39_cast_reg_1479 : STD_LOGIC_VECTOR (9 downto 0);
    signal ap_CS_fsm_pp0_stage2 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage2 : signal is "none";
    signal ap_block_state4_pp0_stage2_iter0 : BOOLEAN;
    signal ap_block_state12_pp0_stage2_iter1 : BOOLEAN;
    signal ap_block_state20_pp0_stage2_iter2 : BOOLEAN;
    signal ap_block_state28_pp0_stage2_iter3 : BOOLEAN;
    signal ap_block_state36_pp0_stage2_iter4 : BOOLEAN;
    signal ap_block_state44_pp0_stage2_iter5 : BOOLEAN;
    signal ap_block_state52_pp0_stage2_iter6 : BOOLEAN;
    signal ap_block_state60_pp0_stage2_iter7 : BOOLEAN;
    signal ap_block_state68_pp0_stage2_iter8 : BOOLEAN;
    signal ap_block_state76_pp0_stage2_iter9 : BOOLEAN;
    signal ap_block_state84_pp0_stage2_iter10 : BOOLEAN;
    signal ap_block_state92_pp0_stage2_iter11 : BOOLEAN;
    signal ap_block_pp0_stage2_11001 : BOOLEAN;
    signal tmp_220_cast_fu_1044_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_220_cast_reg_1517 : STD_LOGIC_VECTOR (63 downto 0);
    signal input_load_reg_1545 : STD_LOGIC_VECTOR (31 downto 0);
    signal input_load_1_reg_1550 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_pp0_stage3 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage3 : signal is "none";
    signal ap_block_state5_pp0_stage3_iter0 : BOOLEAN;
    signal ap_block_state13_pp0_stage3_iter1 : BOOLEAN;
    signal ap_block_state21_pp0_stage3_iter2 : BOOLEAN;
    signal ap_block_state29_pp0_stage3_iter3 : BOOLEAN;
    signal ap_block_state37_pp0_stage3_iter4 : BOOLEAN;
    signal ap_block_state45_pp0_stage3_iter5 : BOOLEAN;
    signal ap_block_state53_pp0_stage3_iter6 : BOOLEAN;
    signal ap_block_state61_pp0_stage3_iter7 : BOOLEAN;
    signal ap_block_state69_pp0_stage3_iter8 : BOOLEAN;
    signal ap_block_state77_pp0_stage3_iter9 : BOOLEAN;
    signal ap_block_state85_pp0_stage3_iter10 : BOOLEAN;
    signal ap_block_state93_pp0_stage3_iter11 : BOOLEAN;
    signal ap_block_pp0_stage3_11001 : BOOLEAN;
    signal weights_0_load_reg_1575 : STD_LOGIC_VECTOR (31 downto 0);
    signal weights_1_load_reg_1580 : STD_LOGIC_VECTOR (31 downto 0);
    signal input_load_2_reg_1585 : STD_LOGIC_VECTOR (31 downto 0);
    signal input_load_3_reg_1590 : STD_LOGIC_VECTOR (31 downto 0);
    signal weights_2_load_reg_1615 : STD_LOGIC_VECTOR (31 downto 0);
    signal weights_3_load_reg_1620 : STD_LOGIC_VECTOR (31 downto 0);
    signal input_load_4_reg_1625 : STD_LOGIC_VECTOR (31 downto 0);
    signal input_load_5_reg_1630 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_149_fu_1155_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_149_reg_1635 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_pp0_stage5 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage5 : signal is "none";
    signal ap_block_state7_pp0_stage5_iter0 : BOOLEAN;
    signal ap_block_state15_pp0_stage5_iter1 : BOOLEAN;
    signal ap_block_state23_pp0_stage5_iter2 : BOOLEAN;
    signal ap_block_state31_pp0_stage5_iter3 : BOOLEAN;
    signal ap_block_state39_pp0_stage5_iter4 : BOOLEAN;
    signal ap_block_state47_pp0_stage5_iter5 : BOOLEAN;
    signal ap_block_state55_pp0_stage5_iter6 : BOOLEAN;
    signal ap_block_state63_pp0_stage5_iter7 : BOOLEAN;
    signal ap_block_state71_pp0_stage5_iter8 : BOOLEAN;
    signal ap_block_state79_pp0_stage5_iter9 : BOOLEAN;
    signal ap_block_state87_pp0_stage5_iter10 : BOOLEAN;
    signal ap_block_state95_pp0_stage5_iter11 : BOOLEAN;
    signal ap_block_pp0_stage5_11001 : BOOLEAN;
    signal p_14_fu_1160_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_14_reg_1653 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_15_fu_1168_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_15_reg_1658 : STD_LOGIC_VECTOR (31 downto 0);
    signal weights_4_load_reg_1683 : STD_LOGIC_VECTOR (31 downto 0);
    signal weights_5_load_reg_1688 : STD_LOGIC_VECTOR (31 downto 0);
    signal input_load_6_reg_1693 : STD_LOGIC_VECTOR (31 downto 0);
    signal input_load_7_reg_1698 : STD_LOGIC_VECTOR (31 downto 0);
    signal j_10_fu_1196_p2 : STD_LOGIC_VECTOR (2 downto 0);
    signal j_10_reg_1703 : STD_LOGIC_VECTOR (2 downto 0);
    signal indvar_flatten_next_fu_1201_p3 : STD_LOGIC_VECTOR (5 downto 0);
    signal indvar_flatten_next_reg_1708 : STD_LOGIC_VECTOR (5 downto 0);
    signal weights_6_load_reg_1733 : STD_LOGIC_VECTOR (31 downto 0);
    signal weights_7_load_reg_1738 : STD_LOGIC_VECTOR (31 downto 0);
    signal input_load_8_reg_1743 : STD_LOGIC_VECTOR (31 downto 0);
    signal input_load_9_reg_1748 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_pp0_stage7 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage7 : signal is "none";
    signal ap_block_state9_pp0_stage7_iter0 : BOOLEAN;
    signal ap_block_state17_pp0_stage7_iter1 : BOOLEAN;
    signal ap_block_state25_pp0_stage7_iter2 : BOOLEAN;
    signal ap_block_state33_pp0_stage7_iter3 : BOOLEAN;
    signal ap_block_state41_pp0_stage7_iter4 : BOOLEAN;
    signal ap_block_state49_pp0_stage7_iter5 : BOOLEAN;
    signal ap_block_state57_pp0_stage7_iter6 : BOOLEAN;
    signal ap_block_state65_pp0_stage7_iter7 : BOOLEAN;
    signal ap_block_state73_pp0_stage7_iter8 : BOOLEAN;
    signal ap_block_state81_pp0_stage7_iter9 : BOOLEAN;
    signal ap_block_state89_pp0_stage7_iter10 : BOOLEAN;
    signal ap_block_pp0_stage7_11001 : BOOLEAN;
    signal grp_fu_763_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_40_reg_1773 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_767_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_42_reg_1778 : STD_LOGIC_VECTOR (31 downto 0);
    signal weights_8_load_reg_1783 : STD_LOGIC_VECTOR (31 downto 0);
    signal weights_9_load_reg_1788 : STD_LOGIC_VECTOR (31 downto 0);
    signal input_load_10_reg_1793 : STD_LOGIC_VECTOR (31 downto 0);
    signal input_load_11_reg_1798 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_44_reg_1823 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_enable_reg_pp0_iter1 : STD_LOGIC := '0';
    signal tmp_46_reg_1828 : STD_LOGIC_VECTOR (31 downto 0);
    signal weights_10_load_reg_1833 : STD_LOGIC_VECTOR (31 downto 0);
    signal weights_11_load_reg_1838 : STD_LOGIC_VECTOR (31 downto 0);
    signal input_load_12_reg_1843 : STD_LOGIC_VECTOR (31 downto 0);
    signal input_load_13_reg_1848 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_12_fu_1297_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_13_fu_1305_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_48_reg_1873 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_50_reg_1878 : STD_LOGIC_VECTOR (31 downto 0);
    signal weights_12_load_reg_1883 : STD_LOGIC_VECTOR (31 downto 0);
    signal weights_13_load_reg_1888 : STD_LOGIC_VECTOR (31 downto 0);
    signal input_load_14_reg_1893 : STD_LOGIC_VECTOR (31 downto 0);
    signal input_load_15_reg_1898 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_10_fu_1313_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_11_fu_1321_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_52_reg_1913 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_54_reg_1918 : STD_LOGIC_VECTOR (31 downto 0);
    signal weights_14_load_reg_1923 : STD_LOGIC_VECTOR (31 downto 0);
    signal weights_15_load_reg_1928 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_8_fu_1329_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_9_fu_1337_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_56_reg_1943 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_58_reg_1948 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_s_fu_1345_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_s_reg_1953 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_1_fu_1352_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_1_reg_1958 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_2_fu_1359_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_2_reg_1963 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_3_fu_1366_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_3_reg_1968 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_4_fu_1373_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_4_reg_1973 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_5_fu_1380_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_5_reg_1978 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_6_fu_1387_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_7_fu_1395_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_747_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_41_reg_1993 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_751_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_43_reg_1999 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_60_reg_2005 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_62_reg_2010 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_45_reg_2015 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_47_reg_2021 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_47_reg_2021_pp0_iter2_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_64_reg_2027 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_66_reg_2032 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_49_reg_2037 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_49_reg_2037_pp0_iter2_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_51_reg_2043 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_51_reg_2043_pp0_iter2_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_51_reg_2043_pp0_iter3_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_68_reg_2049 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_70_reg_2054 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_53_reg_2059 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_53_reg_2059_pp0_iter2_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_53_reg_2059_pp0_iter3_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_55_reg_2065 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_55_reg_2065_pp0_iter2_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_55_reg_2065_pp0_iter3_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_55_reg_2065_pp0_iter4_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_57_reg_2071 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_enable_reg_pp0_iter2 : STD_LOGIC := '0';
    signal tmp_57_reg_2071_pp0_iter3_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_57_reg_2071_pp0_iter4_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_57_reg_2071_pp0_iter5_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_59_reg_2077 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_59_reg_2077_pp0_iter3_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_59_reg_2077_pp0_iter4_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_59_reg_2077_pp0_iter5_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_59_reg_2077_pp0_iter6_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_61_reg_2083 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_61_reg_2083_pp0_iter3_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_61_reg_2083_pp0_iter4_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_61_reg_2083_pp0_iter5_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_61_reg_2083_pp0_iter6_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_61_reg_2083_pp0_iter7_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_63_reg_2089 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_63_reg_2089_pp0_iter3_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_63_reg_2089_pp0_iter4_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_63_reg_2089_pp0_iter5_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_63_reg_2089_pp0_iter6_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_63_reg_2089_pp0_iter7_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_755_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_73_reg_2095 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_65_reg_2100 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_65_reg_2100_pp0_iter3_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_65_reg_2100_pp0_iter4_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_65_reg_2100_pp0_iter5_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_65_reg_2100_pp0_iter6_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_65_reg_2100_pp0_iter7_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_65_reg_2100_pp0_iter8_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_67_reg_2106 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_67_reg_2106_pp0_iter3_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_67_reg_2106_pp0_iter4_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_67_reg_2106_pp0_iter5_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_67_reg_2106_pp0_iter6_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_67_reg_2106_pp0_iter7_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_67_reg_2106_pp0_iter8_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_69_reg_2112 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_69_reg_2112_pp0_iter3_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_69_reg_2112_pp0_iter4_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_69_reg_2112_pp0_iter5_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_69_reg_2112_pp0_iter6_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_69_reg_2112_pp0_iter7_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_69_reg_2112_pp0_iter8_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_69_reg_2112_pp0_iter9_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_71_reg_2118 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_71_reg_2118_pp0_iter3_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_71_reg_2118_pp0_iter4_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_71_reg_2118_pp0_iter5_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_71_reg_2118_pp0_iter6_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_71_reg_2118_pp0_iter7_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_71_reg_2118_pp0_iter8_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_71_reg_2118_pp0_iter9_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_74_reg_2124 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_75_reg_2129 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_enable_reg_pp0_iter3 : STD_LOGIC := '0';
    signal tmp_76_reg_2134 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_enable_reg_pp0_iter4 : STD_LOGIC := '0';
    signal tmp_77_reg_2139 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_78_reg_2144 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_enable_reg_pp0_iter5 : STD_LOGIC := '0';
    signal tmp_79_reg_2149 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_80_reg_2154 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_enable_reg_pp0_iter6 : STD_LOGIC := '0';
    signal tmp_81_reg_2159 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_83_reg_2164 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_enable_reg_pp0_iter8 : STD_LOGIC := '0';
    signal tmp_84_reg_2169 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_enable_reg_pp0_iter9 : STD_LOGIC := '0';
    signal tmp_85_reg_2174 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_86_reg_2179 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_enable_reg_pp0_iter10 : STD_LOGIC := '0';
    signal tmp_mid2_fu_1403_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_mid2_reg_2184 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_87_reg_2194 : STD_LOGIC_VECTOR (31 downto 0);
    signal bias_load_reg_2199 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_block_pp0_stage0_subdone : BOOLEAN;
    signal ap_condition_pp0_exit_iter0_state2 : STD_LOGIC;
    signal ap_block_pp0_stage7_subdone : BOOLEAN;
    signal ap_block_pp0_stage5_subdone : BOOLEAN;
    signal ap_phi_mux_indvar_flatten3_phi_fu_503_p4 : STD_LOGIC_VECTOR (11 downto 0);
    signal ap_block_pp0_stage0 : BOOLEAN;
    signal ap_phi_mux_co_phi_fu_514_p4 : STD_LOGIC_VECTOR (6 downto 0);
    signal ap_block_pp0_stage1 : BOOLEAN;
    signal ap_phi_mux_indvar_flatten_phi_fu_526_p4 : STD_LOGIC_VECTOR (5 downto 0);
    signal ap_phi_mux_i_phi_fu_537_p4 : STD_LOGIC_VECTOR (2 downto 0);
    signal ap_phi_mux_tmp_22_phi_fu_548_p4 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_block_pp0_stage4 : BOOLEAN;
    signal ap_phi_mux_tmp_23_phi_fu_560_p4 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_phi_mux_tmp_24_phi_fu_572_p4 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_phi_mux_tmp_25_phi_fu_584_p4 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_phi_mux_tmp_26_phi_fu_596_p4 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_phi_mux_tmp_27_phi_fu_608_p4 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_phi_mux_tmp_28_phi_fu_620_p4 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_phi_mux_tmp_29_phi_fu_632_p4 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_phi_mux_tmp_s_phi_fu_644_p4 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_block_pp0_stage3 : BOOLEAN;
    signal ap_phi_mux_tmp_30_phi_fu_656_p4 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_phi_mux_tmp_31_phi_fu_668_p4 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_block_pp0_stage2 : BOOLEAN;
    signal ap_phi_mux_tmp_32_phi_fu_680_p4 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_phi_mux_tmp_33_phi_fu_692_p4 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_phi_mux_tmp_34_phi_fu_704_p4 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_phi_mux_tmp_35_phi_fu_716_p4 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_block_pp0_stage5 : BOOLEAN;
    signal ap_phi_mux_tmp_36_phi_fu_728_p4 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_phi_mux_j_phi_fu_740_p4 : STD_LOGIC_VECTOR (2 downto 0);
    signal tmp_204_cast_fu_969_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_205_cast_fu_980_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_206_cast_fu_1023_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_207_cast_fu_1033_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_208_cast_fu_1065_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_209_cast_fu_1075_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_210_cast_fu_1095_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_211_cast_fu_1105_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_212_cast_fu_1181_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_213_cast_fu_1191_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_214_cast_fu_1222_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_block_pp0_stage6 : BOOLEAN;
    signal tmp_215_cast_fu_1232_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_216_cast_fu_1252_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_block_pp0_stage7 : BOOLEAN;
    signal tmp_217_cast_fu_1262_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_218_cast_fu_1282_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_219_cast_fu_1292_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_fu_747_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_747_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_751_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_751_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_755_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_755_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_759_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_759_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_763_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_763_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_767_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_767_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_128_fu_809_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal not_exitcond_flatten_fu_803_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal exitcond_fu_821_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal i_mid_fu_795_p3 : STD_LOGIC_VECTOR (2 downto 0);
    signal exitcond_mid_fu_827_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_129_fu_839_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal i_15_fu_833_p2 : STD_LOGIC_VECTOR (2 downto 0);
    signal tmp_21_mid1_fu_861_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_21_mid_fu_815_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_72_fu_875_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_21_mid2_fu_867_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal co_2_fu_893_p2 : STD_LOGIC_VECTOR (6 downto 0);
    signal tmp_fu_910_p3 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp_mid2_cast_fu_906_p1 : STD_LOGIC_VECTOR (9 downto 0);
    signal p_shl4_cast_fu_918_p1 : STD_LOGIC_VECTOR (9 downto 0);
    signal tmp_89_fu_931_p3 : STD_LOGIC_VECTOR (4 downto 0);
    signal tmp_20_mid2_cast_fu_928_p1 : STD_LOGIC_VECTOR (9 downto 0);
    signal p_shl3_cast_fu_938_p1 : STD_LOGIC_VECTOR (9 downto 0);
    signal tmp_127_fu_922_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal tmp_150_fu_963_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal tmp_131_fu_948_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal tmp_151_fu_974_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal tmp_91_fu_998_p3 : STD_LOGIC_VECTOR (11 downto 0);
    signal tmp_185_cast_fu_995_p1 : STD_LOGIC_VECTOR (12 downto 0);
    signal p_shl_cast_fu_1005_p1 : STD_LOGIC_VECTOR (12 downto 0);
    signal tmp_132_fu_985_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal tmp_152_fu_1018_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal tmp_133_fu_990_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal tmp_153_fu_1028_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal tmp_148_fu_1009_p2 : STD_LOGIC_VECTOR (12 downto 0);
    signal tmp_39_cast1_fu_1015_p1 : STD_LOGIC_VECTOR (12 downto 0);
    signal tmp_166_fu_1038_p2 : STD_LOGIC_VECTOR (12 downto 0);
    signal tmp_134_fu_1050_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal tmp_154_fu_1060_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal tmp_135_fu_1055_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal tmp_155_fu_1070_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal tmp_136_fu_1080_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal tmp_156_fu_1090_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal tmp_137_fu_1085_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal tmp_157_fu_1100_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal tmp_138_fu_1110_p3 : STD_LOGIC_VECTOR (5 downto 0);
    signal tmp_90_fu_1121_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_175_cast_fu_1117_p1 : STD_LOGIC_VECTOR (9 downto 0);
    signal p_shl2_cast_fu_1130_p1 : STD_LOGIC_VECTOR (9 downto 0);
    signal tmp_37_fu_1145_p2 : STD_LOGIC_VECTOR (2 downto 0);
    signal tmp_38_fu_1149_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_139_fu_1134_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal tmp_158_fu_1176_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal tmp_140_fu_1140_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal tmp_159_fu_1186_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal tmp_141_fu_1207_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal tmp_160_fu_1217_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal tmp_142_fu_1212_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal tmp_161_fu_1227_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal tmp_143_fu_1237_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal tmp_162_fu_1247_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal tmp_144_fu_1242_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal tmp_163_fu_1257_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal tmp_145_fu_1267_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal tmp_164_fu_1277_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal tmp_146_fu_1272_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal tmp_165_fu_1287_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal ap_CS_fsm_state96 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state96 : signal is "none";
    signal ap_NS_fsm : STD_LOGIC_VECTOR (9 downto 0);
    signal ap_block_pp0_stage1_subdone : BOOLEAN;
    signal ap_block_pp0_stage2_subdone : BOOLEAN;
    signal ap_block_pp0_stage3_subdone : BOOLEAN;
    signal ap_block_pp0_stage4_subdone : BOOLEAN;
    signal ap_block_pp0_stage6_subdone : BOOLEAN;
    signal ap_idle_pp0 : STD_LOGIC;
    signal ap_enable_pp0 : STD_LOGIC;

    component conv1_fadd_32ns_3bkb IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (31 downto 0);
        din1 : IN STD_LOGIC_VECTOR (31 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component conv1_fmul_32ns_3cud IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (31 downto 0);
        din1 : IN STD_LOGIC_VECTOR (31 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;



begin
    conv1_fadd_32ns_3bkb_U59 : component conv1_fadd_32ns_3bkb
    generic map (
        ID => 1,
        NUM_STAGE => 5,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_747_p0,
        din1 => grp_fu_747_p1,
        ce => ap_const_logic_1,
        dout => grp_fu_747_p2);

    conv1_fadd_32ns_3bkb_U60 : component conv1_fadd_32ns_3bkb
    generic map (
        ID => 1,
        NUM_STAGE => 5,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_751_p0,
        din1 => grp_fu_751_p1,
        ce => ap_const_logic_1,
        dout => grp_fu_751_p2);

    conv1_fadd_32ns_3bkb_U61 : component conv1_fadd_32ns_3bkb
    generic map (
        ID => 1,
        NUM_STAGE => 5,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_755_p0,
        din1 => grp_fu_755_p1,
        ce => ap_const_logic_1,
        dout => grp_fu_755_p2);

    conv1_fadd_32ns_3bkb_U62 : component conv1_fadd_32ns_3bkb
    generic map (
        ID => 1,
        NUM_STAGE => 5,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_759_p0,
        din1 => grp_fu_759_p1,
        ce => ap_const_logic_1,
        dout => grp_fu_759_p2);

    conv1_fmul_32ns_3cud_U63 : component conv1_fmul_32ns_3cud
    generic map (
        ID => 1,
        NUM_STAGE => 4,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_763_p0,
        din1 => grp_fu_763_p1,
        ce => ap_const_logic_1,
        dout => grp_fu_763_p2);

    conv1_fmul_32ns_3cud_U64 : component conv1_fmul_32ns_3cud
    generic map (
        ID => 1,
        NUM_STAGE => 4,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_767_p0,
        din1 => grp_fu_767_p1,
        ce => ap_const_logic_1,
        dout => grp_fu_767_p2);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_state1;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter0_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter0 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_const_logic_1 = ap_condition_pp0_exit_iter0_state2) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                    ap_enable_reg_pp0_iter0 <= ap_const_logic_0;
                elsif (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1))) then 
                    ap_enable_reg_pp0_iter0 <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage7_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage7))) then
                    if ((ap_const_logic_1 = ap_condition_pp0_exit_iter0_state2)) then 
                        ap_enable_reg_pp0_iter1 <= (ap_const_logic_1 xor ap_condition_pp0_exit_iter0_state2);
                    elsif ((ap_const_boolean_1 = ap_const_boolean_1)) then 
                        ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
                    end if;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter10_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter10 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage7_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage7))) then 
                    ap_enable_reg_pp0_iter10 <= ap_enable_reg_pp0_iter9;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter11_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter11 <= ap_const_logic_0;
            else
                if ((((ap_const_boolean_0 = ap_block_pp0_stage7_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage7)) or ((ap_const_boolean_0 = ap_block_pp0_stage5_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage5)))) then 
                    ap_enable_reg_pp0_iter11 <= ap_enable_reg_pp0_iter10;
                elsif (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1))) then 
                    ap_enable_reg_pp0_iter11 <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter2_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter2 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage7_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage7))) then 
                    ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter3_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter3 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage7_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage7))) then 
                    ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter4_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter4 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage7_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage7))) then 
                    ap_enable_reg_pp0_iter4 <= ap_enable_reg_pp0_iter3;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter5_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter5 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage7_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage7))) then 
                    ap_enable_reg_pp0_iter5 <= ap_enable_reg_pp0_iter4;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter6_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter6 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage7_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage7))) then 
                    ap_enable_reg_pp0_iter6 <= ap_enable_reg_pp0_iter5;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter7_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter7 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage7_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage7))) then 
                    ap_enable_reg_pp0_iter7 <= ap_enable_reg_pp0_iter6;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter8_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter8 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage7_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage7))) then 
                    ap_enable_reg_pp0_iter8 <= ap_enable_reg_pp0_iter7;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter9_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter9 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage7_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage7))) then 
                    ap_enable_reg_pp0_iter9 <= ap_enable_reg_pp0_iter8;
                end if; 
            end if;
        end if;
    end process;


    co_reg_510_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (exitcond_flatten3_reg_1407_pp0_iter1_reg = ap_const_lv1_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
                co_reg_510 <= tmp_mid2_v_reg_1450;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1))) then 
                co_reg_510 <= ap_const_lv7_0;
            end if; 
        end if;
    end process;

    i_reg_533_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (exitcond_flatten3_reg_1407 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                i_reg_533 <= tmp_20_mid2_reg_1431;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1))) then 
                i_reg_533 <= ap_const_lv3_0;
            end if; 
        end if;
    end process;

    indvar_flatten3_reg_499_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (exitcond_flatten3_reg_1407 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                indvar_flatten3_reg_499 <= indvar_flatten_next3_reg_1411;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1))) then 
                indvar_flatten3_reg_499 <= ap_const_lv12_0;
            end if; 
        end if;
    end process;

    indvar_flatten_reg_522_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (exitcond_flatten3_reg_1407 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                indvar_flatten_reg_522 <= indvar_flatten_next_reg_1708;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1))) then 
                indvar_flatten_reg_522 <= ap_const_lv6_0;
            end if; 
        end if;
    end process;

    j_reg_736_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (exitcond_flatten3_reg_1407 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                j_reg_736 <= j_10_reg_1703;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1))) then 
                j_reg_736 <= ap_const_lv3_0;
            end if; 
        end if;
    end process;

    tmp_22_reg_544_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((exitcond_flatten3_reg_1407_pp0_iter2_reg = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage4_11001) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4))) then 
                tmp_22_reg_544 <= tmp_71_reg_2118;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1))) then 
                tmp_22_reg_544 <= ap_const_lv32_0;
            end if; 
        end if;
    end process;

    tmp_23_reg_556_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((exitcond_flatten3_reg_1407_pp0_iter2_reg = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage4_11001) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4))) then 
                tmp_23_reg_556 <= tmp_69_reg_2112;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1))) then 
                tmp_23_reg_556 <= ap_const_lv32_0;
            end if; 
        end if;
    end process;

    tmp_24_reg_568_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((exitcond_flatten3_reg_1407_pp0_iter2_reg = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage4_11001) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4))) then 
                tmp_24_reg_568 <= tmp_67_reg_2106;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1))) then 
                tmp_24_reg_568 <= ap_const_lv32_0;
            end if; 
        end if;
    end process;

    tmp_25_reg_580_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((exitcond_flatten3_reg_1407_pp0_iter2_reg = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage4_11001) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4))) then 
                tmp_25_reg_580 <= tmp_65_reg_2100;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1))) then 
                tmp_25_reg_580 <= ap_const_lv32_0;
            end if; 
        end if;
    end process;

    tmp_26_reg_592_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((exitcond_flatten3_reg_1407_pp0_iter2_reg = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage4_11001) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4))) then 
                tmp_26_reg_592 <= tmp_63_reg_2089;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1))) then 
                tmp_26_reg_592 <= ap_const_lv32_0;
            end if; 
        end if;
    end process;

    tmp_27_reg_604_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((exitcond_flatten3_reg_1407_pp0_iter2_reg = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage4_11001) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4))) then 
                tmp_27_reg_604 <= tmp_61_reg_2083;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1))) then 
                tmp_27_reg_604 <= ap_const_lv32_0;
            end if; 
        end if;
    end process;

    tmp_28_reg_616_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((exitcond_flatten3_reg_1407_pp0_iter2_reg = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage4_11001) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4))) then 
                tmp_28_reg_616 <= tmp_59_reg_2077;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1))) then 
                tmp_28_reg_616 <= ap_const_lv32_0;
            end if; 
        end if;
    end process;

    tmp_29_reg_628_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((exitcond_flatten3_reg_1407_pp0_iter2_reg = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage4_11001) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4))) then 
                tmp_29_reg_628 <= tmp_57_reg_2071;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1))) then 
                tmp_29_reg_628 <= ap_const_lv32_0;
            end if; 
        end if;
    end process;

    tmp_30_reg_652_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage3_11001) and (exitcond_flatten3_reg_1407_pp0_iter2_reg = ap_const_lv1_0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3))) then 
                tmp_30_reg_652 <= tmp_53_reg_2059;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1))) then 
                tmp_30_reg_652 <= ap_const_lv32_0;
            end if; 
        end if;
    end process;

    tmp_31_reg_664_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (exitcond_flatten3_reg_1407_pp0_iter2_reg = ap_const_lv1_0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then 
                tmp_31_reg_664 <= tmp_51_reg_2043;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1))) then 
                tmp_31_reg_664 <= ap_const_lv32_0;
            end if; 
        end if;
    end process;

    tmp_32_reg_676_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (exitcond_flatten3_reg_1407_pp0_iter2_reg = ap_const_lv1_0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then 
                tmp_32_reg_676 <= tmp_49_reg_2037;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1))) then 
                tmp_32_reg_676 <= ap_const_lv32_0;
            end if; 
        end if;
    end process;

    tmp_33_reg_688_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (exitcond_flatten3_reg_1407_pp0_iter2_reg = ap_const_lv1_0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
                tmp_33_reg_688 <= tmp_47_reg_2021;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1))) then 
                tmp_33_reg_688 <= ap_const_lv32_0;
            end if; 
        end if;
    end process;

    tmp_34_reg_700_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (exitcond_flatten3_reg_1407_pp0_iter2_reg = ap_const_lv1_0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
                tmp_34_reg_700 <= tmp_45_reg_2015;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1))) then 
                tmp_34_reg_700 <= ap_const_lv32_0;
            end if; 
        end if;
    end process;

    tmp_35_reg_712_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage5_11001) and (exitcond_flatten3_reg_1407_pp0_iter1_reg = ap_const_lv1_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage5))) then 
                tmp_35_reg_712 <= tmp_43_reg_1999;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1))) then 
                tmp_35_reg_712 <= ap_const_lv32_0;
            end if; 
        end if;
    end process;

    tmp_36_reg_724_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage5_11001) and (exitcond_flatten3_reg_1407_pp0_iter1_reg = ap_const_lv1_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage5))) then 
                tmp_36_reg_724 <= tmp_41_reg_1993;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1))) then 
                tmp_36_reg_724 <= ap_const_lv32_0;
            end if; 
        end if;
    end process;

    tmp_s_reg_640_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage3_11001) and (exitcond_flatten3_reg_1407_pp0_iter2_reg = ap_const_lv1_0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3))) then 
                tmp_s_reg_640 <= tmp_55_reg_2065;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1))) then 
                tmp_s_reg_640 <= ap_const_lv32_0;
            end if; 
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage7_11001) and (or_cond3_reg_1441_pp0_iter10_reg = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage7))) then
                bias_load_reg_2199 <= bias_q0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                exitcond_flatten3_reg_1407 <= exitcond_flatten3_fu_777_p2;
                exitcond_flatten3_reg_1407_pp0_iter10_reg <= exitcond_flatten3_reg_1407_pp0_iter9_reg;
                exitcond_flatten3_reg_1407_pp0_iter1_reg <= exitcond_flatten3_reg_1407;
                exitcond_flatten3_reg_1407_pp0_iter2_reg <= exitcond_flatten3_reg_1407_pp0_iter1_reg;
                exitcond_flatten3_reg_1407_pp0_iter3_reg <= exitcond_flatten3_reg_1407_pp0_iter2_reg;
                exitcond_flatten3_reg_1407_pp0_iter4_reg <= exitcond_flatten3_reg_1407_pp0_iter3_reg;
                exitcond_flatten3_reg_1407_pp0_iter5_reg <= exitcond_flatten3_reg_1407_pp0_iter4_reg;
                exitcond_flatten3_reg_1407_pp0_iter6_reg <= exitcond_flatten3_reg_1407_pp0_iter5_reg;
                exitcond_flatten3_reg_1407_pp0_iter7_reg <= exitcond_flatten3_reg_1407_pp0_iter6_reg;
                exitcond_flatten3_reg_1407_pp0_iter8_reg <= exitcond_flatten3_reg_1407_pp0_iter7_reg;
                exitcond_flatten3_reg_1407_pp0_iter9_reg <= exitcond_flatten3_reg_1407_pp0_iter8_reg;
                or_cond3_reg_1441_pp0_iter10_reg <= or_cond3_reg_1441_pp0_iter9_reg;
                or_cond3_reg_1441_pp0_iter11_reg <= or_cond3_reg_1441_pp0_iter10_reg;
                or_cond3_reg_1441_pp0_iter1_reg <= or_cond3_reg_1441;
                or_cond3_reg_1441_pp0_iter2_reg <= or_cond3_reg_1441_pp0_iter1_reg;
                or_cond3_reg_1441_pp0_iter3_reg <= or_cond3_reg_1441_pp0_iter2_reg;
                or_cond3_reg_1441_pp0_iter4_reg <= or_cond3_reg_1441_pp0_iter3_reg;
                or_cond3_reg_1441_pp0_iter5_reg <= or_cond3_reg_1441_pp0_iter4_reg;
                or_cond3_reg_1441_pp0_iter6_reg <= or_cond3_reg_1441_pp0_iter5_reg;
                or_cond3_reg_1441_pp0_iter7_reg <= or_cond3_reg_1441_pp0_iter6_reg;
                or_cond3_reg_1441_pp0_iter8_reg <= or_cond3_reg_1441_pp0_iter7_reg;
                or_cond3_reg_1441_pp0_iter9_reg <= or_cond3_reg_1441_pp0_iter8_reg;
                tmp_57_reg_2071_pp0_iter3_reg <= tmp_57_reg_2071;
                tmp_57_reg_2071_pp0_iter4_reg <= tmp_57_reg_2071_pp0_iter3_reg;
                tmp_57_reg_2071_pp0_iter5_reg <= tmp_57_reg_2071_pp0_iter4_reg;
                tmp_59_reg_2077_pp0_iter3_reg <= tmp_59_reg_2077;
                tmp_59_reg_2077_pp0_iter4_reg <= tmp_59_reg_2077_pp0_iter3_reg;
                tmp_59_reg_2077_pp0_iter5_reg <= tmp_59_reg_2077_pp0_iter4_reg;
                tmp_59_reg_2077_pp0_iter6_reg <= tmp_59_reg_2077_pp0_iter5_reg;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (exitcond_flatten3_fu_777_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                exitcond_flatten_reg_1416 <= exitcond_flatten_fu_789_p2;
                indvar_flatten_op_reg_1445 <= indvar_flatten_op_fu_887_p2;
                j_mid2_reg_1423 <= j_mid2_fu_845_p3;
                or_cond3_reg_1441 <= or_cond3_fu_881_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                indvar_flatten_next3_reg_1411 <= indvar_flatten_next3_fu_783_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage5_11001) and (exitcond_flatten3_reg_1407 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage5) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1))) then
                indvar_flatten_next_reg_1708 <= indvar_flatten_next_fu_1201_p3;
                input_load_6_reg_1693 <= input_r_q0;
                input_load_7_reg_1698 <= input_r_q1;
                j_10_reg_1703 <= j_10_fu_1196_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage7_11001) and (exitcond_flatten3_reg_1407 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage7) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1))) then
                input_load_10_reg_1793 <= input_r_q0;
                input_load_11_reg_1798 <= input_r_q1;
                tmp_40_reg_1773 <= grp_fu_763_p2;
                tmp_42_reg_1778 <= grp_fu_767_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (exitcond_flatten3_reg_1407 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                input_load_12_reg_1843 <= input_r_q0;
                input_load_13_reg_1848 <= input_r_q1;
                tmp_44_reg_1823 <= grp_fu_763_p2;
                tmp_46_reg_1828 <= grp_fu_767_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (exitcond_flatten3_reg_1407_pp0_iter1_reg = ap_const_lv1_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then
                input_load_14_reg_1893 <= input_r_q0;
                input_load_15_reg_1898 <= input_r_q1;
                tmp_48_reg_1873 <= grp_fu_763_p2;
                tmp_50_reg_1878 <= grp_fu_767_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (exitcond_flatten3_reg_1407 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1))) then
                input_load_1_reg_1550 <= input_r_q1;
                input_load_reg_1545 <= input_r_q0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage3_11001) and (exitcond_flatten3_reg_1407 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1))) then
                input_load_2_reg_1585 <= input_r_q0;
                input_load_3_reg_1590 <= input_r_q1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((exitcond_flatten3_reg_1407 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage4_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4))) then
                input_load_4_reg_1625 <= input_r_q0;
                input_load_5_reg_1630 <= input_r_q1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((exitcond_flatten3_reg_1407 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage6_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage6))) then
                input_load_8_reg_1743 <= input_r_q0;
                input_load_9_reg_1748 <= input_r_q1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage5_11001) and (exitcond_flatten3_reg_1407 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage5))) then
                p_14_reg_1653 <= p_14_fu_1160_p3;
                p_15_reg_1658 <= p_15_fu_1168_p3;
                tmp_149_reg_1635 <= tmp_149_fu_1155_p2;
                weights_4_load_reg_1683 <= weights_4_q0;
                weights_5_load_reg_1688 <= weights_5_q0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((exitcond_flatten3_reg_1407_pp0_iter1_reg = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage4_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4))) then
                p_1_reg_1958 <= p_1_fu_1352_p3;
                p_2_reg_1963 <= p_2_fu_1359_p3;
                p_3_reg_1968 <= p_3_fu_1366_p3;
                p_4_reg_1973 <= p_4_fu_1373_p3;
                p_5_reg_1978 <= p_5_fu_1380_p3;
                p_s_reg_1953 <= p_s_fu_1345_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((((ap_const_boolean_0 = ap_block_pp0_stage4_11001) and (or_cond3_reg_1441_pp0_iter11_reg = ap_const_lv1_1) and (ap_enable_reg_pp0_iter11 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4)) or ((or_cond3_reg_1441_pp0_iter7_reg = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage6_11001) and (ap_enable_reg_pp0_iter7 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage6)))) then
                reg_771 <= grp_fu_759_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (exitcond_flatten3_reg_1407 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then
                tmp_130_reg_1456 <= tmp_130_fu_942_p2;
                tmp_147_reg_1473 <= tmp_147_fu_954_p2;
                    tmp_39_cast_reg_1479(2 downto 0) <= tmp_39_cast_fu_960_p1(2 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (exitcond_flatten3_fu_777_p2 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                tmp_20_mid2_reg_1431 <= tmp_20_mid2_fu_853_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (exitcond_flatten3_reg_1407 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then
                    tmp_220_cast_reg_1517(12 downto 0) <= tmp_220_cast_fu_1044_p1(12 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((exitcond_flatten3_reg_1407_pp0_iter1_reg = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage4_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4))) then
                tmp_41_reg_1993 <= grp_fu_747_p2;
                tmp_43_reg_1999 <= grp_fu_751_p2;
                tmp_60_reg_2005 <= grp_fu_763_p2;
                tmp_62_reg_2010 <= grp_fu_767_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage5_11001) and (exitcond_flatten3_reg_1407_pp0_iter1_reg = ap_const_lv1_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage5))) then
                tmp_45_reg_2015 <= grp_fu_747_p2;
                tmp_47_reg_2021 <= grp_fu_751_p2;
                tmp_64_reg_2027 <= grp_fu_763_p2;
                tmp_66_reg_2032 <= grp_fu_767_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage5_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage5))) then
                tmp_47_reg_2021_pp0_iter2_reg <= tmp_47_reg_2021;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((exitcond_flatten3_reg_1407_pp0_iter1_reg = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage6_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage6))) then
                tmp_49_reg_2037 <= grp_fu_747_p2;
                tmp_51_reg_2043 <= grp_fu_751_p2;
                tmp_68_reg_2049 <= grp_fu_763_p2;
                tmp_70_reg_2054 <= grp_fu_767_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage6_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage6))) then
                tmp_49_reg_2037_pp0_iter2_reg <= tmp_49_reg_2037;
                tmp_51_reg_2043_pp0_iter2_reg <= tmp_51_reg_2043;
                tmp_51_reg_2043_pp0_iter3_reg <= tmp_51_reg_2043_pp0_iter2_reg;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (exitcond_flatten3_reg_1407_pp0_iter1_reg = ap_const_lv1_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then
                tmp_52_reg_1913 <= grp_fu_763_p2;
                tmp_54_reg_1918 <= grp_fu_767_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage7_11001) and (exitcond_flatten3_reg_1407_pp0_iter1_reg = ap_const_lv1_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage7))) then
                tmp_53_reg_2059 <= grp_fu_747_p2;
                tmp_55_reg_2065 <= grp_fu_751_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage7_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage7))) then
                tmp_53_reg_2059_pp0_iter2_reg <= tmp_53_reg_2059;
                tmp_53_reg_2059_pp0_iter3_reg <= tmp_53_reg_2059_pp0_iter2_reg;
                tmp_55_reg_2065_pp0_iter2_reg <= tmp_55_reg_2065;
                tmp_55_reg_2065_pp0_iter3_reg <= tmp_55_reg_2065_pp0_iter2_reg;
                tmp_55_reg_2065_pp0_iter4_reg <= tmp_55_reg_2065_pp0_iter3_reg;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage3_11001) and (exitcond_flatten3_reg_1407_pp0_iter1_reg = ap_const_lv1_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3))) then
                tmp_56_reg_1943 <= grp_fu_763_p2;
                tmp_58_reg_1948 <= grp_fu_767_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((exitcond_flatten3_reg_1407_pp0_iter1_reg = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                tmp_57_reg_2071 <= grp_fu_747_p2;
                tmp_59_reg_2077 <= grp_fu_751_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (exitcond_flatten3_reg_1407_pp0_iter2_reg = ap_const_lv1_0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then
                tmp_61_reg_2083 <= grp_fu_747_p2;
                tmp_63_reg_2089 <= grp_fu_751_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then
                tmp_61_reg_2083_pp0_iter3_reg <= tmp_61_reg_2083;
                tmp_61_reg_2083_pp0_iter4_reg <= tmp_61_reg_2083_pp0_iter3_reg;
                tmp_61_reg_2083_pp0_iter5_reg <= tmp_61_reg_2083_pp0_iter4_reg;
                tmp_61_reg_2083_pp0_iter6_reg <= tmp_61_reg_2083_pp0_iter5_reg;
                tmp_61_reg_2083_pp0_iter7_reg <= tmp_61_reg_2083_pp0_iter6_reg;
                tmp_63_reg_2089_pp0_iter3_reg <= tmp_63_reg_2089;
                tmp_63_reg_2089_pp0_iter4_reg <= tmp_63_reg_2089_pp0_iter3_reg;
                tmp_63_reg_2089_pp0_iter5_reg <= tmp_63_reg_2089_pp0_iter4_reg;
                tmp_63_reg_2089_pp0_iter6_reg <= tmp_63_reg_2089_pp0_iter5_reg;
                tmp_63_reg_2089_pp0_iter7_reg <= tmp_63_reg_2089_pp0_iter6_reg;
                tmp_mid2_v_reg_1450_pp0_iter10_reg <= tmp_mid2_v_reg_1450_pp0_iter9_reg;
                tmp_mid2_v_reg_1450_pp0_iter1_reg <= tmp_mid2_v_reg_1450;
                tmp_mid2_v_reg_1450_pp0_iter2_reg <= tmp_mid2_v_reg_1450_pp0_iter1_reg;
                tmp_mid2_v_reg_1450_pp0_iter3_reg <= tmp_mid2_v_reg_1450_pp0_iter2_reg;
                tmp_mid2_v_reg_1450_pp0_iter4_reg <= tmp_mid2_v_reg_1450_pp0_iter3_reg;
                tmp_mid2_v_reg_1450_pp0_iter5_reg <= tmp_mid2_v_reg_1450_pp0_iter4_reg;
                tmp_mid2_v_reg_1450_pp0_iter6_reg <= tmp_mid2_v_reg_1450_pp0_iter5_reg;
                tmp_mid2_v_reg_1450_pp0_iter7_reg <= tmp_mid2_v_reg_1450_pp0_iter6_reg;
                tmp_mid2_v_reg_1450_pp0_iter8_reg <= tmp_mid2_v_reg_1450_pp0_iter7_reg;
                tmp_mid2_v_reg_1450_pp0_iter9_reg <= tmp_mid2_v_reg_1450_pp0_iter8_reg;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (exitcond_flatten3_reg_1407_pp0_iter2_reg = ap_const_lv1_0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then
                tmp_65_reg_2100 <= grp_fu_747_p2;
                tmp_67_reg_2106 <= grp_fu_751_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then
                tmp_65_reg_2100_pp0_iter3_reg <= tmp_65_reg_2100;
                tmp_65_reg_2100_pp0_iter4_reg <= tmp_65_reg_2100_pp0_iter3_reg;
                tmp_65_reg_2100_pp0_iter5_reg <= tmp_65_reg_2100_pp0_iter4_reg;
                tmp_65_reg_2100_pp0_iter6_reg <= tmp_65_reg_2100_pp0_iter5_reg;
                tmp_65_reg_2100_pp0_iter7_reg <= tmp_65_reg_2100_pp0_iter6_reg;
                tmp_65_reg_2100_pp0_iter8_reg <= tmp_65_reg_2100_pp0_iter7_reg;
                tmp_67_reg_2106_pp0_iter3_reg <= tmp_67_reg_2106;
                tmp_67_reg_2106_pp0_iter4_reg <= tmp_67_reg_2106_pp0_iter3_reg;
                tmp_67_reg_2106_pp0_iter5_reg <= tmp_67_reg_2106_pp0_iter4_reg;
                tmp_67_reg_2106_pp0_iter6_reg <= tmp_67_reg_2106_pp0_iter5_reg;
                tmp_67_reg_2106_pp0_iter7_reg <= tmp_67_reg_2106_pp0_iter6_reg;
                tmp_67_reg_2106_pp0_iter8_reg <= tmp_67_reg_2106_pp0_iter7_reg;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage3_11001) and (exitcond_flatten3_reg_1407_pp0_iter2_reg = ap_const_lv1_0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3))) then
                tmp_69_reg_2112 <= grp_fu_747_p2;
                tmp_71_reg_2118 <= grp_fu_751_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage3_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3))) then
                tmp_69_reg_2112_pp0_iter3_reg <= tmp_69_reg_2112;
                tmp_69_reg_2112_pp0_iter4_reg <= tmp_69_reg_2112_pp0_iter3_reg;
                tmp_69_reg_2112_pp0_iter5_reg <= tmp_69_reg_2112_pp0_iter4_reg;
                tmp_69_reg_2112_pp0_iter6_reg <= tmp_69_reg_2112_pp0_iter5_reg;
                tmp_69_reg_2112_pp0_iter7_reg <= tmp_69_reg_2112_pp0_iter6_reg;
                tmp_69_reg_2112_pp0_iter8_reg <= tmp_69_reg_2112_pp0_iter7_reg;
                tmp_69_reg_2112_pp0_iter9_reg <= tmp_69_reg_2112_pp0_iter8_reg;
                tmp_71_reg_2118_pp0_iter3_reg <= tmp_71_reg_2118;
                tmp_71_reg_2118_pp0_iter4_reg <= tmp_71_reg_2118_pp0_iter3_reg;
                tmp_71_reg_2118_pp0_iter5_reg <= tmp_71_reg_2118_pp0_iter4_reg;
                tmp_71_reg_2118_pp0_iter6_reg <= tmp_71_reg_2118_pp0_iter5_reg;
                tmp_71_reg_2118_pp0_iter7_reg <= tmp_71_reg_2118_pp0_iter6_reg;
                tmp_71_reg_2118_pp0_iter8_reg <= tmp_71_reg_2118_pp0_iter7_reg;
                tmp_71_reg_2118_pp0_iter9_reg <= tmp_71_reg_2118_pp0_iter8_reg;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (or_cond3_reg_1441_pp0_iter2_reg = ap_const_lv1_1) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then
                tmp_73_reg_2095 <= grp_fu_755_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((or_cond3_reg_1441_pp0_iter2_reg = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage6_11001) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage6))) then
                tmp_74_reg_2124 <= grp_fu_755_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage3_11001) and (or_cond3_reg_1441_pp0_iter3_reg = ap_const_lv1_1) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3))) then
                tmp_75_reg_2129 <= grp_fu_755_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (or_cond3_reg_1441_pp0_iter3_reg = ap_const_lv1_1) and (ap_enable_reg_pp0_iter4 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                tmp_76_reg_2134 <= grp_fu_755_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage5_11001) and (or_cond3_reg_1441_pp0_iter4_reg = ap_const_lv1_1) and (ap_enable_reg_pp0_iter4 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage5))) then
                tmp_77_reg_2139 <= grp_fu_755_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (or_cond3_reg_1441_pp0_iter5_reg = ap_const_lv1_1) and (ap_enable_reg_pp0_iter5 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then
                tmp_78_reg_2144 <= grp_fu_755_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage7_11001) and (or_cond3_reg_1441_pp0_iter5_reg = ap_const_lv1_1) and (ap_enable_reg_pp0_iter5 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage7))) then
                tmp_79_reg_2149 <= grp_fu_755_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage4_11001) and (or_cond3_reg_1441_pp0_iter6_reg = ap_const_lv1_1) and (ap_enable_reg_pp0_iter6 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4))) then
                tmp_80_reg_2154 <= grp_fu_755_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (or_cond3_reg_1441_pp0_iter7_reg = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_enable_reg_pp0_iter7 = ap_const_logic_1))) then
                tmp_81_reg_2159 <= grp_fu_759_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage3_11001) and (or_cond3_reg_1441_pp0_iter8_reg = ap_const_lv1_1) and (ap_enable_reg_pp0_iter8 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3))) then
                tmp_83_reg_2164 <= grp_fu_759_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (or_cond3_reg_1441_pp0_iter8_reg = ap_const_lv1_1) and (ap_enable_reg_pp0_iter9 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                tmp_84_reg_2169 <= grp_fu_759_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage5_11001) and (or_cond3_reg_1441_pp0_iter9_reg = ap_const_lv1_1) and (ap_enable_reg_pp0_iter9 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage5))) then
                tmp_85_reg_2174 <= grp_fu_759_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (or_cond3_reg_1441_pp0_iter10_reg = ap_const_lv1_1) and (ap_enable_reg_pp0_iter10 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then
                tmp_86_reg_2179 <= grp_fu_759_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage7_11001) and (or_cond3_reg_1441_pp0_iter10_reg = ap_const_lv1_1) and (ap_enable_reg_pp0_iter10 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage7))) then
                tmp_87_reg_2194 <= grp_fu_759_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((exitcond_flatten3_reg_1407_pp0_iter10_reg = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage6_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage6))) then
                    tmp_mid2_reg_2184(6 downto 0) <= tmp_mid2_fu_1403_p1(6 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (exitcond_flatten3_reg_1407 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1))) then
                tmp_mid2_v_reg_1450 <= tmp_mid2_v_fu_899_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage3_11001) and (exitcond_flatten3_reg_1407 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3))) then
                weights_0_load_reg_1575 <= weights_0_q0;
                weights_1_load_reg_1580 <= weights_1_q0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (exitcond_flatten3_reg_1407 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                weights_10_load_reg_1833 <= weights_10_q0;
                weights_11_load_reg_1838 <= weights_11_q0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (exitcond_flatten3_reg_1407_pp0_iter1_reg = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then
                weights_12_load_reg_1883 <= weights_12_q0;
                weights_13_load_reg_1888 <= weights_13_q0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (exitcond_flatten3_reg_1407_pp0_iter1_reg = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then
                weights_14_load_reg_1923 <= weights_14_q0;
                weights_15_load_reg_1928 <= weights_15_q0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((exitcond_flatten3_reg_1407 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage4_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4))) then
                weights_2_load_reg_1615 <= weights_2_q0;
                weights_3_load_reg_1620 <= weights_3_q0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((exitcond_flatten3_reg_1407 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage6_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage6))) then
                weights_6_load_reg_1733 <= weights_6_q0;
                weights_7_load_reg_1738 <= weights_7_q0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage7_11001) and (exitcond_flatten3_reg_1407 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage7))) then
                weights_8_load_reg_1783 <= weights_8_q0;
                weights_9_load_reg_1788 <= weights_9_q0;
            end if;
        end if;
    end process;
    tmp_39_cast_reg_1479(9 downto 3) <= "0000000";
    tmp_220_cast_reg_1517(63 downto 13) <= "000000000000000000000000000000000000000000000000000";
    tmp_mid2_reg_2184(63 downto 7) <= "000000000000000000000000000000000000000000000000000000000";

    ap_NS_fsm_assign_proc : process (ap_start, ap_CS_fsm, ap_CS_fsm_state1, ap_enable_reg_pp0_iter11, exitcond_flatten3_fu_777_p2, ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage5, ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter10, ap_block_pp0_stage0_subdone, ap_block_pp0_stage7_subdone, ap_block_pp0_stage5_subdone, ap_block_pp0_stage1_subdone, ap_block_pp0_stage2_subdone, ap_block_pp0_stage3_subdone, ap_block_pp0_stage4_subdone, ap_block_pp0_stage6_subdone)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_state1 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1))) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                else
                    ap_NS_fsm <= ap_ST_fsm_state1;
                end if;
            when ap_ST_fsm_pp0_stage0 => 
                if ((not(((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (exitcond_flatten3_fu_777_p2 = ap_const_lv1_1) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1))) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone))) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage1;
                elsif (((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (exitcond_flatten3_fu_777_p2 = ap_const_lv1_1) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state96;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                end if;
            when ap_ST_fsm_pp0_stage1 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage1_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage2;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage1;
                end if;
            when ap_ST_fsm_pp0_stage2 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage2_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage3;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage2;
                end if;
            when ap_ST_fsm_pp0_stage3 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage3_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage4;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage3;
                end if;
            when ap_ST_fsm_pp0_stage4 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage4_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage5;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage4;
                end if;
            when ap_ST_fsm_pp0_stage5 => 
                if ((not(((ap_const_boolean_0 = ap_block_pp0_stage5_subdone) and (ap_enable_reg_pp0_iter10 = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage5) and (ap_enable_reg_pp0_iter11 = ap_const_logic_1))) and (ap_const_boolean_0 = ap_block_pp0_stage5_subdone))) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage6;
                elsif (((ap_const_boolean_0 = ap_block_pp0_stage5_subdone) and (ap_enable_reg_pp0_iter10 = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage5) and (ap_enable_reg_pp0_iter11 = ap_const_logic_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state96;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage5;
                end if;
            when ap_ST_fsm_pp0_stage6 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage6_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage7;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage6;
                end if;
            when ap_ST_fsm_pp0_stage7 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage7_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage7;
                end if;
            when ap_ST_fsm_state96 => 
                ap_NS_fsm <= ap_ST_fsm_state1;
            when others =>  
                ap_NS_fsm <= "XXXXXXXXXX";
        end case;
    end process;
    ap_CS_fsm_pp0_stage0 <= ap_CS_fsm(1);
    ap_CS_fsm_pp0_stage1 <= ap_CS_fsm(2);
    ap_CS_fsm_pp0_stage2 <= ap_CS_fsm(3);
    ap_CS_fsm_pp0_stage3 <= ap_CS_fsm(4);
    ap_CS_fsm_pp0_stage4 <= ap_CS_fsm(5);
    ap_CS_fsm_pp0_stage5 <= ap_CS_fsm(6);
    ap_CS_fsm_pp0_stage6 <= ap_CS_fsm(7);
    ap_CS_fsm_pp0_stage7 <= ap_CS_fsm(8);
    ap_CS_fsm_state1 <= ap_CS_fsm(0);
    ap_CS_fsm_state96 <= ap_CS_fsm(9);
        ap_block_pp0_stage0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage0_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage0_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage1_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage1_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage2 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage2_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage2_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage3 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage3_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage3_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage4 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage4_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage4_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage5 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage5_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage5_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage6 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage6_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage6_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage7 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage7_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage7_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state10_pp0_stage0_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state11_pp0_stage1_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state12_pp0_stage2_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state13_pp0_stage3_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state14_pp0_stage4_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state15_pp0_stage5_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state16_pp0_stage6_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state17_pp0_stage7_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state18_pp0_stage0_iter2 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state19_pp0_stage1_iter2 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state20_pp0_stage2_iter2 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state21_pp0_stage3_iter2 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state22_pp0_stage4_iter2 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state23_pp0_stage5_iter2 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state24_pp0_stage6_iter2 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state25_pp0_stage7_iter2 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state26_pp0_stage0_iter3 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state27_pp0_stage1_iter3 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state28_pp0_stage2_iter3 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state29_pp0_stage3_iter3 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state2_pp0_stage0_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state30_pp0_stage4_iter3 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state31_pp0_stage5_iter3 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state32_pp0_stage6_iter3 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state33_pp0_stage7_iter3 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state34_pp0_stage0_iter4 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state35_pp0_stage1_iter4 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state36_pp0_stage2_iter4 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state37_pp0_stage3_iter4 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state38_pp0_stage4_iter4 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state39_pp0_stage5_iter4 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state3_pp0_stage1_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state40_pp0_stage6_iter4 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state41_pp0_stage7_iter4 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state42_pp0_stage0_iter5 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state43_pp0_stage1_iter5 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state44_pp0_stage2_iter5 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state45_pp0_stage3_iter5 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state46_pp0_stage4_iter5 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state47_pp0_stage5_iter5 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state48_pp0_stage6_iter5 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state49_pp0_stage7_iter5 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state4_pp0_stage2_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state50_pp0_stage0_iter6 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state51_pp0_stage1_iter6 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state52_pp0_stage2_iter6 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state53_pp0_stage3_iter6 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state54_pp0_stage4_iter6 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state55_pp0_stage5_iter6 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state56_pp0_stage6_iter6 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state57_pp0_stage7_iter6 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state58_pp0_stage0_iter7 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state59_pp0_stage1_iter7 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state5_pp0_stage3_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state60_pp0_stage2_iter7 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state61_pp0_stage3_iter7 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state62_pp0_stage4_iter7 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state63_pp0_stage5_iter7 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state64_pp0_stage6_iter7 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state65_pp0_stage7_iter7 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state66_pp0_stage0_iter8 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state67_pp0_stage1_iter8 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state68_pp0_stage2_iter8 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state69_pp0_stage3_iter8 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state6_pp0_stage4_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state70_pp0_stage4_iter8 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state71_pp0_stage5_iter8 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state72_pp0_stage6_iter8 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state73_pp0_stage7_iter8 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state74_pp0_stage0_iter9 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state75_pp0_stage1_iter9 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state76_pp0_stage2_iter9 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state77_pp0_stage3_iter9 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state78_pp0_stage4_iter9 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state79_pp0_stage5_iter9 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state7_pp0_stage5_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state80_pp0_stage6_iter9 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state81_pp0_stage7_iter9 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state82_pp0_stage0_iter10 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state83_pp0_stage1_iter10 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state84_pp0_stage2_iter10 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state85_pp0_stage3_iter10 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state86_pp0_stage4_iter10 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state87_pp0_stage5_iter10 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state88_pp0_stage6_iter10 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state89_pp0_stage7_iter10 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state8_pp0_stage6_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state90_pp0_stage0_iter11 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state91_pp0_stage1_iter11 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state92_pp0_stage2_iter11 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state93_pp0_stage3_iter11 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state94_pp0_stage4_iter11 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state95_pp0_stage5_iter11 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state9_pp0_stage7_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_condition_pp0_exit_iter0_state2_assign_proc : process(exitcond_flatten3_fu_777_p2)
    begin
        if ((exitcond_flatten3_fu_777_p2 = ap_const_lv1_1)) then 
            ap_condition_pp0_exit_iter0_state2 <= ap_const_logic_1;
        else 
            ap_condition_pp0_exit_iter0_state2 <= ap_const_logic_0;
        end if; 
    end process;


    ap_done_assign_proc : process(ap_start, ap_CS_fsm_state1, ap_CS_fsm_state96)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state96) or ((ap_start = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_state1)))) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_const_logic_0;
        end if; 
    end process;

    ap_enable_pp0 <= (ap_idle_pp0 xor ap_const_logic_1);

    ap_idle_assign_proc : process(ap_start, ap_CS_fsm_state1)
    begin
        if (((ap_start = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp0_assign_proc : process(ap_enable_reg_pp0_iter7, ap_enable_reg_pp0_iter11, ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter2, ap_enable_reg_pp0_iter3, ap_enable_reg_pp0_iter4, ap_enable_reg_pp0_iter5, ap_enable_reg_pp0_iter6, ap_enable_reg_pp0_iter8, ap_enable_reg_pp0_iter9, ap_enable_reg_pp0_iter10)
    begin
        if (((ap_enable_reg_pp0_iter10 = ap_const_logic_0) and (ap_enable_reg_pp0_iter9 = ap_const_logic_0) and (ap_enable_reg_pp0_iter8 = ap_const_logic_0) and (ap_enable_reg_pp0_iter6 = ap_const_logic_0) and (ap_enable_reg_pp0_iter5 = ap_const_logic_0) and (ap_enable_reg_pp0_iter4 = ap_const_logic_0) and (ap_enable_reg_pp0_iter3 = ap_const_logic_0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_0) and (ap_enable_reg_pp0_iter11 = ap_const_logic_0) and (ap_enable_reg_pp0_iter7 = ap_const_logic_0))) then 
            ap_idle_pp0 <= ap_const_logic_1;
        else 
            ap_idle_pp0 <= ap_const_logic_0;
        end if; 
    end process;


    ap_phi_mux_co_phi_fu_514_p4_assign_proc : process(co_reg_510, exitcond_flatten3_reg_1407_pp0_iter1_reg, tmp_mid2_v_reg_1450, ap_CS_fsm_pp0_stage1, ap_enable_reg_pp0_iter1, ap_block_pp0_stage1)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage1) and (exitcond_flatten3_reg_1407_pp0_iter1_reg = ap_const_lv1_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
            ap_phi_mux_co_phi_fu_514_p4 <= tmp_mid2_v_reg_1450;
        else 
            ap_phi_mux_co_phi_fu_514_p4 <= co_reg_510;
        end if; 
    end process;


    ap_phi_mux_i_phi_fu_537_p4_assign_proc : process(i_reg_533, exitcond_flatten3_reg_1407, ap_CS_fsm_pp0_stage0, tmp_20_mid2_reg_1431, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (exitcond_flatten3_reg_1407 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            ap_phi_mux_i_phi_fu_537_p4 <= tmp_20_mid2_reg_1431;
        else 
            ap_phi_mux_i_phi_fu_537_p4 <= i_reg_533;
        end if; 
    end process;


    ap_phi_mux_indvar_flatten3_phi_fu_503_p4_assign_proc : process(indvar_flatten3_reg_499, exitcond_flatten3_reg_1407, ap_CS_fsm_pp0_stage0, indvar_flatten_next3_reg_1411, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (exitcond_flatten3_reg_1407 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            ap_phi_mux_indvar_flatten3_phi_fu_503_p4 <= indvar_flatten_next3_reg_1411;
        else 
            ap_phi_mux_indvar_flatten3_phi_fu_503_p4 <= indvar_flatten3_reg_499;
        end if; 
    end process;


    ap_phi_mux_indvar_flatten_phi_fu_526_p4_assign_proc : process(indvar_flatten_reg_522, exitcond_flatten3_reg_1407, ap_CS_fsm_pp0_stage0, indvar_flatten_next_reg_1708, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (exitcond_flatten3_reg_1407 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            ap_phi_mux_indvar_flatten_phi_fu_526_p4 <= indvar_flatten_next_reg_1708;
        else 
            ap_phi_mux_indvar_flatten_phi_fu_526_p4 <= indvar_flatten_reg_522;
        end if; 
    end process;


    ap_phi_mux_j_phi_fu_740_p4_assign_proc : process(j_reg_736, exitcond_flatten3_reg_1407, ap_CS_fsm_pp0_stage0, j_10_reg_1703, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (exitcond_flatten3_reg_1407 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            ap_phi_mux_j_phi_fu_740_p4 <= j_10_reg_1703;
        else 
            ap_phi_mux_j_phi_fu_740_p4 <= j_reg_736;
        end if; 
    end process;


    ap_phi_mux_tmp_22_phi_fu_548_p4_assign_proc : process(tmp_22_reg_544, ap_CS_fsm_pp0_stage4, exitcond_flatten3_reg_1407_pp0_iter2_reg, ap_enable_reg_pp0_iter2, tmp_71_reg_2118, ap_block_pp0_stage4)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage4) and (exitcond_flatten3_reg_1407_pp0_iter2_reg = ap_const_lv1_0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4))) then 
            ap_phi_mux_tmp_22_phi_fu_548_p4 <= tmp_71_reg_2118;
        else 
            ap_phi_mux_tmp_22_phi_fu_548_p4 <= tmp_22_reg_544;
        end if; 
    end process;


    ap_phi_mux_tmp_23_phi_fu_560_p4_assign_proc : process(tmp_23_reg_556, ap_CS_fsm_pp0_stage4, exitcond_flatten3_reg_1407_pp0_iter2_reg, ap_enable_reg_pp0_iter2, tmp_69_reg_2112, ap_block_pp0_stage4)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage4) and (exitcond_flatten3_reg_1407_pp0_iter2_reg = ap_const_lv1_0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4))) then 
            ap_phi_mux_tmp_23_phi_fu_560_p4 <= tmp_69_reg_2112;
        else 
            ap_phi_mux_tmp_23_phi_fu_560_p4 <= tmp_23_reg_556;
        end if; 
    end process;


    ap_phi_mux_tmp_24_phi_fu_572_p4_assign_proc : process(tmp_24_reg_568, ap_CS_fsm_pp0_stage4, exitcond_flatten3_reg_1407_pp0_iter2_reg, ap_enable_reg_pp0_iter2, tmp_67_reg_2106, ap_block_pp0_stage4)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage4) and (exitcond_flatten3_reg_1407_pp0_iter2_reg = ap_const_lv1_0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4))) then 
            ap_phi_mux_tmp_24_phi_fu_572_p4 <= tmp_67_reg_2106;
        else 
            ap_phi_mux_tmp_24_phi_fu_572_p4 <= tmp_24_reg_568;
        end if; 
    end process;


    ap_phi_mux_tmp_25_phi_fu_584_p4_assign_proc : process(tmp_25_reg_580, ap_CS_fsm_pp0_stage4, exitcond_flatten3_reg_1407_pp0_iter2_reg, ap_enable_reg_pp0_iter2, tmp_65_reg_2100, ap_block_pp0_stage4)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage4) and (exitcond_flatten3_reg_1407_pp0_iter2_reg = ap_const_lv1_0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4))) then 
            ap_phi_mux_tmp_25_phi_fu_584_p4 <= tmp_65_reg_2100;
        else 
            ap_phi_mux_tmp_25_phi_fu_584_p4 <= tmp_25_reg_580;
        end if; 
    end process;


    ap_phi_mux_tmp_26_phi_fu_596_p4_assign_proc : process(tmp_26_reg_592, ap_CS_fsm_pp0_stage4, exitcond_flatten3_reg_1407_pp0_iter2_reg, ap_enable_reg_pp0_iter2, tmp_63_reg_2089, ap_block_pp0_stage4)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage4) and (exitcond_flatten3_reg_1407_pp0_iter2_reg = ap_const_lv1_0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4))) then 
            ap_phi_mux_tmp_26_phi_fu_596_p4 <= tmp_63_reg_2089;
        else 
            ap_phi_mux_tmp_26_phi_fu_596_p4 <= tmp_26_reg_592;
        end if; 
    end process;


    ap_phi_mux_tmp_27_phi_fu_608_p4_assign_proc : process(tmp_27_reg_604, ap_CS_fsm_pp0_stage4, exitcond_flatten3_reg_1407_pp0_iter2_reg, ap_enable_reg_pp0_iter2, tmp_61_reg_2083, ap_block_pp0_stage4)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage4) and (exitcond_flatten3_reg_1407_pp0_iter2_reg = ap_const_lv1_0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4))) then 
            ap_phi_mux_tmp_27_phi_fu_608_p4 <= tmp_61_reg_2083;
        else 
            ap_phi_mux_tmp_27_phi_fu_608_p4 <= tmp_27_reg_604;
        end if; 
    end process;


    ap_phi_mux_tmp_28_phi_fu_620_p4_assign_proc : process(tmp_28_reg_616, ap_CS_fsm_pp0_stage4, exitcond_flatten3_reg_1407_pp0_iter2_reg, ap_enable_reg_pp0_iter2, tmp_59_reg_2077, ap_block_pp0_stage4)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage4) and (exitcond_flatten3_reg_1407_pp0_iter2_reg = ap_const_lv1_0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4))) then 
            ap_phi_mux_tmp_28_phi_fu_620_p4 <= tmp_59_reg_2077;
        else 
            ap_phi_mux_tmp_28_phi_fu_620_p4 <= tmp_28_reg_616;
        end if; 
    end process;


    ap_phi_mux_tmp_29_phi_fu_632_p4_assign_proc : process(tmp_29_reg_628, ap_CS_fsm_pp0_stage4, exitcond_flatten3_reg_1407_pp0_iter2_reg, tmp_57_reg_2071, ap_enable_reg_pp0_iter2, ap_block_pp0_stage4)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage4) and (exitcond_flatten3_reg_1407_pp0_iter2_reg = ap_const_lv1_0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4))) then 
            ap_phi_mux_tmp_29_phi_fu_632_p4 <= tmp_57_reg_2071;
        else 
            ap_phi_mux_tmp_29_phi_fu_632_p4 <= tmp_29_reg_628;
        end if; 
    end process;


    ap_phi_mux_tmp_30_phi_fu_656_p4_assign_proc : process(tmp_30_reg_652, exitcond_flatten3_reg_1407_pp0_iter2_reg, ap_CS_fsm_pp0_stage3, tmp_53_reg_2059, ap_enable_reg_pp0_iter2, ap_block_pp0_stage3)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage3) and (exitcond_flatten3_reg_1407_pp0_iter2_reg = ap_const_lv1_0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3))) then 
            ap_phi_mux_tmp_30_phi_fu_656_p4 <= tmp_53_reg_2059;
        else 
            ap_phi_mux_tmp_30_phi_fu_656_p4 <= tmp_30_reg_652;
        end if; 
    end process;


    ap_phi_mux_tmp_31_phi_fu_668_p4_assign_proc : process(tmp_31_reg_664, exitcond_flatten3_reg_1407_pp0_iter2_reg, ap_CS_fsm_pp0_stage2, tmp_51_reg_2043, ap_enable_reg_pp0_iter2, ap_block_pp0_stage2)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage2) and (exitcond_flatten3_reg_1407_pp0_iter2_reg = ap_const_lv1_0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then 
            ap_phi_mux_tmp_31_phi_fu_668_p4 <= tmp_51_reg_2043;
        else 
            ap_phi_mux_tmp_31_phi_fu_668_p4 <= tmp_31_reg_664;
        end if; 
    end process;


    ap_phi_mux_tmp_32_phi_fu_680_p4_assign_proc : process(tmp_32_reg_676, exitcond_flatten3_reg_1407_pp0_iter2_reg, ap_CS_fsm_pp0_stage2, tmp_49_reg_2037, ap_enable_reg_pp0_iter2, ap_block_pp0_stage2)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage2) and (exitcond_flatten3_reg_1407_pp0_iter2_reg = ap_const_lv1_0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then 
            ap_phi_mux_tmp_32_phi_fu_680_p4 <= tmp_49_reg_2037;
        else 
            ap_phi_mux_tmp_32_phi_fu_680_p4 <= tmp_32_reg_676;
        end if; 
    end process;


    ap_phi_mux_tmp_33_phi_fu_692_p4_assign_proc : process(tmp_33_reg_688, exitcond_flatten3_reg_1407_pp0_iter2_reg, ap_CS_fsm_pp0_stage1, tmp_47_reg_2021, ap_enable_reg_pp0_iter2, ap_block_pp0_stage1)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage1) and (exitcond_flatten3_reg_1407_pp0_iter2_reg = ap_const_lv1_0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
            ap_phi_mux_tmp_33_phi_fu_692_p4 <= tmp_47_reg_2021;
        else 
            ap_phi_mux_tmp_33_phi_fu_692_p4 <= tmp_33_reg_688;
        end if; 
    end process;


    ap_phi_mux_tmp_34_phi_fu_704_p4_assign_proc : process(tmp_34_reg_700, exitcond_flatten3_reg_1407_pp0_iter2_reg, ap_CS_fsm_pp0_stage1, tmp_45_reg_2015, ap_enable_reg_pp0_iter2, ap_block_pp0_stage1)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage1) and (exitcond_flatten3_reg_1407_pp0_iter2_reg = ap_const_lv1_0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
            ap_phi_mux_tmp_34_phi_fu_704_p4 <= tmp_45_reg_2015;
        else 
            ap_phi_mux_tmp_34_phi_fu_704_p4 <= tmp_34_reg_700;
        end if; 
    end process;


    ap_phi_mux_tmp_35_phi_fu_716_p4_assign_proc : process(tmp_35_reg_712, exitcond_flatten3_reg_1407_pp0_iter1_reg, ap_CS_fsm_pp0_stage5, ap_enable_reg_pp0_iter1, tmp_43_reg_1999, ap_block_pp0_stage5)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage5) and (exitcond_flatten3_reg_1407_pp0_iter1_reg = ap_const_lv1_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage5))) then 
            ap_phi_mux_tmp_35_phi_fu_716_p4 <= tmp_43_reg_1999;
        else 
            ap_phi_mux_tmp_35_phi_fu_716_p4 <= tmp_35_reg_712;
        end if; 
    end process;


    ap_phi_mux_tmp_36_phi_fu_728_p4_assign_proc : process(tmp_36_reg_724, exitcond_flatten3_reg_1407_pp0_iter1_reg, ap_CS_fsm_pp0_stage5, ap_enable_reg_pp0_iter1, tmp_41_reg_1993, ap_block_pp0_stage5)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage5) and (exitcond_flatten3_reg_1407_pp0_iter1_reg = ap_const_lv1_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage5))) then 
            ap_phi_mux_tmp_36_phi_fu_728_p4 <= tmp_41_reg_1993;
        else 
            ap_phi_mux_tmp_36_phi_fu_728_p4 <= tmp_36_reg_724;
        end if; 
    end process;


    ap_phi_mux_tmp_s_phi_fu_644_p4_assign_proc : process(tmp_s_reg_640, exitcond_flatten3_reg_1407_pp0_iter2_reg, ap_CS_fsm_pp0_stage3, tmp_55_reg_2065, ap_enable_reg_pp0_iter2, ap_block_pp0_stage3)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage3) and (exitcond_flatten3_reg_1407_pp0_iter2_reg = ap_const_lv1_0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3))) then 
            ap_phi_mux_tmp_s_phi_fu_644_p4 <= tmp_55_reg_2065;
        else 
            ap_phi_mux_tmp_s_phi_fu_644_p4 <= tmp_s_reg_640;
        end if; 
    end process;


    ap_ready_assign_proc : process(ap_CS_fsm_state96)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state96)) then 
            ap_ready <= ap_const_logic_1;
        else 
            ap_ready <= ap_const_logic_0;
        end if; 
    end process;

    bias_address0 <= tmp_mid2_fu_1403_p1(7 - 1 downto 0);

    bias_ce0_assign_proc : process(ap_CS_fsm_pp0_stage6, ap_block_pp0_stage6_11001, ap_enable_reg_pp0_iter10)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage6_11001) and (ap_enable_reg_pp0_iter10 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage6))) then 
            bias_ce0 <= ap_const_logic_1;
        else 
            bias_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    co_2_fu_893_p2 <= std_logic_vector(unsigned(ap_phi_mux_co_phi_fu_514_p4) + unsigned(ap_const_lv7_1));
    exitcond_flatten3_fu_777_p2 <= "1" when (ap_phi_mux_indvar_flatten3_phi_fu_503_p4 = ap_const_lv12_BB8) else "0";
    exitcond_flatten_fu_789_p2 <= "1" when (ap_phi_mux_indvar_flatten_phi_fu_526_p4 = ap_const_lv6_19) else "0";
    exitcond_fu_821_p2 <= "1" when (ap_phi_mux_j_phi_fu_740_p4 = ap_const_lv3_5) else "0";
    exitcond_mid_fu_827_p2 <= (not_exitcond_flatten_fu_803_p2 and exitcond_fu_821_p2);

    grp_fu_747_p0_assign_proc : process(ap_CS_fsm_pp0_stage6, ap_CS_fsm_pp0_stage4, ap_CS_fsm_pp0_stage0, ap_CS_fsm_pp0_stage1, ap_CS_fsm_pp0_stage2, ap_CS_fsm_pp0_stage3, ap_CS_fsm_pp0_stage5, p_15_reg_1658, ap_CS_fsm_pp0_stage7, ap_enable_reg_pp0_iter1, p_13_fu_1305_p3, p_11_fu_1321_p3, p_9_fu_1337_p3, p_1_reg_1958, p_3_reg_1968, p_5_reg_1978, p_7_fu_1395_p3, ap_block_pp0_stage0, ap_block_pp0_stage1, ap_block_pp0_stage4, ap_block_pp0_stage3, ap_block_pp0_stage2, ap_block_pp0_stage5, ap_block_pp0_stage6, ap_block_pp0_stage7)
    begin
        if ((ap_enable_reg_pp0_iter1 = ap_const_logic_1)) then
            if (((ap_const_boolean_0 = ap_block_pp0_stage7) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage7))) then 
                grp_fu_747_p0 <= p_1_reg_1958;
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage6) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage6))) then 
                grp_fu_747_p0 <= p_3_reg_1968;
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage5) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage5))) then 
                grp_fu_747_p0 <= p_5_reg_1978;
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage4) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4))) then 
                grp_fu_747_p0 <= p_7_fu_1395_p3;
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage3) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3))) then 
                grp_fu_747_p0 <= p_9_fu_1337_p3;
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage2) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then 
                grp_fu_747_p0 <= p_11_fu_1321_p3;
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
                grp_fu_747_p0 <= p_13_fu_1305_p3;
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                grp_fu_747_p0 <= p_15_reg_1658;
            else 
                grp_fu_747_p0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
            end if;
        else 
            grp_fu_747_p0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_747_p1_assign_proc : process(ap_CS_fsm_pp0_stage6, ap_CS_fsm_pp0_stage4, ap_CS_fsm_pp0_stage0, ap_CS_fsm_pp0_stage1, ap_CS_fsm_pp0_stage2, ap_CS_fsm_pp0_stage3, ap_CS_fsm_pp0_stage5, ap_CS_fsm_pp0_stage7, tmp_40_reg_1773, tmp_44_reg_1823, ap_enable_reg_pp0_iter1, tmp_48_reg_1873, tmp_52_reg_1913, tmp_56_reg_1943, tmp_60_reg_2005, tmp_64_reg_2027, tmp_68_reg_2049, ap_block_pp0_stage0, ap_block_pp0_stage1, ap_block_pp0_stage4, ap_block_pp0_stage3, ap_block_pp0_stage2, ap_block_pp0_stage5, ap_block_pp0_stage6, ap_block_pp0_stage7)
    begin
        if ((ap_enable_reg_pp0_iter1 = ap_const_logic_1)) then
            if (((ap_const_boolean_0 = ap_block_pp0_stage7) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage7))) then 
                grp_fu_747_p1 <= tmp_68_reg_2049;
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage6) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage6))) then 
                grp_fu_747_p1 <= tmp_64_reg_2027;
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage5) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage5))) then 
                grp_fu_747_p1 <= tmp_60_reg_2005;
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage4) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4))) then 
                grp_fu_747_p1 <= tmp_56_reg_1943;
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage3) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3))) then 
                grp_fu_747_p1 <= tmp_52_reg_1913;
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage2) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then 
                grp_fu_747_p1 <= tmp_48_reg_1873;
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
                grp_fu_747_p1 <= tmp_44_reg_1823;
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                grp_fu_747_p1 <= tmp_40_reg_1773;
            else 
                grp_fu_747_p1 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
            end if;
        else 
            grp_fu_747_p1 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_751_p0_assign_proc : process(ap_CS_fsm_pp0_stage6, ap_CS_fsm_pp0_stage4, ap_CS_fsm_pp0_stage0, ap_CS_fsm_pp0_stage1, ap_CS_fsm_pp0_stage2, ap_CS_fsm_pp0_stage3, ap_CS_fsm_pp0_stage5, p_14_reg_1653, ap_CS_fsm_pp0_stage7, ap_enable_reg_pp0_iter1, p_12_fu_1297_p3, p_10_fu_1313_p3, p_8_fu_1329_p3, p_s_reg_1953, p_2_reg_1963, p_4_reg_1973, p_6_fu_1387_p3, ap_block_pp0_stage0, ap_block_pp0_stage1, ap_block_pp0_stage4, ap_block_pp0_stage3, ap_block_pp0_stage2, ap_block_pp0_stage5, ap_block_pp0_stage6, ap_block_pp0_stage7)
    begin
        if ((ap_enable_reg_pp0_iter1 = ap_const_logic_1)) then
            if (((ap_const_boolean_0 = ap_block_pp0_stage7) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage7))) then 
                grp_fu_751_p0 <= p_s_reg_1953;
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage6) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage6))) then 
                grp_fu_751_p0 <= p_2_reg_1963;
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage5) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage5))) then 
                grp_fu_751_p0 <= p_4_reg_1973;
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage4) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4))) then 
                grp_fu_751_p0 <= p_6_fu_1387_p3;
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage3) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3))) then 
                grp_fu_751_p0 <= p_8_fu_1329_p3;
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage2) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then 
                grp_fu_751_p0 <= p_10_fu_1313_p3;
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
                grp_fu_751_p0 <= p_12_fu_1297_p3;
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                grp_fu_751_p0 <= p_14_reg_1653;
            else 
                grp_fu_751_p0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
            end if;
        else 
            grp_fu_751_p0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_751_p1_assign_proc : process(ap_CS_fsm_pp0_stage6, ap_CS_fsm_pp0_stage4, ap_CS_fsm_pp0_stage0, ap_CS_fsm_pp0_stage1, ap_CS_fsm_pp0_stage2, ap_CS_fsm_pp0_stage3, ap_CS_fsm_pp0_stage5, ap_CS_fsm_pp0_stage7, tmp_42_reg_1778, ap_enable_reg_pp0_iter1, tmp_46_reg_1828, tmp_50_reg_1878, tmp_54_reg_1918, tmp_58_reg_1948, tmp_62_reg_2010, tmp_66_reg_2032, tmp_70_reg_2054, ap_block_pp0_stage0, ap_block_pp0_stage1, ap_block_pp0_stage4, ap_block_pp0_stage3, ap_block_pp0_stage2, ap_block_pp0_stage5, ap_block_pp0_stage6, ap_block_pp0_stage7)
    begin
        if ((ap_enable_reg_pp0_iter1 = ap_const_logic_1)) then
            if (((ap_const_boolean_0 = ap_block_pp0_stage7) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage7))) then 
                grp_fu_751_p1 <= tmp_70_reg_2054;
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage6) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage6))) then 
                grp_fu_751_p1 <= tmp_66_reg_2032;
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage5) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage5))) then 
                grp_fu_751_p1 <= tmp_62_reg_2010;
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage4) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4))) then 
                grp_fu_751_p1 <= tmp_58_reg_1948;
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage3) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3))) then 
                grp_fu_751_p1 <= tmp_54_reg_1918;
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage2) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then 
                grp_fu_751_p1 <= tmp_50_reg_1878;
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
                grp_fu_751_p1 <= tmp_46_reg_1828;
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                grp_fu_751_p1 <= tmp_42_reg_1778;
            else 
                grp_fu_751_p1 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
            end if;
        else 
            grp_fu_751_p1 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_755_p0_assign_proc : process(ap_CS_fsm_pp0_stage6, ap_CS_fsm_pp0_stage4, ap_CS_fsm_pp0_stage0, ap_CS_fsm_pp0_stage1, ap_CS_fsm_pp0_stage2, ap_CS_fsm_pp0_stage3, ap_CS_fsm_pp0_stage5, ap_CS_fsm_pp0_stage7, ap_enable_reg_pp0_iter1, tmp_41_reg_1993, ap_enable_reg_pp0_iter2, tmp_73_reg_2095, tmp_74_reg_2124, tmp_75_reg_2129, ap_enable_reg_pp0_iter3, tmp_76_reg_2134, ap_enable_reg_pp0_iter4, tmp_77_reg_2139, tmp_78_reg_2144, ap_enable_reg_pp0_iter5, tmp_79_reg_2149, ap_enable_reg_pp0_iter6, ap_block_pp0_stage0, ap_block_pp0_stage1, ap_block_pp0_stage4, ap_block_pp0_stage3, ap_block_pp0_stage2, ap_block_pp0_stage5, ap_block_pp0_stage6, ap_block_pp0_stage7)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter6 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            grp_fu_755_p0 <= tmp_79_reg_2149;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage3) and (ap_enable_reg_pp0_iter5 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3))) then 
            grp_fu_755_p0 <= tmp_78_reg_2144;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage6) and (ap_enable_reg_pp0_iter4 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage6))) then 
            grp_fu_755_p0 <= tmp_77_reg_2139;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_enable_reg_pp0_iter4 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
            grp_fu_755_p0 <= tmp_76_reg_2134;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage4) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4))) then 
            grp_fu_755_p0 <= tmp_75_reg_2129;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage7) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage7))) then 
            grp_fu_755_p0 <= tmp_74_reg_2124;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage2) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then 
            grp_fu_755_p0 <= tmp_73_reg_2095;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage5) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage5))) then 
            grp_fu_755_p0 <= tmp_41_reg_1993;
        else 
            grp_fu_755_p0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_755_p1_assign_proc : process(ap_CS_fsm_pp0_stage6, ap_CS_fsm_pp0_stage4, ap_CS_fsm_pp0_stage0, ap_CS_fsm_pp0_stage1, ap_CS_fsm_pp0_stage2, ap_CS_fsm_pp0_stage3, ap_CS_fsm_pp0_stage5, ap_CS_fsm_pp0_stage7, ap_enable_reg_pp0_iter1, tmp_43_reg_1999, tmp_45_reg_2015, tmp_47_reg_2021_pp0_iter2_reg, tmp_49_reg_2037_pp0_iter2_reg, tmp_51_reg_2043_pp0_iter3_reg, tmp_53_reg_2059_pp0_iter3_reg, tmp_55_reg_2065_pp0_iter4_reg, ap_enable_reg_pp0_iter2, tmp_57_reg_2071_pp0_iter5_reg, ap_enable_reg_pp0_iter3, ap_enable_reg_pp0_iter4, ap_enable_reg_pp0_iter5, ap_enable_reg_pp0_iter6, ap_block_pp0_stage0, ap_block_pp0_stage1, ap_block_pp0_stage4, ap_block_pp0_stage3, ap_block_pp0_stage2, ap_block_pp0_stage5, ap_block_pp0_stage6, ap_block_pp0_stage7)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter6 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            grp_fu_755_p1 <= tmp_57_reg_2071_pp0_iter5_reg;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage3) and (ap_enable_reg_pp0_iter5 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3))) then 
            grp_fu_755_p1 <= tmp_55_reg_2065_pp0_iter4_reg;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage6) and (ap_enable_reg_pp0_iter4 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage6))) then 
            grp_fu_755_p1 <= tmp_53_reg_2059_pp0_iter3_reg;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_enable_reg_pp0_iter4 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
            grp_fu_755_p1 <= tmp_51_reg_2043_pp0_iter3_reg;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage4) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4))) then 
            grp_fu_755_p1 <= tmp_49_reg_2037_pp0_iter2_reg;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage7) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage7))) then 
            grp_fu_755_p1 <= tmp_47_reg_2021_pp0_iter2_reg;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage2) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then 
            grp_fu_755_p1 <= tmp_45_reg_2015;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage5) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage5))) then 
            grp_fu_755_p1 <= tmp_43_reg_1999;
        else 
            grp_fu_755_p1 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_759_p0_assign_proc : process(reg_771, ap_CS_fsm_pp0_stage6, ap_enable_reg_pp0_iter7, ap_CS_fsm_pp0_stage4, ap_enable_reg_pp0_iter11, ap_CS_fsm_pp0_stage0, ap_CS_fsm_pp0_stage1, ap_CS_fsm_pp0_stage2, ap_CS_fsm_pp0_stage3, ap_CS_fsm_pp0_stage5, ap_CS_fsm_pp0_stage7, tmp_80_reg_2154, ap_enable_reg_pp0_iter6, tmp_81_reg_2159, tmp_83_reg_2164, ap_enable_reg_pp0_iter8, tmp_84_reg_2169, ap_enable_reg_pp0_iter9, tmp_85_reg_2174, tmp_86_reg_2179, ap_enable_reg_pp0_iter10, tmp_87_reg_2194, ap_block_pp0_stage0, ap_block_pp0_stage1, ap_block_pp0_stage4, ap_block_pp0_stage3, ap_block_pp0_stage2, ap_block_pp0_stage5, ap_block_pp0_stage6, ap_block_pp0_stage7)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter11 = ap_const_logic_1))) then 
            grp_fu_759_p0 <= tmp_87_reg_2194;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage3) and (ap_enable_reg_pp0_iter10 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3))) then 
            grp_fu_759_p0 <= tmp_86_reg_2179;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage6) and (ap_enable_reg_pp0_iter9 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage6))) then 
            grp_fu_759_p0 <= tmp_85_reg_2174;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_enable_reg_pp0_iter9 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
            grp_fu_759_p0 <= tmp_84_reg_2169;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage4) and (ap_enable_reg_pp0_iter8 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4))) then 
            grp_fu_759_p0 <= tmp_83_reg_2164;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage7) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage7) and (ap_enable_reg_pp0_iter7 = ap_const_logic_1))) then 
            grp_fu_759_p0 <= reg_771;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage2) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_enable_reg_pp0_iter7 = ap_const_logic_1))) then 
            grp_fu_759_p0 <= tmp_81_reg_2159;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage5) and (ap_enable_reg_pp0_iter6 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage5))) then 
            grp_fu_759_p0 <= tmp_80_reg_2154;
        else 
            grp_fu_759_p0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_759_p1_assign_proc : process(ap_CS_fsm_pp0_stage6, ap_enable_reg_pp0_iter7, ap_CS_fsm_pp0_stage4, ap_enable_reg_pp0_iter11, ap_CS_fsm_pp0_stage0, ap_CS_fsm_pp0_stage1, ap_CS_fsm_pp0_stage2, ap_CS_fsm_pp0_stage3, ap_CS_fsm_pp0_stage5, ap_CS_fsm_pp0_stage7, tmp_59_reg_2077_pp0_iter6_reg, tmp_61_reg_2083_pp0_iter7_reg, tmp_63_reg_2089_pp0_iter7_reg, tmp_65_reg_2100_pp0_iter8_reg, tmp_67_reg_2106_pp0_iter8_reg, tmp_69_reg_2112_pp0_iter9_reg, tmp_71_reg_2118_pp0_iter9_reg, ap_enable_reg_pp0_iter6, ap_enable_reg_pp0_iter8, ap_enable_reg_pp0_iter9, ap_enable_reg_pp0_iter10, bias_load_reg_2199, ap_block_pp0_stage0, ap_block_pp0_stage1, ap_block_pp0_stage4, ap_block_pp0_stage3, ap_block_pp0_stage2, ap_block_pp0_stage5, ap_block_pp0_stage6, ap_block_pp0_stage7)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter11 = ap_const_logic_1))) then 
            grp_fu_759_p1 <= bias_load_reg_2199;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage3) and (ap_enable_reg_pp0_iter10 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3))) then 
            grp_fu_759_p1 <= tmp_71_reg_2118_pp0_iter9_reg;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage6) and (ap_enable_reg_pp0_iter9 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage6))) then 
            grp_fu_759_p1 <= tmp_69_reg_2112_pp0_iter9_reg;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_enable_reg_pp0_iter9 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
            grp_fu_759_p1 <= tmp_67_reg_2106_pp0_iter8_reg;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage4) and (ap_enable_reg_pp0_iter8 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4))) then 
            grp_fu_759_p1 <= tmp_65_reg_2100_pp0_iter8_reg;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage7) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage7) and (ap_enable_reg_pp0_iter7 = ap_const_logic_1))) then 
            grp_fu_759_p1 <= tmp_63_reg_2089_pp0_iter7_reg;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage2) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_enable_reg_pp0_iter7 = ap_const_logic_1))) then 
            grp_fu_759_p1 <= tmp_61_reg_2083_pp0_iter7_reg;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage5) and (ap_enable_reg_pp0_iter6 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage5))) then 
            grp_fu_759_p1 <= tmp_59_reg_2077_pp0_iter6_reg;
        else 
            grp_fu_759_p1 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_763_p0_assign_proc : process(ap_CS_fsm_pp0_stage6, ap_CS_fsm_pp0_stage4, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage1, ap_CS_fsm_pp0_stage2, ap_CS_fsm_pp0_stage3, weights_0_load_reg_1575, weights_2_load_reg_1615, ap_CS_fsm_pp0_stage5, weights_4_load_reg_1683, weights_6_load_reg_1733, ap_CS_fsm_pp0_stage7, weights_8_load_reg_1783, ap_enable_reg_pp0_iter1, weights_10_load_reg_1833, weights_12_load_reg_1883, weights_14_load_reg_1923, ap_block_pp0_stage0, ap_block_pp0_stage1, ap_block_pp0_stage4, ap_block_pp0_stage3, ap_block_pp0_stage2, ap_block_pp0_stage5, ap_block_pp0_stage6, ap_block_pp0_stage7)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage3) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3))) then 
            grp_fu_763_p0 <= weights_14_load_reg_1923;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage2) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then 
            grp_fu_763_p0 <= weights_12_load_reg_1883;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
            grp_fu_763_p0 <= weights_10_load_reg_1833;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            grp_fu_763_p0 <= weights_8_load_reg_1783;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage7) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage7) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1))) then 
            grp_fu_763_p0 <= weights_6_load_reg_1733;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage6) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage6))) then 
            grp_fu_763_p0 <= weights_4_load_reg_1683;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage5) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage5) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1))) then 
            grp_fu_763_p0 <= weights_2_load_reg_1615;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage4) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4))) then 
            grp_fu_763_p0 <= weights_0_load_reg_1575;
        else 
            grp_fu_763_p0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_763_p1_assign_proc : process(ap_CS_fsm_pp0_stage6, ap_CS_fsm_pp0_stage4, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage1, ap_CS_fsm_pp0_stage2, input_load_reg_1545, ap_CS_fsm_pp0_stage3, input_load_2_reg_1585, input_load_4_reg_1625, ap_CS_fsm_pp0_stage5, input_load_6_reg_1693, input_load_8_reg_1743, ap_CS_fsm_pp0_stage7, input_load_10_reg_1793, ap_enable_reg_pp0_iter1, input_load_12_reg_1843, input_load_14_reg_1893, ap_block_pp0_stage0, ap_block_pp0_stage1, ap_block_pp0_stage4, ap_block_pp0_stage3, ap_block_pp0_stage2, ap_block_pp0_stage5, ap_block_pp0_stage6, ap_block_pp0_stage7)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage3) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3))) then 
            grp_fu_763_p1 <= input_load_14_reg_1893;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage2) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then 
            grp_fu_763_p1 <= input_load_12_reg_1843;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
            grp_fu_763_p1 <= input_load_10_reg_1793;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            grp_fu_763_p1 <= input_load_8_reg_1743;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage7) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage7) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1))) then 
            grp_fu_763_p1 <= input_load_6_reg_1693;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage6) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage6))) then 
            grp_fu_763_p1 <= input_load_4_reg_1625;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage5) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage5) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1))) then 
            grp_fu_763_p1 <= input_load_2_reg_1585;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage4) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4))) then 
            grp_fu_763_p1 <= input_load_reg_1545;
        else 
            grp_fu_763_p1 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_767_p0_assign_proc : process(ap_CS_fsm_pp0_stage6, ap_CS_fsm_pp0_stage4, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage1, ap_CS_fsm_pp0_stage2, ap_CS_fsm_pp0_stage3, weights_1_load_reg_1580, weights_3_load_reg_1620, ap_CS_fsm_pp0_stage5, weights_5_load_reg_1688, weights_7_load_reg_1738, ap_CS_fsm_pp0_stage7, weights_9_load_reg_1788, ap_enable_reg_pp0_iter1, weights_11_load_reg_1838, weights_13_load_reg_1888, weights_15_load_reg_1928, ap_block_pp0_stage0, ap_block_pp0_stage1, ap_block_pp0_stage4, ap_block_pp0_stage3, ap_block_pp0_stage2, ap_block_pp0_stage5, ap_block_pp0_stage6, ap_block_pp0_stage7)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage3) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3))) then 
            grp_fu_767_p0 <= weights_15_load_reg_1928;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage2) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then 
            grp_fu_767_p0 <= weights_13_load_reg_1888;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
            grp_fu_767_p0 <= weights_11_load_reg_1838;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            grp_fu_767_p0 <= weights_9_load_reg_1788;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage7) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage7) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1))) then 
            grp_fu_767_p0 <= weights_7_load_reg_1738;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage6) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage6))) then 
            grp_fu_767_p0 <= weights_5_load_reg_1688;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage5) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage5) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1))) then 
            grp_fu_767_p0 <= weights_3_load_reg_1620;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage4) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4))) then 
            grp_fu_767_p0 <= weights_1_load_reg_1580;
        else 
            grp_fu_767_p0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_767_p1_assign_proc : process(ap_CS_fsm_pp0_stage6, ap_CS_fsm_pp0_stage4, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage1, ap_CS_fsm_pp0_stage2, input_load_1_reg_1550, ap_CS_fsm_pp0_stage3, input_load_3_reg_1590, input_load_5_reg_1630, ap_CS_fsm_pp0_stage5, input_load_7_reg_1698, input_load_9_reg_1748, ap_CS_fsm_pp0_stage7, input_load_11_reg_1798, ap_enable_reg_pp0_iter1, input_load_13_reg_1848, input_load_15_reg_1898, ap_block_pp0_stage0, ap_block_pp0_stage1, ap_block_pp0_stage4, ap_block_pp0_stage3, ap_block_pp0_stage2, ap_block_pp0_stage5, ap_block_pp0_stage6, ap_block_pp0_stage7)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage3) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3))) then 
            grp_fu_767_p1 <= input_load_15_reg_1898;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage2) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then 
            grp_fu_767_p1 <= input_load_13_reg_1848;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
            grp_fu_767_p1 <= input_load_11_reg_1798;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            grp_fu_767_p1 <= input_load_9_reg_1748;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage7) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage7) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1))) then 
            grp_fu_767_p1 <= input_load_7_reg_1698;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage6) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage6))) then 
            grp_fu_767_p1 <= input_load_5_reg_1630;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage5) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage5) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1))) then 
            grp_fu_767_p1 <= input_load_3_reg_1590;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage4) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4))) then 
            grp_fu_767_p1 <= input_load_1_reg_1550;
        else 
            grp_fu_767_p1 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;

    i_15_fu_833_p2 <= std_logic_vector(unsigned(i_mid_fu_795_p3) + unsigned(ap_const_lv3_1));
    i_mid_fu_795_p3 <= 
        ap_const_lv3_0 when (exitcond_flatten_fu_789_p2(0) = '1') else 
        ap_phi_mux_i_phi_fu_537_p4;
    indvar_flatten_next3_fu_783_p2 <= std_logic_vector(unsigned(ap_phi_mux_indvar_flatten3_phi_fu_503_p4) + unsigned(ap_const_lv12_1));
    indvar_flatten_next_fu_1201_p3 <= 
        ap_const_lv6_1 when (exitcond_flatten_reg_1416(0) = '1') else 
        indvar_flatten_op_reg_1445;
    indvar_flatten_op_fu_887_p2 <= std_logic_vector(unsigned(ap_phi_mux_indvar_flatten_phi_fu_526_p4) + unsigned(ap_const_lv6_1));

    input_r_address0_assign_proc : process(ap_CS_fsm_pp0_stage6, ap_CS_fsm_pp0_stage4, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage1, ap_CS_fsm_pp0_stage2, ap_CS_fsm_pp0_stage3, ap_CS_fsm_pp0_stage5, ap_CS_fsm_pp0_stage7, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0, ap_block_pp0_stage1, ap_block_pp0_stage4, ap_block_pp0_stage3, ap_block_pp0_stage2, ap_block_pp0_stage5, tmp_204_cast_fu_969_p1, tmp_206_cast_fu_1023_p1, tmp_208_cast_fu_1065_p1, tmp_210_cast_fu_1095_p1, tmp_212_cast_fu_1181_p1, tmp_214_cast_fu_1222_p1, ap_block_pp0_stage6, tmp_216_cast_fu_1252_p1, ap_block_pp0_stage7, tmp_218_cast_fu_1282_p1)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            input_r_address0 <= tmp_218_cast_fu_1282_p1(9 - 1 downto 0);
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage7) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage7) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1))) then 
            input_r_address0 <= tmp_216_cast_fu_1252_p1(9 - 1 downto 0);
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage6) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage6))) then 
            input_r_address0 <= tmp_214_cast_fu_1222_p1(9 - 1 downto 0);
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage5) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage5) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1))) then 
            input_r_address0 <= tmp_212_cast_fu_1181_p1(9 - 1 downto 0);
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage4) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4))) then 
            input_r_address0 <= tmp_210_cast_fu_1095_p1(9 - 1 downto 0);
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage3) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1))) then 
            input_r_address0 <= tmp_208_cast_fu_1065_p1(9 - 1 downto 0);
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage2) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1))) then 
            input_r_address0 <= tmp_206_cast_fu_1023_p1(9 - 1 downto 0);
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1))) then 
            input_r_address0 <= tmp_204_cast_fu_969_p1(9 - 1 downto 0);
        else 
            input_r_address0 <= "XXXXXXXXX";
        end if; 
    end process;


    input_r_address1_assign_proc : process(ap_CS_fsm_pp0_stage6, ap_CS_fsm_pp0_stage4, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage1, ap_CS_fsm_pp0_stage2, ap_CS_fsm_pp0_stage3, ap_CS_fsm_pp0_stage5, ap_CS_fsm_pp0_stage7, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0, ap_block_pp0_stage1, ap_block_pp0_stage4, ap_block_pp0_stage3, ap_block_pp0_stage2, ap_block_pp0_stage5, tmp_205_cast_fu_980_p1, tmp_207_cast_fu_1033_p1, tmp_209_cast_fu_1075_p1, tmp_211_cast_fu_1105_p1, tmp_213_cast_fu_1191_p1, ap_block_pp0_stage6, tmp_215_cast_fu_1232_p1, ap_block_pp0_stage7, tmp_217_cast_fu_1262_p1, tmp_219_cast_fu_1292_p1)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            input_r_address1 <= tmp_219_cast_fu_1292_p1(9 - 1 downto 0);
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage7) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage7) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1))) then 
            input_r_address1 <= tmp_217_cast_fu_1262_p1(9 - 1 downto 0);
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage6) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage6))) then 
            input_r_address1 <= tmp_215_cast_fu_1232_p1(9 - 1 downto 0);
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage5) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage5) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1))) then 
            input_r_address1 <= tmp_213_cast_fu_1191_p1(9 - 1 downto 0);
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage4) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4))) then 
            input_r_address1 <= tmp_211_cast_fu_1105_p1(9 - 1 downto 0);
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage3) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1))) then 
            input_r_address1 <= tmp_209_cast_fu_1075_p1(9 - 1 downto 0);
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage2) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1))) then 
            input_r_address1 <= tmp_207_cast_fu_1033_p1(9 - 1 downto 0);
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1))) then 
            input_r_address1 <= tmp_205_cast_fu_980_p1(9 - 1 downto 0);
        else 
            input_r_address1 <= "XXXXXXXXX";
        end if; 
    end process;


    input_r_ce0_assign_proc : process(ap_CS_fsm_pp0_stage6, ap_block_pp0_stage6_11001, ap_CS_fsm_pp0_stage4, ap_block_pp0_stage4_11001, ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1_11001, ap_CS_fsm_pp0_stage2, ap_block_pp0_stage2_11001, ap_CS_fsm_pp0_stage3, ap_block_pp0_stage3_11001, ap_CS_fsm_pp0_stage5, ap_block_pp0_stage5_11001, ap_CS_fsm_pp0_stage7, ap_block_pp0_stage7_11001, ap_enable_reg_pp0_iter1)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage7_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage7) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1)) or ((ap_const_boolean_0 = ap_block_pp0_stage5_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage5) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1)) or ((ap_const_boolean_0 = ap_block_pp0_stage3_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1)) or ((ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1)) or ((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)) or ((ap_const_boolean_0 = ap_block_pp0_stage4_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4)) or ((ap_const_boolean_0 = ap_block_pp0_stage6_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage6)))) then 
            input_r_ce0 <= ap_const_logic_1;
        else 
            input_r_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    input_r_ce1_assign_proc : process(ap_CS_fsm_pp0_stage6, ap_block_pp0_stage6_11001, ap_CS_fsm_pp0_stage4, ap_block_pp0_stage4_11001, ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1_11001, ap_CS_fsm_pp0_stage2, ap_block_pp0_stage2_11001, ap_CS_fsm_pp0_stage3, ap_block_pp0_stage3_11001, ap_CS_fsm_pp0_stage5, ap_block_pp0_stage5_11001, ap_CS_fsm_pp0_stage7, ap_block_pp0_stage7_11001, ap_enable_reg_pp0_iter1)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage7_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage7) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1)) or ((ap_const_boolean_0 = ap_block_pp0_stage5_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage5) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1)) or ((ap_const_boolean_0 = ap_block_pp0_stage3_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1)) or ((ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1)) or ((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)) or ((ap_const_boolean_0 = ap_block_pp0_stage4_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4)) or ((ap_const_boolean_0 = ap_block_pp0_stage6_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage6)))) then 
            input_r_ce1 <= ap_const_logic_1;
        else 
            input_r_ce1 <= ap_const_logic_0;
        end if; 
    end process;

    j_10_fu_1196_p2 <= std_logic_vector(unsigned(j_mid2_reg_1423) + unsigned(ap_const_lv3_1));
    j_mid2_fu_845_p3 <= 
        ap_const_lv3_0 when (tmp_129_fu_839_p2(0) = '1') else 
        ap_phi_mux_j_phi_fu_740_p4;
    not_exitcond_flatten_fu_803_p2 <= (exitcond_flatten_fu_789_p2 xor ap_const_lv1_1);
    or_cond3_fu_881_p2 <= (tmp_72_fu_875_p2 and tmp_21_mid2_fu_867_p3);
    output_0_0_address0 <= tmp_mid2_reg_2184(7 - 1 downto 0);

    output_0_0_ce0_assign_proc : process(ap_enable_reg_pp0_iter11, ap_CS_fsm_pp0_stage5, ap_block_pp0_stage5_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage5_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage5) and (ap_enable_reg_pp0_iter11 = ap_const_logic_1))) then 
            output_0_0_ce0 <= ap_const_logic_1;
        else 
            output_0_0_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    output_0_0_d0 <= reg_771;

    output_0_0_we0_assign_proc : process(ap_enable_reg_pp0_iter11, or_cond3_reg_1441_pp0_iter11_reg, ap_CS_fsm_pp0_stage5, ap_block_pp0_stage5_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage5_11001) and (or_cond3_reg_1441_pp0_iter11_reg = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage5) and (ap_enable_reg_pp0_iter11 = ap_const_logic_1))) then 
            output_0_0_we0 <= ap_const_logic_1;
        else 
            output_0_0_we0 <= ap_const_logic_0;
        end if; 
    end process;

    p_10_fu_1313_p3 <= 
        ap_const_lv32_0 when (tmp_149_reg_1635(0) = '1') else 
        ap_phi_mux_tmp_31_phi_fu_668_p4;
    p_11_fu_1321_p3 <= 
        ap_const_lv32_0 when (tmp_149_reg_1635(0) = '1') else 
        ap_phi_mux_tmp_32_phi_fu_680_p4;
    p_12_fu_1297_p3 <= 
        ap_const_lv32_0 when (tmp_149_reg_1635(0) = '1') else 
        ap_phi_mux_tmp_33_phi_fu_692_p4;
    p_13_fu_1305_p3 <= 
        ap_const_lv32_0 when (tmp_149_reg_1635(0) = '1') else 
        ap_phi_mux_tmp_34_phi_fu_704_p4;
    p_14_fu_1160_p3 <= 
        ap_const_lv32_0 when (tmp_149_fu_1155_p2(0) = '1') else 
        ap_phi_mux_tmp_35_phi_fu_716_p4;
    p_15_fu_1168_p3 <= 
        ap_const_lv32_0 when (tmp_149_fu_1155_p2(0) = '1') else 
        ap_phi_mux_tmp_36_phi_fu_728_p4;
    p_1_fu_1352_p3 <= 
        ap_const_lv32_0 when (tmp_149_reg_1635(0) = '1') else 
        ap_phi_mux_tmp_23_phi_fu_560_p4;
    p_2_fu_1359_p3 <= 
        ap_const_lv32_0 when (tmp_149_reg_1635(0) = '1') else 
        ap_phi_mux_tmp_24_phi_fu_572_p4;
    p_3_fu_1366_p3 <= 
        ap_const_lv32_0 when (tmp_149_reg_1635(0) = '1') else 
        ap_phi_mux_tmp_25_phi_fu_584_p4;
    p_4_fu_1373_p3 <= 
        ap_const_lv32_0 when (tmp_149_reg_1635(0) = '1') else 
        ap_phi_mux_tmp_26_phi_fu_596_p4;
    p_5_fu_1380_p3 <= 
        ap_const_lv32_0 when (tmp_149_reg_1635(0) = '1') else 
        ap_phi_mux_tmp_27_phi_fu_608_p4;
    p_6_fu_1387_p3 <= 
        ap_const_lv32_0 when (tmp_149_reg_1635(0) = '1') else 
        ap_phi_mux_tmp_28_phi_fu_620_p4;
    p_7_fu_1395_p3 <= 
        ap_const_lv32_0 when (tmp_149_reg_1635(0) = '1') else 
        ap_phi_mux_tmp_29_phi_fu_632_p4;
    p_8_fu_1329_p3 <= 
        ap_const_lv32_0 when (tmp_149_reg_1635(0) = '1') else 
        ap_phi_mux_tmp_s_phi_fu_644_p4;
    p_9_fu_1337_p3 <= 
        ap_const_lv32_0 when (tmp_149_reg_1635(0) = '1') else 
        ap_phi_mux_tmp_30_phi_fu_656_p4;
    p_s_fu_1345_p3 <= 
        ap_const_lv32_0 when (tmp_149_reg_1635(0) = '1') else 
        ap_phi_mux_tmp_22_phi_fu_548_p4;
    p_shl2_cast_fu_1130_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_90_fu_1121_p4),10));
    p_shl3_cast_fu_938_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_89_fu_931_p3),10));
    p_shl4_cast_fu_918_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_fu_910_p3),10));
    p_shl_cast_fu_1005_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_91_fu_998_p3),13));
    tmp_127_fu_922_p2 <= std_logic_vector(unsigned(tmp_mid2_cast_fu_906_p1) + unsigned(p_shl4_cast_fu_918_p1));
    tmp_128_fu_809_p2 <= "1" when (ap_phi_mux_i_phi_fu_537_p4 = ap_const_lv3_4) else "0";
    tmp_129_fu_839_p2 <= (exitcond_mid_fu_827_p2 or exitcond_flatten_fu_789_p2);
    tmp_130_fu_942_p2 <= std_logic_vector(unsigned(tmp_20_mid2_cast_fu_928_p1) + unsigned(p_shl3_cast_fu_938_p1));
    tmp_131_fu_948_p2 <= std_logic_vector(unsigned(tmp_130_fu_942_p2) + unsigned(ap_const_lv10_19));
    tmp_132_fu_985_p2 <= std_logic_vector(unsigned(tmp_130_reg_1456) + unsigned(ap_const_lv10_32));
    tmp_133_fu_990_p2 <= std_logic_vector(unsigned(tmp_130_reg_1456) + unsigned(ap_const_lv10_4B));
    tmp_134_fu_1050_p2 <= std_logic_vector(unsigned(tmp_130_reg_1456) + unsigned(ap_const_lv10_64));
    tmp_135_fu_1055_p2 <= std_logic_vector(unsigned(tmp_130_reg_1456) + unsigned(ap_const_lv10_7D));
    tmp_136_fu_1080_p2 <= std_logic_vector(unsigned(tmp_130_reg_1456) + unsigned(ap_const_lv10_96));
    tmp_137_fu_1085_p2 <= std_logic_vector(unsigned(tmp_130_reg_1456) + unsigned(ap_const_lv10_AF));
    tmp_138_fu_1110_p3 <= (ap_const_lv3_5 & tmp_20_mid2_reg_1431);
    tmp_139_fu_1134_p2 <= std_logic_vector(unsigned(tmp_175_cast_fu_1117_p1) + unsigned(p_shl2_cast_fu_1130_p1));
    tmp_140_fu_1140_p2 <= std_logic_vector(unsigned(tmp_130_reg_1456) + unsigned(ap_const_lv10_E1));
    tmp_141_fu_1207_p2 <= std_logic_vector(unsigned(tmp_130_reg_1456) + unsigned(ap_const_lv10_FA));
    tmp_142_fu_1212_p2 <= std_logic_vector(unsigned(tmp_130_reg_1456) + unsigned(ap_const_lv10_113));
    tmp_143_fu_1237_p2 <= std_logic_vector(unsigned(tmp_130_reg_1456) + unsigned(ap_const_lv10_12C));
    tmp_144_fu_1242_p2 <= std_logic_vector(unsigned(tmp_130_reg_1456) + unsigned(ap_const_lv10_145));
    tmp_145_fu_1267_p2 <= std_logic_vector(unsigned(tmp_130_reg_1456) + unsigned(ap_const_lv10_15E));
    tmp_146_fu_1272_p2 <= std_logic_vector(unsigned(tmp_130_reg_1456) + unsigned(ap_const_lv10_177));
    tmp_147_fu_954_p2 <= std_logic_vector(unsigned(tmp_127_fu_922_p2) + unsigned(tmp_20_mid2_cast_fu_928_p1));
    tmp_148_fu_1009_p2 <= std_logic_vector(unsigned(tmp_185_cast_fu_995_p1) + unsigned(p_shl_cast_fu_1005_p1));
    tmp_149_fu_1155_p2 <= (tmp_38_fu_1149_p2 or exitcond_flatten_reg_1416);
    tmp_150_fu_963_p2 <= std_logic_vector(unsigned(tmp_130_fu_942_p2) + unsigned(tmp_39_cast_fu_960_p1));
    tmp_151_fu_974_p2 <= std_logic_vector(unsigned(tmp_131_fu_948_p2) + unsigned(tmp_39_cast_fu_960_p1));
    tmp_152_fu_1018_p2 <= std_logic_vector(unsigned(tmp_132_fu_985_p2) + unsigned(tmp_39_cast_reg_1479));
    tmp_153_fu_1028_p2 <= std_logic_vector(unsigned(tmp_133_fu_990_p2) + unsigned(tmp_39_cast_reg_1479));
    tmp_154_fu_1060_p2 <= std_logic_vector(unsigned(tmp_134_fu_1050_p2) + unsigned(tmp_39_cast_reg_1479));
    tmp_155_fu_1070_p2 <= std_logic_vector(unsigned(tmp_135_fu_1055_p2) + unsigned(tmp_39_cast_reg_1479));
    tmp_156_fu_1090_p2 <= std_logic_vector(unsigned(tmp_136_fu_1080_p2) + unsigned(tmp_39_cast_reg_1479));
    tmp_157_fu_1100_p2 <= std_logic_vector(unsigned(tmp_137_fu_1085_p2) + unsigned(tmp_39_cast_reg_1479));
    tmp_158_fu_1176_p2 <= std_logic_vector(unsigned(tmp_139_fu_1134_p2) + unsigned(tmp_39_cast_reg_1479));
    tmp_159_fu_1186_p2 <= std_logic_vector(unsigned(tmp_140_fu_1140_p2) + unsigned(tmp_39_cast_reg_1479));
    tmp_160_fu_1217_p2 <= std_logic_vector(unsigned(tmp_141_fu_1207_p2) + unsigned(tmp_39_cast_reg_1479));
    tmp_161_fu_1227_p2 <= std_logic_vector(unsigned(tmp_142_fu_1212_p2) + unsigned(tmp_39_cast_reg_1479));
    tmp_162_fu_1247_p2 <= std_logic_vector(unsigned(tmp_143_fu_1237_p2) + unsigned(tmp_39_cast_reg_1479));
    tmp_163_fu_1257_p2 <= std_logic_vector(unsigned(tmp_144_fu_1242_p2) + unsigned(tmp_39_cast_reg_1479));
    tmp_164_fu_1277_p2 <= std_logic_vector(unsigned(tmp_145_fu_1267_p2) + unsigned(tmp_39_cast_reg_1479));
    tmp_165_fu_1287_p2 <= std_logic_vector(unsigned(tmp_146_fu_1272_p2) + unsigned(tmp_39_cast_reg_1479));
    tmp_166_fu_1038_p2 <= std_logic_vector(unsigned(tmp_148_fu_1009_p2) + unsigned(tmp_39_cast1_fu_1015_p1));
    tmp_175_cast_fu_1117_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_138_fu_1110_p3),10));
    tmp_185_cast_fu_995_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_147_reg_1473),13));
    tmp_204_cast_fu_969_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_150_fu_963_p2),64));
    tmp_205_cast_fu_980_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_151_fu_974_p2),64));
    tmp_206_cast_fu_1023_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_152_fu_1018_p2),64));
    tmp_207_cast_fu_1033_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_153_fu_1028_p2),64));
    tmp_208_cast_fu_1065_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_154_fu_1060_p2),64));
    tmp_209_cast_fu_1075_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_155_fu_1070_p2),64));
    tmp_20_mid2_cast_fu_928_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_20_mid2_reg_1431),10));
    tmp_20_mid2_fu_853_p3 <= 
        i_15_fu_833_p2 when (exitcond_mid_fu_827_p2(0) = '1') else 
        i_mid_fu_795_p3;
    tmp_210_cast_fu_1095_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_156_fu_1090_p2),64));
    tmp_211_cast_fu_1105_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_157_fu_1100_p2),64));
    tmp_212_cast_fu_1181_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_158_fu_1176_p2),64));
    tmp_213_cast_fu_1191_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_159_fu_1186_p2),64));
    tmp_214_cast_fu_1222_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_160_fu_1217_p2),64));
    tmp_215_cast_fu_1232_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_161_fu_1227_p2),64));
    tmp_216_cast_fu_1252_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_162_fu_1247_p2),64));
    tmp_217_cast_fu_1262_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_163_fu_1257_p2),64));
    tmp_218_cast_fu_1282_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_164_fu_1277_p2),64));
    tmp_219_cast_fu_1292_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_165_fu_1287_p2),64));
    tmp_21_mid1_fu_861_p2 <= "1" when (i_15_fu_833_p2 = ap_const_lv3_4) else "0";
    tmp_21_mid2_fu_867_p3 <= 
        tmp_21_mid1_fu_861_p2 when (exitcond_mid_fu_827_p2(0) = '1') else 
        tmp_21_mid_fu_815_p2;
    tmp_21_mid_fu_815_p2 <= (tmp_128_fu_809_p2 and not_exitcond_flatten_fu_803_p2);
    tmp_220_cast_fu_1044_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_166_fu_1038_p2),64));
    tmp_37_fu_1145_p2 <= (tmp_20_mid2_reg_1431 or j_mid2_reg_1423);
    tmp_38_fu_1149_p2 <= "1" when (tmp_37_fu_1145_p2 = ap_const_lv3_0) else "0";
    tmp_39_cast1_fu_1015_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(j_mid2_reg_1423),13));
    tmp_39_cast_fu_960_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(j_mid2_reg_1423),10));
    tmp_72_fu_875_p2 <= "1" when (j_mid2_fu_845_p3 = ap_const_lv3_4) else "0";
    tmp_89_fu_931_p3 <= (tmp_20_mid2_reg_1431 & ap_const_lv2_0);
    tmp_90_fu_1121_p4 <= ((ap_const_lv3_5 & tmp_20_mid2_reg_1431) & ap_const_lv2_0);
    tmp_91_fu_998_p3 <= (tmp_147_reg_1473 & ap_const_lv2_0);
    tmp_fu_910_p3 <= (tmp_mid2_v_fu_899_p3 & ap_const_lv2_0);
    tmp_mid2_cast_fu_906_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_mid2_v_fu_899_p3),10));
    tmp_mid2_fu_1403_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_mid2_v_reg_1450_pp0_iter10_reg),64));
    tmp_mid2_v_fu_899_p3 <= 
        co_2_fu_893_p2 when (exitcond_flatten_reg_1416(0) = '1') else 
        ap_phi_mux_co_phi_fu_514_p4;
    weights_0_address0 <= tmp_220_cast_fu_1044_p1(12 - 1 downto 0);

    weights_0_ce0_assign_proc : process(ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage2, ap_block_pp0_stage2_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1))) then 
            weights_0_ce0 <= ap_const_logic_1;
        else 
            weights_0_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    weights_10_address0 <= tmp_220_cast_reg_1517(12 - 1 downto 0);

    weights_10_ce0_assign_proc : process(ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage7, ap_block_pp0_stage7_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage7_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage7) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1))) then 
            weights_10_ce0 <= ap_const_logic_1;
        else 
            weights_10_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    weights_11_address0 <= tmp_220_cast_reg_1517(12 - 1 downto 0);

    weights_11_ce0_assign_proc : process(ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage7, ap_block_pp0_stage7_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage7_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage7) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1))) then 
            weights_11_ce0 <= ap_const_logic_1;
        else 
            weights_11_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    weights_12_address0 <= tmp_220_cast_reg_1517(12 - 1 downto 0);

    weights_12_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, ap_enable_reg_pp0_iter1)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            weights_12_ce0 <= ap_const_logic_1;
        else 
            weights_12_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    weights_13_address0 <= tmp_220_cast_reg_1517(12 - 1 downto 0);

    weights_13_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, ap_enable_reg_pp0_iter1)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            weights_13_ce0 <= ap_const_logic_1;
        else 
            weights_13_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    weights_14_address0 <= tmp_220_cast_reg_1517(12 - 1 downto 0);

    weights_14_ce0_assign_proc : process(ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1_11001, ap_enable_reg_pp0_iter1)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
            weights_14_ce0 <= ap_const_logic_1;
        else 
            weights_14_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    weights_15_address0 <= tmp_220_cast_reg_1517(12 - 1 downto 0);

    weights_15_ce0_assign_proc : process(ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1_11001, ap_enable_reg_pp0_iter1)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
            weights_15_ce0 <= ap_const_logic_1;
        else 
            weights_15_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    weights_1_address0 <= tmp_220_cast_fu_1044_p1(12 - 1 downto 0);

    weights_1_ce0_assign_proc : process(ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage2, ap_block_pp0_stage2_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1))) then 
            weights_1_ce0 <= ap_const_logic_1;
        else 
            weights_1_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    weights_2_address0 <= tmp_220_cast_reg_1517(12 - 1 downto 0);

    weights_2_ce0_assign_proc : process(ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage3, ap_block_pp0_stage3_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage3_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1))) then 
            weights_2_ce0 <= ap_const_logic_1;
        else 
            weights_2_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    weights_3_address0 <= tmp_220_cast_reg_1517(12 - 1 downto 0);

    weights_3_ce0_assign_proc : process(ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage3, ap_block_pp0_stage3_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage3_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1))) then 
            weights_3_ce0 <= ap_const_logic_1;
        else 
            weights_3_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    weights_4_address0 <= tmp_220_cast_reg_1517(12 - 1 downto 0);

    weights_4_ce0_assign_proc : process(ap_CS_fsm_pp0_stage4, ap_block_pp0_stage4_11001, ap_enable_reg_pp0_iter0)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage4_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4))) then 
            weights_4_ce0 <= ap_const_logic_1;
        else 
            weights_4_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    weights_5_address0 <= tmp_220_cast_reg_1517(12 - 1 downto 0);

    weights_5_ce0_assign_proc : process(ap_CS_fsm_pp0_stage4, ap_block_pp0_stage4_11001, ap_enable_reg_pp0_iter0)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage4_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4))) then 
            weights_5_ce0 <= ap_const_logic_1;
        else 
            weights_5_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    weights_6_address0 <= tmp_220_cast_reg_1517(12 - 1 downto 0);

    weights_6_ce0_assign_proc : process(ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage5, ap_block_pp0_stage5_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage5_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage5) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1))) then 
            weights_6_ce0 <= ap_const_logic_1;
        else 
            weights_6_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    weights_7_address0 <= tmp_220_cast_reg_1517(12 - 1 downto 0);

    weights_7_ce0_assign_proc : process(ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage5, ap_block_pp0_stage5_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage5_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage5) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1))) then 
            weights_7_ce0 <= ap_const_logic_1;
        else 
            weights_7_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    weights_8_address0 <= tmp_220_cast_reg_1517(12 - 1 downto 0);

    weights_8_ce0_assign_proc : process(ap_CS_fsm_pp0_stage6, ap_block_pp0_stage6_11001, ap_enable_reg_pp0_iter0)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage6_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage6))) then 
            weights_8_ce0 <= ap_const_logic_1;
        else 
            weights_8_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    weights_9_address0 <= tmp_220_cast_reg_1517(12 - 1 downto 0);

    weights_9_ce0_assign_proc : process(ap_CS_fsm_pp0_stage6, ap_block_pp0_stage6_11001, ap_enable_reg_pp0_iter0)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage6_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage6))) then 
            weights_9_ce0 <= ap_const_logic_1;
        else 
            weights_9_ce0 <= ap_const_logic_0;
        end if; 
    end process;

end behav;
