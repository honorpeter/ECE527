// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2018.2
// Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module convolution_3 (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        input_r_address0,
        input_r_ce0,
        input_r_q0,
        input_r_address1,
        input_r_ce1,
        input_r_q1,
        weights_0_address0,
        weights_0_ce0,
        weights_0_q0,
        weights_1_address0,
        weights_1_ce0,
        weights_1_q0,
        weights_2_address0,
        weights_2_ce0,
        weights_2_q0,
        weights_3_address0,
        weights_3_ce0,
        weights_3_q0,
        weights_4_address0,
        weights_4_ce0,
        weights_4_q0,
        weights_5_address0,
        weights_5_ce0,
        weights_5_q0,
        bias_address0,
        bias_ce0,
        bias_q0,
        output_r_address0,
        output_r_ce0,
        output_r_we0,
        output_r_d0
);

parameter    ap_ST_fsm_state1 = 7'd1;
parameter    ap_ST_fsm_pp0_stage0 = 7'd2;
parameter    ap_ST_fsm_pp0_stage1 = 7'd4;
parameter    ap_ST_fsm_pp0_stage2 = 7'd8;
parameter    ap_ST_fsm_pp0_stage3 = 7'd16;
parameter    ap_ST_fsm_pp0_stage4 = 7'd32;
parameter    ap_ST_fsm_state49 = 7'd64;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
output  [10:0] input_r_address0;
output   input_r_ce0;
input  [31:0] input_r_q0;
output  [10:0] input_r_address1;
output   input_r_ce1;
input  [31:0] input_r_q1;
output  [8:0] weights_0_address0;
output   weights_0_ce0;
input  [31:0] weights_0_q0;
output  [8:0] weights_1_address0;
output   weights_1_ce0;
input  [31:0] weights_1_q0;
output  [8:0] weights_2_address0;
output   weights_2_ce0;
input  [31:0] weights_2_q0;
output  [8:0] weights_3_address0;
output   weights_3_ce0;
input  [31:0] weights_3_q0;
output  [8:0] weights_4_address0;
output   weights_4_ce0;
input  [31:0] weights_4_q0;
output  [8:0] weights_5_address0;
output   weights_5_ce0;
input  [31:0] weights_5_q0;
output  [3:0] bias_address0;
output   bias_ce0;
input  [31:0] bias_q0;
output  [10:0] output_r_address0;
output   output_r_ce0;
output   output_r_we0;
output  [31:0] output_r_d0;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg[10:0] input_r_address0;
reg input_r_ce0;
reg[10:0] input_r_address1;
reg input_r_ce1;
reg weights_0_ce0;
reg weights_1_ce0;
reg weights_2_ce0;
reg weights_3_ce0;
reg weights_4_ce0;
reg weights_5_ce0;
reg bias_ce0;
reg output_r_ce0;
reg output_r_we0;

(* fsm_encoding = "none" *) reg   [6:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
reg   [15:0] indvar_flatten4_reg_298;
reg   [4:0] co_reg_309;
reg   [11:0] indvar_flatten5_reg_320;
reg   [3:0] h_reg_331;
reg   [8:0] indvar_flatten6_reg_342;
reg   [3:0] w_reg_353;
reg   [5:0] indvar_flatten_reg_364;
reg   [2:0] m_reg_375;
reg   [2:0] n_reg_386;
wire   [0:0] exitcond_flatten6_fu_427_p2;
reg   [0:0] exitcond_flatten6_reg_1180;
wire    ap_CS_fsm_pp0_stage0;
wire    ap_block_state2_pp0_stage0_iter0;
wire    ap_block_state7_pp0_stage0_iter1;
wire    ap_block_state12_pp0_stage0_iter2;
wire    ap_block_state17_pp0_stage0_iter3;
wire    ap_block_state22_pp0_stage0_iter4;
wire    ap_block_state27_pp0_stage0_iter5;
wire    ap_block_state32_pp0_stage0_iter6;
wire    ap_block_state37_pp0_stage0_iter7;
wire    ap_block_state42_pp0_stage0_iter8;
wire    ap_block_state47_pp0_stage0_iter9;
wire    ap_block_pp0_stage0_11001;
reg   [0:0] exitcond_flatten6_reg_1180_pp0_iter1_reg;
reg   [0:0] exitcond_flatten6_reg_1180_pp0_iter2_reg;
reg   [0:0] exitcond_flatten6_reg_1180_pp0_iter3_reg;
reg   [0:0] exitcond_flatten6_reg_1180_pp0_iter4_reg;
reg   [0:0] exitcond_flatten6_reg_1180_pp0_iter5_reg;
reg   [0:0] exitcond_flatten6_reg_1180_pp0_iter6_reg;
reg   [0:0] exitcond_flatten6_reg_1180_pp0_iter7_reg;
wire   [15:0] indvar_flatten_next6_fu_433_p2;
reg   [15:0] indvar_flatten_next6_reg_1184;
reg    ap_enable_reg_pp0_iter0;
wire   [4:0] tmp_94_mid2_v_fu_459_p3;
reg   [4:0] tmp_94_mid2_v_reg_1189;
reg   [4:0] tmp_94_mid2_v_reg_1189_pp0_iter1_reg;
reg   [4:0] tmp_94_mid2_v_reg_1189_pp0_iter2_reg;
reg   [4:0] tmp_94_mid2_v_reg_1189_pp0_iter3_reg;
reg   [4:0] tmp_94_mid2_v_reg_1189_pp0_iter4_reg;
reg   [4:0] tmp_94_mid2_v_reg_1189_pp0_iter5_reg;
reg   [4:0] tmp_94_mid2_v_reg_1189_pp0_iter6_reg;
reg   [4:0] tmp_94_mid2_v_reg_1189_pp0_iter7_reg;
wire   [0:0] not_exitcond_flatten_fu_475_p2;
reg   [0:0] not_exitcond_flatten_reg_1199;
wire   [0:0] tmp_171_fu_481_p2;
reg   [0:0] tmp_171_reg_1204;
wire   [3:0] tmp_101_mid2_fu_543_p3;
reg   [3:0] tmp_101_mid2_reg_1209;
reg   [3:0] tmp_101_mid2_reg_1209_pp0_iter1_reg;
reg   [3:0] tmp_101_mid2_reg_1209_pp0_iter2_reg;
reg   [3:0] tmp_101_mid2_reg_1209_pp0_iter3_reg;
reg   [3:0] tmp_101_mid2_reg_1209_pp0_iter4_reg;
reg   [3:0] tmp_101_mid2_reg_1209_pp0_iter5_reg;
reg   [3:0] tmp_101_mid2_reg_1209_pp0_iter6_reg;
reg   [3:0] tmp_101_mid2_reg_1209_pp0_iter7_reg;
wire   [0:0] not_exitcond_flatten_1_fu_565_p2;
reg   [0:0] not_exitcond_flatten_1_reg_1216;
wire   [2:0] m_mid1_fu_601_p3;
reg   [2:0] m_mid1_reg_1221;
wire   [3:0] tmp_108_mid2_fu_609_p3;
reg   [3:0] tmp_108_mid2_reg_1227;
reg   [3:0] tmp_108_mid2_reg_1227_pp0_iter1_reg;
reg   [3:0] tmp_108_mid2_reg_1227_pp0_iter2_reg;
reg   [3:0] tmp_108_mid2_reg_1227_pp0_iter3_reg;
reg   [3:0] tmp_108_mid2_reg_1227_pp0_iter4_reg;
reg   [3:0] tmp_108_mid2_reg_1227_pp0_iter5_reg;
reg   [3:0] tmp_108_mid2_reg_1227_pp0_iter6_reg;
reg   [3:0] tmp_108_mid2_reg_1227_pp0_iter7_reg;
wire   [3:0] tmp_117_mid5_fu_617_p3;
reg   [3:0] tmp_117_mid5_reg_1234;
wire   [0:0] not_exitcond_flatten_2_fu_625_p2;
reg   [0:0] not_exitcond_flatten_2_reg_1239;
wire   [0:0] exitcond_mid2_fu_631_p2;
reg   [0:0] exitcond_mid2_reg_1244;
wire   [2:0] n_mid2_fu_649_p3;
reg   [2:0] n_mid2_reg_1251;
wire   [5:0] indvar_flatten_next_fu_663_p3;
reg   [5:0] indvar_flatten_next_reg_1260;
wire   [8:0] indvar_flatten_next4_fu_677_p3;
reg   [8:0] indvar_flatten_next4_reg_1265;
wire   [11:0] indvar_flatten_next5_fu_691_p3;
reg   [11:0] indvar_flatten_next5_reg_1270;
wire   [2:0] tmp_115_mid2_fu_742_p3;
reg   [2:0] tmp_115_mid2_reg_1275;
wire    ap_CS_fsm_pp0_stage1;
wire    ap_block_state3_pp0_stage1_iter0;
wire    ap_block_state8_pp0_stage1_iter1;
wire    ap_block_state13_pp0_stage1_iter2;
wire    ap_block_state18_pp0_stage1_iter3;
wire    ap_block_state23_pp0_stage1_iter4;
wire    ap_block_state28_pp0_stage1_iter5;
wire    ap_block_state33_pp0_stage1_iter6;
wire    ap_block_state38_pp0_stage1_iter7;
wire    ap_block_state43_pp0_stage1_iter8;
wire    ap_block_state48_pp0_stage1_iter9;
wire    ap_block_pp0_stage1_11001;
wire   [7:0] tmp_178_fu_752_p2;
reg   [7:0] tmp_178_reg_1281;
wire   [11:0] tmp_180_fu_793_p2;
reg   [11:0] tmp_180_reg_1287;
wire   [0:0] or_cond5_fu_817_p2;
reg   [0:0] or_cond5_reg_1297;
reg   [0:0] or_cond5_reg_1297_pp0_iter1_reg;
reg   [0:0] or_cond5_reg_1297_pp0_iter2_reg;
reg   [0:0] or_cond5_reg_1297_pp0_iter3_reg;
reg   [0:0] or_cond5_reg_1297_pp0_iter4_reg;
reg   [0:0] or_cond5_reg_1297_pp0_iter5_reg;
reg   [0:0] or_cond5_reg_1297_pp0_iter6_reg;
reg   [0:0] or_cond5_reg_1297_pp0_iter7_reg;
reg   [0:0] or_cond5_reg_1297_pp0_iter8_reg;
wire   [63:0] tmp_247_cast_fu_856_p1;
reg   [63:0] tmp_247_cast_reg_1301;
wire    ap_CS_fsm_pp0_stage2;
wire    ap_block_state4_pp0_stage2_iter0;
wire    ap_block_state9_pp0_stage2_iter1;
wire    ap_block_state14_pp0_stage2_iter2;
wire    ap_block_state19_pp0_stage2_iter3;
wire    ap_block_state24_pp0_stage2_iter4;
wire    ap_block_state29_pp0_stage2_iter5;
wire    ap_block_state34_pp0_stage2_iter6;
wire    ap_block_state39_pp0_stage2_iter7;
wire    ap_block_state44_pp0_stage2_iter8;
wire    ap_block_pp0_stage2_11001;
wire   [11:0] tmp_104_cast_fu_867_p1;
reg   [11:0] tmp_104_cast_reg_1319;
wire    ap_CS_fsm_pp0_stage3;
wire    ap_block_state5_pp0_stage3_iter0;
wire    ap_block_state10_pp0_stage3_iter1;
wire    ap_block_state15_pp0_stage3_iter2;
wire    ap_block_state20_pp0_stage3_iter3;
wire    ap_block_state25_pp0_stage3_iter4;
wire    ap_block_state30_pp0_stage3_iter5;
wire    ap_block_state35_pp0_stage3_iter6;
wire    ap_block_state40_pp0_stage3_iter7;
wire    ap_block_state45_pp0_stage3_iter8;
wire    ap_block_pp0_stage3_11001;
reg   [31:0] weights_0_load_reg_1347;
reg   [31:0] input_load_reg_1362;
reg   [31:0] weights_1_load_reg_1367;
reg   [31:0] input_load_16_reg_1372;
wire   [0:0] tmp_101_fu_936_p2;
reg   [0:0] tmp_101_reg_1377;
wire    ap_CS_fsm_pp0_stage4;
wire    ap_block_state6_pp0_stage4_iter0;
wire    ap_block_state11_pp0_stage4_iter1;
wire    ap_block_state16_pp0_stage4_iter2;
wire    ap_block_state21_pp0_stage4_iter3;
wire    ap_block_state26_pp0_stage4_iter4;
wire    ap_block_state31_pp0_stage4_iter5;
wire    ap_block_state36_pp0_stage4_iter6;
wire    ap_block_state41_pp0_stage4_iter7;
wire    ap_block_state46_pp0_stage4_iter8;
wire    ap_block_pp0_stage4_11001;
reg   [0:0] tmp_101_reg_1377_pp0_iter1_reg;
reg   [31:0] weights_2_load_reg_1407;
reg   [31:0] input_load_17_reg_1412;
reg   [31:0] weights_3_load_reg_1417;
reg   [31:0] input_load_18_reg_1422;
wire   [2:0] n_2_fu_962_p2;
reg   [2:0] n_2_reg_1427;
reg   [31:0] weights_4_load_reg_1432;
reg   [31:0] input_load_19_reg_1437;
reg    ap_enable_reg_pp0_iter1;
reg   [31:0] weights_5_load_reg_1442;
reg   [31:0] input_load_20_reg_1447;
wire   [31:0] grp_fu_409_p2;
reg   [31:0] tmp_105_reg_1452;
wire   [31:0] grp_fu_413_p2;
reg   [31:0] tmp_107_reg_1457;
wire   [31:0] p_13_fu_973_p3;
wire   [31:0] p_14_fu_981_p3;
reg   [31:0] tmp_109_reg_1472;
reg   [31:0] tmp_111_reg_1477;
wire   [31:0] p_11_fu_995_p3;
wire   [31:0] p_12_fu_1003_p3;
reg   [31:0] tmp_113_reg_1492;
reg   [31:0] tmp_115_reg_1497;
wire   [31:0] p_s_fu_1017_p3;
wire   [31:0] p_10_fu_1025_p3;
wire   [31:0] grp_fu_397_p2;
reg   [31:0] tmp_106_reg_1512;
reg    ap_enable_reg_pp0_iter2;
wire   [31:0] grp_fu_401_p2;
reg   [31:0] tmp_108_reg_1517;
reg   [31:0] tmp_110_reg_1522;
reg   [31:0] tmp_110_reg_1522_pp0_iter3_reg;
reg   [31:0] tmp_112_reg_1527;
reg   [31:0] tmp_112_reg_1527_pp0_iter3_reg;
reg   [31:0] tmp_112_reg_1527_pp0_iter4_reg;
reg   [31:0] tmp_114_reg_1532;
reg   [31:0] tmp_114_reg_1532_pp0_iter3_reg;
reg   [31:0] tmp_114_reg_1532_pp0_iter4_reg;
reg   [31:0] tmp_114_reg_1532_pp0_iter5_reg;
reg   [31:0] tmp_116_reg_1537;
reg   [31:0] tmp_116_reg_1537_pp0_iter3_reg;
reg   [31:0] tmp_116_reg_1537_pp0_iter4_reg;
reg   [31:0] tmp_116_reg_1537_pp0_iter5_reg;
reg   [31:0] tmp_116_reg_1537_pp0_iter6_reg;
wire   [31:0] grp_fu_405_p2;
reg   [31:0] tmp_118_reg_1542;
reg    ap_enable_reg_pp0_iter3;
reg   [31:0] tmp_119_reg_1547;
reg    ap_enable_reg_pp0_iter4;
reg   [31:0] tmp_120_reg_1552;
reg    ap_enable_reg_pp0_iter5;
reg   [31:0] tmp_121_reg_1557;
reg    ap_enable_reg_pp0_iter7;
reg   [10:0] output_addr_reg_1562;
reg   [10:0] output_addr_reg_1562_pp0_iter8_reg;
reg   [31:0] tmp_122_reg_1572;
reg    ap_enable_reg_pp0_iter8;
reg   [31:0] bias_load_reg_1577;
reg   [31:0] tmp_123_reg_1582;
reg    ap_enable_reg_pp0_iter9;
wire    ap_block_pp0_stage0_subdone;
reg    ap_condition_pp0_exit_iter0_state2;
wire    ap_block_pp0_stage4_subdone;
wire    ap_block_pp0_stage1_subdone;
reg    ap_enable_reg_pp0_iter6;
reg   [15:0] ap_phi_mux_indvar_flatten4_phi_fu_302_p4;
wire    ap_block_pp0_stage0;
reg   [4:0] ap_phi_mux_co_phi_fu_313_p4;
reg   [11:0] ap_phi_mux_indvar_flatten5_phi_fu_324_p4;
reg   [3:0] ap_phi_mux_h_phi_fu_335_p4;
reg   [8:0] ap_phi_mux_indvar_flatten6_phi_fu_346_p4;
reg   [3:0] ap_phi_mux_w_phi_fu_357_p4;
reg   [5:0] ap_phi_mux_indvar_flatten_phi_fu_368_p4;
reg   [2:0] ap_phi_mux_m_phi_fu_379_p4;
reg   [2:0] ap_phi_mux_n_phi_fu_390_p4;
wire    ap_block_pp0_stage2;
wire   [63:0] tmp_248_cast_fu_876_p1;
wire   [63:0] tmp_249_cast_fu_887_p1;
wire    ap_block_pp0_stage3;
wire   [63:0] tmp_250_cast_fu_907_p1;
wire   [63:0] tmp_251_cast_fu_917_p1;
wire    ap_block_pp0_stage4;
wire   [63:0] tmp_252_cast_fu_947_p1;
wire   [63:0] tmp_253_cast_fu_957_p1;
wire   [63:0] tmp_233_cast_fu_1139_p1;
wire   [63:0] tmp_94_mid2_fu_1063_p1;
reg   [31:0] tmp_93_fu_114;
reg   [31:0] tmp_92_fu_118;
reg   [31:0] tmp_91_fu_122;
reg   [31:0] tmp_90_fu_126;
reg   [31:0] tmp_89_fu_130;
reg   [31:0] tmp_s_fu_134;
wire    ap_block_pp0_stage1;
reg   [31:0] grp_fu_397_p0;
reg   [31:0] grp_fu_397_p1;
reg   [31:0] grp_fu_401_p0;
reg   [31:0] grp_fu_401_p1;
reg   [31:0] grp_fu_405_p0;
reg   [31:0] grp_fu_405_p1;
reg   [31:0] grp_fu_409_p0;
reg   [31:0] grp_fu_409_p1;
reg   [31:0] grp_fu_413_p0;
reg   [31:0] grp_fu_413_p1;
wire   [3:0] m_cast_fu_417_p1;
wire   [0:0] exitcond_flatten_fu_445_p2;
wire   [4:0] co_3_fu_439_p2;
wire   [3:0] tmp_97_fu_421_p2;
wire   [0:0] exitcond_fu_487_p2;
wire   [0:0] exitcond_flatten1_fu_499_p2;
wire   [0:0] exitcond_flatten2_fu_511_p2;
wire   [3:0] h_mid_fu_451_p3;
wire   [0:0] exitcond_flatten36_m_fu_517_p2;
wire   [0:0] tmp_172_fu_529_p2;
wire   [3:0] h_3_fu_523_p2;
wire   [3:0] tmp_117_mid_fu_467_p3;
wire   [0:0] exitcond_flatten36_n_fu_559_p2;
wire   [0:0] exitcond_mid_fu_493_p2;
wire   [0:0] exitcond_flatten_mid_fu_505_p2;
wire   [3:0] w_mid_fu_535_p3;
wire   [0:0] exitcond_flatten_mid_2_fu_577_p2;
wire   [0:0] tmp_175_fu_589_p2;
wire   [0:0] tmp_95_fu_595_p2;
wire   [3:0] w_4_fu_583_p2;
wire   [3:0] tmp_117_mid3_fu_551_p3;
wire   [0:0] exitcond_mid1_fu_571_p2;
wire   [0:0] tmp_177_fu_637_p2;
wire   [0:0] tmp_96_fu_643_p2;
wire   [5:0] indvar_flatten_op_fu_657_p2;
wire   [8:0] indvar_flatten34_op_fu_671_p2;
wire   [11:0] indvar_flatten84_op_fu_685_p2;
wire   [6:0] tmp_fu_702_p3;
wire   [7:0] p_shl1_cast_fu_709_p1;
wire   [7:0] tmp_94_mid2_cast_fu_699_p1;
wire   [0:0] tmp_118_mid_fu_719_p2;
wire   [0:0] tmp_118_mid3_fu_723_p2;
wire   [2:0] m_1_fu_733_p2;
wire   [7:0] tmp_115_mid2_cast_fu_748_p1;
wire   [7:0] tmp_167_fu_713_p2;
wire   [3:0] m_cast_mid1_fu_738_p1;
wire   [3:0] tmp_116_mid1_fu_758_p2;
wire   [3:0] tmp_117_mid2_fu_763_p3;
wire   [7:0] tmp_98_fu_769_p3;
wire   [4:0] tmp_99_fu_781_p3;
wire   [11:0] p_shl_cast_fu_777_p1;
wire   [11:0] p_shl9_cast_fu_789_p1;
wire   [0:0] tmp_118_mid1_fu_799_p2;
wire   [0:0] tmp_118_mid4_fu_728_p2;
wire   [0:0] tmp_117_fu_812_p2;
wire   [0:0] tmp_118_mid2_fu_805_p3;
wire   [9:0] p_shl6_cast_fu_826_p3;
wire   [9:0] tmp_236_cast_fu_823_p1;
wire   [9:0] tmp_102_cast_fu_847_p1;
wire   [9:0] tmp_179_fu_833_p2;
wire   [9:0] tmp_186_fu_850_p2;
wire   [3:0] n_cast_fu_844_p1;
wire   [3:0] tmp_103_fu_862_p2;
wire   [11:0] tmp_187_fu_871_p2;
wire   [11:0] tmp_181_fu_839_p2;
wire   [11:0] tmp_188_fu_881_p2;
wire   [11:0] tmp_182_fu_892_p2;
wire   [11:0] tmp_189_fu_902_p2;
wire   [11:0] tmp_183_fu_897_p2;
wire   [11:0] tmp_190_fu_912_p2;
wire   [2:0] tmp_100_fu_932_p2;
wire   [11:0] tmp_184_fu_922_p2;
wire   [11:0] tmp_191_fu_942_p2;
wire   [11:0] tmp_185_fu_927_p2;
wire   [11:0] tmp_192_fu_952_p2;
wire   [7:0] tmp_168_fu_1067_p3;
wire   [5:0] tmp_169_fu_1078_p3;
wire   [8:0] p_shl2_cast_fu_1074_p1;
wire   [8:0] p_shl3_cast_fu_1085_p1;
wire   [8:0] tmp_101_mid2_cast_fu_1095_p1;
wire   [8:0] tmp_170_fu_1089_p2;
wire   [8:0] tmp_173_fu_1098_p2;
wire   [9:0] tmp_94_fu_1112_p3;
wire   [11:0] p_shl4_cast_fu_1104_p3;
wire   [11:0] p_shl5_cast_fu_1120_p1;
wire   [11:0] tmp_108_mid2_cast_fu_1130_p1;
wire   [11:0] tmp_174_fu_1124_p2;
wire   [11:0] tmp_176_fu_1133_p2;
wire    ap_CS_fsm_state49;
reg   [6:0] ap_NS_fsm;
wire    ap_block_pp0_stage2_subdone;
wire    ap_block_pp0_stage3_subdone;
reg    ap_idle_pp0;
wire    ap_enable_pp0;

// power-on initialization
initial begin
#0 ap_CS_fsm = 7'd1;
#0 ap_enable_reg_pp0_iter0 = 1'b0;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp0_iter2 = 1'b0;
#0 ap_enable_reg_pp0_iter3 = 1'b0;
#0 ap_enable_reg_pp0_iter4 = 1'b0;
#0 ap_enable_reg_pp0_iter5 = 1'b0;
#0 ap_enable_reg_pp0_iter7 = 1'b0;
#0 ap_enable_reg_pp0_iter8 = 1'b0;
#0 ap_enable_reg_pp0_iter9 = 1'b0;
#0 ap_enable_reg_pp0_iter6 = 1'b0;
end

conv1_fadd_32ns_3bkb #(
    .ID( 1 ),
    .NUM_STAGE( 5 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
conv1_fadd_32ns_3bkb_U40(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_397_p0),
    .din1(grp_fu_397_p1),
    .ce(1'b1),
    .dout(grp_fu_397_p2)
);

conv1_fadd_32ns_3bkb #(
    .ID( 1 ),
    .NUM_STAGE( 5 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
conv1_fadd_32ns_3bkb_U41(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_401_p0),
    .din1(grp_fu_401_p1),
    .ce(1'b1),
    .dout(grp_fu_401_p2)
);

conv1_fadd_32ns_3bkb #(
    .ID( 1 ),
    .NUM_STAGE( 5 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
conv1_fadd_32ns_3bkb_U42(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_405_p0),
    .din1(grp_fu_405_p1),
    .ce(1'b1),
    .dout(grp_fu_405_p2)
);

conv1_fmul_32ns_3cud #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
conv1_fmul_32ns_3cud_U43(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_409_p0),
    .din1(grp_fu_409_p1),
    .ce(1'b1),
    .dout(grp_fu_409_p2)
);

conv1_fmul_32ns_3cud #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
conv1_fmul_32ns_3cud_U44(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_413_p0),
    .din1(grp_fu_413_p1),
    .ce(1'b1),
    .dout(grp_fu_413_p2)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter0 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_condition_pp0_exit_iter0_state2) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            ap_enable_reg_pp0_iter0 <= 1'b0;
        end else if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
            ap_enable_reg_pp0_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage4_subdone) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
            if ((1'b1 == ap_condition_pp0_exit_iter0_state2)) begin
                ap_enable_reg_pp0_iter1 <= (1'b1 ^ ap_condition_pp0_exit_iter0_state2);
            end else if ((1'b1 == 1'b1)) begin
                ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
            end
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter2 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage4_subdone) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
            ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter3 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage4_subdone) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
            ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter4 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage4_subdone) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
            ap_enable_reg_pp0_iter4 <= ap_enable_reg_pp0_iter3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter5 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage4_subdone) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
            ap_enable_reg_pp0_iter5 <= ap_enable_reg_pp0_iter4;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter6 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage4_subdone) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
            ap_enable_reg_pp0_iter6 <= ap_enable_reg_pp0_iter5;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter7 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage4_subdone) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
            ap_enable_reg_pp0_iter7 <= ap_enable_reg_pp0_iter6;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter8 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage4_subdone) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
            ap_enable_reg_pp0_iter8 <= ap_enable_reg_pp0_iter7;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter9 <= 1'b0;
    end else begin
        if ((((1'b0 == ap_block_pp0_stage4_subdone) & (1'b1 == ap_CS_fsm_pp0_stage4)) | ((1'b0 == ap_block_pp0_stage1_subdone) & (1'b1 == ap_CS_fsm_pp0_stage1)))) begin
            ap_enable_reg_pp0_iter9 <= ap_enable_reg_pp0_iter8;
        end else if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
            ap_enable_reg_pp0_iter9 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001) & (exitcond_flatten6_reg_1180 == 1'd0))) begin
        co_reg_309 <= tmp_94_mid2_v_reg_1189;
    end else if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
        co_reg_309 <= 5'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001) & (exitcond_flatten6_reg_1180 == 1'd0))) begin
        h_reg_331 <= tmp_101_mid2_reg_1209;
    end else if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
        h_reg_331 <= 4'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001) & (exitcond_flatten6_reg_1180 == 1'd0))) begin
        indvar_flatten4_reg_298 <= indvar_flatten_next6_reg_1184;
    end else if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
        indvar_flatten4_reg_298 <= 16'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001) & (exitcond_flatten6_reg_1180 == 1'd0))) begin
        indvar_flatten5_reg_320 <= indvar_flatten_next5_reg_1270;
    end else if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
        indvar_flatten5_reg_320 <= 12'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001) & (exitcond_flatten6_reg_1180 == 1'd0))) begin
        indvar_flatten6_reg_342 <= indvar_flatten_next4_reg_1265;
    end else if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
        indvar_flatten6_reg_342 <= 9'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001) & (exitcond_flatten6_reg_1180 == 1'd0))) begin
        indvar_flatten_reg_364 <= indvar_flatten_next_reg_1260;
    end else if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
        indvar_flatten_reg_364 <= 6'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001) & (exitcond_flatten6_reg_1180 == 1'd0))) begin
        m_reg_375 <= tmp_115_mid2_reg_1275;
    end else if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
        m_reg_375 <= 3'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001) & (exitcond_flatten6_reg_1180 == 1'd0))) begin
        n_reg_386 <= n_2_reg_1427;
    end else if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
        n_reg_386 <= 3'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001) & (exitcond_flatten6_reg_1180 == 1'd0))) begin
        w_reg_353 <= tmp_108_mid2_reg_1227;
    end else if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
        w_reg_353 <= 4'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((or_cond5_reg_1297_pp0_iter7_reg == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        bias_load_reg_1577 <= bias_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        exitcond_flatten6_reg_1180 <= exitcond_flatten6_fu_427_p2;
        exitcond_flatten6_reg_1180_pp0_iter1_reg <= exitcond_flatten6_reg_1180;
        exitcond_flatten6_reg_1180_pp0_iter2_reg <= exitcond_flatten6_reg_1180_pp0_iter1_reg;
        exitcond_flatten6_reg_1180_pp0_iter3_reg <= exitcond_flatten6_reg_1180_pp0_iter2_reg;
        exitcond_flatten6_reg_1180_pp0_iter4_reg <= exitcond_flatten6_reg_1180_pp0_iter3_reg;
        exitcond_flatten6_reg_1180_pp0_iter5_reg <= exitcond_flatten6_reg_1180_pp0_iter4_reg;
        exitcond_flatten6_reg_1180_pp0_iter6_reg <= exitcond_flatten6_reg_1180_pp0_iter5_reg;
        exitcond_flatten6_reg_1180_pp0_iter7_reg <= exitcond_flatten6_reg_1180_pp0_iter6_reg;
        tmp_101_mid2_reg_1209_pp0_iter1_reg <= tmp_101_mid2_reg_1209;
        tmp_101_mid2_reg_1209_pp0_iter2_reg <= tmp_101_mid2_reg_1209_pp0_iter1_reg;
        tmp_101_mid2_reg_1209_pp0_iter3_reg <= tmp_101_mid2_reg_1209_pp0_iter2_reg;
        tmp_101_mid2_reg_1209_pp0_iter4_reg <= tmp_101_mid2_reg_1209_pp0_iter3_reg;
        tmp_101_mid2_reg_1209_pp0_iter5_reg <= tmp_101_mid2_reg_1209_pp0_iter4_reg;
        tmp_101_mid2_reg_1209_pp0_iter6_reg <= tmp_101_mid2_reg_1209_pp0_iter5_reg;
        tmp_101_mid2_reg_1209_pp0_iter7_reg <= tmp_101_mid2_reg_1209_pp0_iter6_reg;
        tmp_108_mid2_reg_1227_pp0_iter1_reg <= tmp_108_mid2_reg_1227;
        tmp_108_mid2_reg_1227_pp0_iter2_reg <= tmp_108_mid2_reg_1227_pp0_iter1_reg;
        tmp_108_mid2_reg_1227_pp0_iter3_reg <= tmp_108_mid2_reg_1227_pp0_iter2_reg;
        tmp_108_mid2_reg_1227_pp0_iter4_reg <= tmp_108_mid2_reg_1227_pp0_iter3_reg;
        tmp_108_mid2_reg_1227_pp0_iter5_reg <= tmp_108_mid2_reg_1227_pp0_iter4_reg;
        tmp_108_mid2_reg_1227_pp0_iter6_reg <= tmp_108_mid2_reg_1227_pp0_iter5_reg;
        tmp_108_mid2_reg_1227_pp0_iter7_reg <= tmp_108_mid2_reg_1227_pp0_iter6_reg;
        tmp_94_mid2_v_reg_1189_pp0_iter1_reg <= tmp_94_mid2_v_reg_1189;
        tmp_94_mid2_v_reg_1189_pp0_iter2_reg <= tmp_94_mid2_v_reg_1189_pp0_iter1_reg;
        tmp_94_mid2_v_reg_1189_pp0_iter3_reg <= tmp_94_mid2_v_reg_1189_pp0_iter2_reg;
        tmp_94_mid2_v_reg_1189_pp0_iter4_reg <= tmp_94_mid2_v_reg_1189_pp0_iter3_reg;
        tmp_94_mid2_v_reg_1189_pp0_iter5_reg <= tmp_94_mid2_v_reg_1189_pp0_iter4_reg;
        tmp_94_mid2_v_reg_1189_pp0_iter6_reg <= tmp_94_mid2_v_reg_1189_pp0_iter5_reg;
        tmp_94_mid2_v_reg_1189_pp0_iter7_reg <= tmp_94_mid2_v_reg_1189_pp0_iter6_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001) & (exitcond_flatten6_fu_427_p2 == 1'd0))) begin
        exitcond_mid2_reg_1244 <= exitcond_mid2_fu_631_p2;
        m_mid1_reg_1221 <= m_mid1_fu_601_p3;
        n_mid2_reg_1251 <= n_mid2_fu_649_p3;
        not_exitcond_flatten_1_reg_1216 <= not_exitcond_flatten_1_fu_565_p2;
        not_exitcond_flatten_2_reg_1239 <= not_exitcond_flatten_2_fu_625_p2;
        not_exitcond_flatten_reg_1199 <= not_exitcond_flatten_fu_475_p2;
        tmp_117_mid5_reg_1234 <= tmp_117_mid5_fu_617_p3;
        tmp_171_reg_1204 <= tmp_171_fu_481_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001) & (exitcond_flatten6_fu_427_p2 == 1'd0))) begin
        indvar_flatten_next4_reg_1265 <= indvar_flatten_next4_fu_677_p3;
        indvar_flatten_next5_reg_1270 <= indvar_flatten_next5_fu_691_p3;
        indvar_flatten_next_reg_1260 <= indvar_flatten_next_fu_663_p3;
        tmp_101_mid2_reg_1209 <= tmp_101_mid2_fu_543_p3;
        tmp_108_mid2_reg_1227 <= tmp_108_mid2_fu_609_p3;
        tmp_94_mid2_v_reg_1189 <= tmp_94_mid2_v_fu_459_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        indvar_flatten_next6_reg_1184 <= indvar_flatten_next6_fu_433_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage3_11001) & (1'b1 == ap_CS_fsm_pp0_stage3) & (ap_enable_reg_pp0_iter0 == 1'b1) & (exitcond_flatten6_reg_1180 == 1'd0))) begin
        input_load_16_reg_1372 <= input_r_q1;
        input_load_reg_1362 <= input_r_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage4_11001) & (1'b1 == ap_CS_fsm_pp0_stage4) & (ap_enable_reg_pp0_iter0 == 1'b1) & (exitcond_flatten6_reg_1180 == 1'd0))) begin
        input_load_17_reg_1412 <= input_r_q0;
        input_load_18_reg_1422 <= input_r_q1;
        n_2_reg_1427 <= n_2_fu_962_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001) & (exitcond_flatten6_reg_1180 == 1'd0))) begin
        input_load_19_reg_1437 <= input_r_q0;
        input_load_20_reg_1447 <= input_r_q1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1) & (exitcond_flatten6_reg_1180 == 1'd0))) begin
        or_cond5_reg_1297 <= or_cond5_fu_817_p2;
        tmp_178_reg_1281 <= tmp_178_fu_752_p2;
        tmp_180_reg_1287[11 : 1] <= tmp_180_fu_793_p2[11 : 1];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        or_cond5_reg_1297_pp0_iter1_reg <= or_cond5_reg_1297;
        or_cond5_reg_1297_pp0_iter2_reg <= or_cond5_reg_1297_pp0_iter1_reg;
        or_cond5_reg_1297_pp0_iter3_reg <= or_cond5_reg_1297_pp0_iter2_reg;
        or_cond5_reg_1297_pp0_iter4_reg <= or_cond5_reg_1297_pp0_iter3_reg;
        or_cond5_reg_1297_pp0_iter5_reg <= or_cond5_reg_1297_pp0_iter4_reg;
        or_cond5_reg_1297_pp0_iter6_reg <= or_cond5_reg_1297_pp0_iter5_reg;
        or_cond5_reg_1297_pp0_iter7_reg <= or_cond5_reg_1297_pp0_iter6_reg;
        or_cond5_reg_1297_pp0_iter8_reg <= or_cond5_reg_1297_pp0_iter7_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage4_11001) & (1'b1 == ap_CS_fsm_pp0_stage4) & (exitcond_flatten6_reg_1180_pp0_iter7_reg == 1'd0))) begin
        output_addr_reg_1562 <= tmp_233_cast_fu_1139_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage4_11001) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
        output_addr_reg_1562_pp0_iter8_reg <= output_addr_reg_1562;
        tmp_101_reg_1377_pp0_iter1_reg <= tmp_101_reg_1377;
        tmp_114_reg_1532_pp0_iter3_reg <= tmp_114_reg_1532;
        tmp_114_reg_1532_pp0_iter4_reg <= tmp_114_reg_1532_pp0_iter3_reg;
        tmp_114_reg_1532_pp0_iter5_reg <= tmp_114_reg_1532_pp0_iter4_reg;
        tmp_116_reg_1537_pp0_iter3_reg <= tmp_116_reg_1537;
        tmp_116_reg_1537_pp0_iter4_reg <= tmp_116_reg_1537_pp0_iter3_reg;
        tmp_116_reg_1537_pp0_iter5_reg <= tmp_116_reg_1537_pp0_iter4_reg;
        tmp_116_reg_1537_pp0_iter6_reg <= tmp_116_reg_1537_pp0_iter5_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage4_11001) & (1'b1 == ap_CS_fsm_pp0_stage4) & (exitcond_flatten6_reg_1180 == 1'd0))) begin
        tmp_101_reg_1377 <= tmp_101_fu_936_p2;
        weights_2_load_reg_1407 <= weights_2_q0;
        weights_3_load_reg_1417 <= weights_3_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage2_11001) & (1'b1 == ap_CS_fsm_pp0_stage2) & (exitcond_flatten6_reg_1180 == 1'd0))) begin
        tmp_104_cast_reg_1319[3 : 0] <= tmp_104_cast_fu_867_p1[3 : 0];
        tmp_247_cast_reg_1301[9 : 0] <= tmp_247_cast_fu_856_p1[9 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage2_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2) & (exitcond_flatten6_reg_1180_pp0_iter1_reg == 1'd0))) begin
        tmp_105_reg_1452 <= grp_fu_409_p2;
        tmp_107_reg_1457 <= grp_fu_413_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage2_11001) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2) & (exitcond_flatten6_reg_1180_pp0_iter2_reg == 1'd0))) begin
        tmp_106_reg_1512 <= grp_fu_397_p2;
        tmp_108_reg_1517 <= grp_fu_401_p2;
        tmp_92_fu_118 <= grp_fu_401_p2;
        tmp_93_fu_114 <= grp_fu_397_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage3_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3) & (exitcond_flatten6_reg_1180_pp0_iter1_reg == 1'd0))) begin
        tmp_109_reg_1472 <= grp_fu_409_p2;
        tmp_111_reg_1477 <= grp_fu_413_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage3_11001) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3) & (exitcond_flatten6_reg_1180_pp0_iter2_reg == 1'd0))) begin
        tmp_110_reg_1522 <= grp_fu_397_p2;
        tmp_112_reg_1527 <= grp_fu_401_p2;
        tmp_90_fu_126 <= grp_fu_401_p2;
        tmp_91_fu_122 <= grp_fu_397_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage3_11001) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
        tmp_110_reg_1522_pp0_iter3_reg <= tmp_110_reg_1522;
        tmp_112_reg_1527_pp0_iter3_reg <= tmp_112_reg_1527;
        tmp_112_reg_1527_pp0_iter4_reg <= tmp_112_reg_1527_pp0_iter3_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage4_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4) & (exitcond_flatten6_reg_1180_pp0_iter1_reg == 1'd0))) begin
        tmp_113_reg_1492 <= grp_fu_409_p2;
        tmp_115_reg_1497 <= grp_fu_413_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage4_11001) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4) & (exitcond_flatten6_reg_1180_pp0_iter2_reg == 1'd0))) begin
        tmp_114_reg_1532 <= grp_fu_397_p2;
        tmp_116_reg_1537 <= grp_fu_401_p2;
        tmp_89_fu_130 <= grp_fu_397_p2;
        tmp_s_fu_134 <= grp_fu_401_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (exitcond_flatten6_reg_1180 == 1'd0))) begin
        tmp_115_mid2_reg_1275 <= tmp_115_mid2_fu_742_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage2_11001) & (or_cond5_reg_1297_pp0_iter3_reg == 1'd1) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        tmp_118_reg_1542 <= grp_fu_405_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage3_11001) & (or_cond5_reg_1297_pp0_iter4_reg == 1'd1) & (ap_enable_reg_pp0_iter4 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
        tmp_119_reg_1547 <= grp_fu_405_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage4_11001) & (or_cond5_reg_1297_pp0_iter5_reg == 1'd1) & (ap_enable_reg_pp0_iter5 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
        tmp_120_reg_1552 <= grp_fu_405_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((or_cond5_reg_1297_pp0_iter6_reg == 1'd1) & (ap_enable_reg_pp0_iter7 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        tmp_121_reg_1557 <= grp_fu_397_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((or_cond5_reg_1297_pp0_iter7_reg == 1'd1) & (ap_enable_reg_pp0_iter8 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        tmp_122_reg_1572 <= grp_fu_401_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((or_cond5_reg_1297_pp0_iter8_reg == 1'd1) & (ap_enable_reg_pp0_iter9 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        tmp_123_reg_1582 <= grp_fu_405_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage3_11001) & (1'b1 == ap_CS_fsm_pp0_stage3) & (exitcond_flatten6_reg_1180 == 1'd0))) begin
        weights_0_load_reg_1347 <= weights_0_q0;
        weights_1_load_reg_1367 <= weights_1_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001) & (exitcond_flatten6_reg_1180 == 1'd0))) begin
        weights_4_load_reg_1432 <= weights_4_q0;
        weights_5_load_reg_1442 <= weights_5_q0;
    end
end

always @ (*) begin
    if ((exitcond_flatten6_fu_427_p2 == 1'd1)) begin
        ap_condition_pp0_exit_iter0_state2 = 1'b1;
    end else begin
        ap_condition_pp0_exit_iter0_state2 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state49) | ((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1)))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter6 == 1'b0) & (ap_enable_reg_pp0_iter9 == 1'b0) & (ap_enable_reg_pp0_iter8 == 1'b0) & (ap_enable_reg_pp0_iter7 == 1'b0) & (ap_enable_reg_pp0_iter5 == 1'b0) & (ap_enable_reg_pp0_iter4 == 1'b0) & (ap_enable_reg_pp0_iter3 == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (exitcond_flatten6_reg_1180 == 1'd0))) begin
        ap_phi_mux_co_phi_fu_313_p4 = tmp_94_mid2_v_reg_1189;
    end else begin
        ap_phi_mux_co_phi_fu_313_p4 = co_reg_309;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (exitcond_flatten6_reg_1180 == 1'd0))) begin
        ap_phi_mux_h_phi_fu_335_p4 = tmp_101_mid2_reg_1209;
    end else begin
        ap_phi_mux_h_phi_fu_335_p4 = h_reg_331;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (exitcond_flatten6_reg_1180 == 1'd0))) begin
        ap_phi_mux_indvar_flatten4_phi_fu_302_p4 = indvar_flatten_next6_reg_1184;
    end else begin
        ap_phi_mux_indvar_flatten4_phi_fu_302_p4 = indvar_flatten4_reg_298;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (exitcond_flatten6_reg_1180 == 1'd0))) begin
        ap_phi_mux_indvar_flatten5_phi_fu_324_p4 = indvar_flatten_next5_reg_1270;
    end else begin
        ap_phi_mux_indvar_flatten5_phi_fu_324_p4 = indvar_flatten5_reg_320;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (exitcond_flatten6_reg_1180 == 1'd0))) begin
        ap_phi_mux_indvar_flatten6_phi_fu_346_p4 = indvar_flatten_next4_reg_1265;
    end else begin
        ap_phi_mux_indvar_flatten6_phi_fu_346_p4 = indvar_flatten6_reg_342;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (exitcond_flatten6_reg_1180 == 1'd0))) begin
        ap_phi_mux_indvar_flatten_phi_fu_368_p4 = indvar_flatten_next_reg_1260;
    end else begin
        ap_phi_mux_indvar_flatten_phi_fu_368_p4 = indvar_flatten_reg_364;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (exitcond_flatten6_reg_1180 == 1'd0))) begin
        ap_phi_mux_m_phi_fu_379_p4 = tmp_115_mid2_reg_1275;
    end else begin
        ap_phi_mux_m_phi_fu_379_p4 = m_reg_375;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (exitcond_flatten6_reg_1180 == 1'd0))) begin
        ap_phi_mux_n_phi_fu_390_p4 = n_2_reg_1427;
    end else begin
        ap_phi_mux_n_phi_fu_390_p4 = n_reg_386;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (exitcond_flatten6_reg_1180 == 1'd0))) begin
        ap_phi_mux_w_phi_fu_357_p4 = tmp_108_mid2_reg_1227;
    end else begin
        ap_phi_mux_w_phi_fu_357_p4 = w_reg_353;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state49)) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage4_11001) & (ap_enable_reg_pp0_iter7 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
        bias_ce0 = 1'b1;
    end else begin
        bias_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage1) & (ap_enable_reg_pp0_iter6 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        grp_fu_397_p0 = tmp_120_reg_1552;
    end else if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grp_fu_397_p0 = p_10_fu_1025_p3;
    end else if (((1'b0 == ap_block_pp0_stage4) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
        grp_fu_397_p0 = p_12_fu_1003_p3;
    end else if (((1'b0 == ap_block_pp0_stage3) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
        grp_fu_397_p0 = p_14_fu_981_p3;
    end else begin
        grp_fu_397_p0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage1) & (ap_enable_reg_pp0_iter6 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        grp_fu_397_p1 = tmp_114_reg_1532_pp0_iter5_reg;
    end else if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grp_fu_397_p1 = tmp_113_reg_1492;
    end else if (((1'b0 == ap_block_pp0_stage4) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
        grp_fu_397_p1 = tmp_109_reg_1472;
    end else if (((1'b0 == ap_block_pp0_stage3) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
        grp_fu_397_p1 = tmp_105_reg_1452;
    end else begin
        grp_fu_397_p1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage1) & (ap_enable_reg_pp0_iter7 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        grp_fu_401_p0 = tmp_121_reg_1557;
    end else if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grp_fu_401_p0 = p_s_fu_1017_p3;
    end else if (((1'b0 == ap_block_pp0_stage4) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
        grp_fu_401_p0 = p_11_fu_995_p3;
    end else if (((1'b0 == ap_block_pp0_stage3) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
        grp_fu_401_p0 = p_13_fu_973_p3;
    end else begin
        grp_fu_401_p0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage1) & (ap_enable_reg_pp0_iter7 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        grp_fu_401_p1 = tmp_116_reg_1537_pp0_iter6_reg;
    end else if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grp_fu_401_p1 = tmp_115_reg_1497;
    end else if (((1'b0 == ap_block_pp0_stage4) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
        grp_fu_401_p1 = tmp_111_reg_1477;
    end else if (((1'b0 == ap_block_pp0_stage3) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
        grp_fu_401_p1 = tmp_107_reg_1457;
    end else begin
        grp_fu_401_p1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage1) & (ap_enable_reg_pp0_iter8 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        grp_fu_405_p0 = tmp_122_reg_1572;
    end else if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter5 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grp_fu_405_p0 = tmp_119_reg_1547;
    end else if (((1'b0 == ap_block_pp0_stage4) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
        grp_fu_405_p0 = tmp_118_reg_1542;
    end else if (((1'b0 == ap_block_pp0_stage3) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
        grp_fu_405_p0 = tmp_106_reg_1512;
    end else begin
        grp_fu_405_p0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage1) & (ap_enable_reg_pp0_iter8 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        grp_fu_405_p1 = bias_load_reg_1577;
    end else if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter5 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grp_fu_405_p1 = tmp_112_reg_1527_pp0_iter4_reg;
    end else if (((1'b0 == ap_block_pp0_stage4) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
        grp_fu_405_p1 = tmp_110_reg_1522_pp0_iter3_reg;
    end else if (((1'b0 == ap_block_pp0_stage3) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
        grp_fu_405_p1 = tmp_108_reg_1517;
    end else begin
        grp_fu_405_p1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        grp_fu_409_p0 = weights_4_load_reg_1432;
    end else if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grp_fu_409_p0 = weights_2_load_reg_1407;
    end else if (((1'b0 == ap_block_pp0_stage4) & (1'b1 == ap_CS_fsm_pp0_stage4) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        grp_fu_409_p0 = weights_0_load_reg_1347;
    end else begin
        grp_fu_409_p0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        grp_fu_409_p1 = input_load_19_reg_1437;
    end else if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grp_fu_409_p1 = input_load_17_reg_1412;
    end else if (((1'b0 == ap_block_pp0_stage4) & (1'b1 == ap_CS_fsm_pp0_stage4) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        grp_fu_409_p1 = input_load_reg_1362;
    end else begin
        grp_fu_409_p1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        grp_fu_413_p0 = weights_5_load_reg_1442;
    end else if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grp_fu_413_p0 = weights_3_load_reg_1417;
    end else if (((1'b0 == ap_block_pp0_stage4) & (1'b1 == ap_CS_fsm_pp0_stage4) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        grp_fu_413_p0 = weights_1_load_reg_1367;
    end else begin
        grp_fu_413_p0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        grp_fu_413_p1 = input_load_20_reg_1447;
    end else if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grp_fu_413_p1 = input_load_18_reg_1422;
    end else if (((1'b0 == ap_block_pp0_stage4) & (1'b1 == ap_CS_fsm_pp0_stage4) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        grp_fu_413_p1 = input_load_16_reg_1372;
    end else begin
        grp_fu_413_p1 = 'bx;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp0_iter0 == 1'b1)) begin
        if (((1'b0 == ap_block_pp0_stage4) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
            input_r_address0 = tmp_252_cast_fu_947_p1;
        end else if (((1'b0 == ap_block_pp0_stage3) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
            input_r_address0 = tmp_250_cast_fu_907_p1;
        end else if (((1'b0 == ap_block_pp0_stage2) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
            input_r_address0 = tmp_248_cast_fu_876_p1;
        end else begin
            input_r_address0 = 'bx;
        end
    end else begin
        input_r_address0 = 'bx;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp0_iter0 == 1'b1)) begin
        if (((1'b0 == ap_block_pp0_stage4) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
            input_r_address1 = tmp_253_cast_fu_957_p1;
        end else if (((1'b0 == ap_block_pp0_stage3) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
            input_r_address1 = tmp_251_cast_fu_917_p1;
        end else if (((1'b0 == ap_block_pp0_stage2) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
            input_r_address1 = tmp_249_cast_fu_887_p1;
        end else begin
            input_r_address1 = 'bx;
        end
    end else begin
        input_r_address1 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage4_11001) & (1'b1 == ap_CS_fsm_pp0_stage4) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b0 == ap_block_pp0_stage3_11001) & (1'b1 == ap_CS_fsm_pp0_stage3) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b0 == ap_block_pp0_stage2_11001) & (1'b1 == ap_CS_fsm_pp0_stage2) & (ap_enable_reg_pp0_iter0 == 1'b1)))) begin
        input_r_ce0 = 1'b1;
    end else begin
        input_r_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage4_11001) & (1'b1 == ap_CS_fsm_pp0_stage4) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b0 == ap_block_pp0_stage3_11001) & (1'b1 == ap_CS_fsm_pp0_stage3) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b0 == ap_block_pp0_stage2_11001) & (1'b1 == ap_CS_fsm_pp0_stage2) & (ap_enable_reg_pp0_iter0 == 1'b1)))) begin
        input_r_ce1 = 1'b1;
    end else begin
        input_r_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter9 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        output_r_ce0 = 1'b1;
    end else begin
        output_r_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((or_cond5_reg_1297_pp0_iter8_reg == 1'd1) & (1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter9 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        output_r_we0 = 1'b1;
    end else begin
        output_r_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage2_11001) & (1'b1 == ap_CS_fsm_pp0_stage2) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        weights_0_ce0 = 1'b1;
    end else begin
        weights_0_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage2_11001) & (1'b1 == ap_CS_fsm_pp0_stage2) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        weights_1_ce0 = 1'b1;
    end else begin
        weights_1_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage3_11001) & (1'b1 == ap_CS_fsm_pp0_stage3) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        weights_2_ce0 = 1'b1;
    end else begin
        weights_2_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage3_11001) & (1'b1 == ap_CS_fsm_pp0_stage3) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        weights_3_ce0 = 1'b1;
    end else begin
        weights_3_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage4_11001) & (1'b1 == ap_CS_fsm_pp0_stage4) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        weights_4_ce0 = 1'b1;
    end else begin
        weights_4_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage4_11001) & (1'b1 == ap_CS_fsm_pp0_stage4) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        weights_5_ce0 = 1'b1;
    end else begin
        weights_5_ce0 = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_pp0_stage0 : begin
            if ((~((1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (exitcond_flatten6_fu_427_p2 == 1'd1)) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage1;
            end else if (((1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (exitcond_flatten6_fu_427_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state49;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end
        end
        ap_ST_fsm_pp0_stage1 : begin
            if ((~((1'b0 == ap_block_pp0_stage1_subdone) & (ap_enable_reg_pp0_iter8 == 1'b0) & (ap_enable_reg_pp0_iter9 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)) & (1'b0 == ap_block_pp0_stage1_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage2;
            end else if (((1'b0 == ap_block_pp0_stage1_subdone) & (ap_enable_reg_pp0_iter8 == 1'b0) & (ap_enable_reg_pp0_iter9 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
                ap_NS_fsm = ap_ST_fsm_state49;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage1;
            end
        end
        ap_ST_fsm_pp0_stage2 : begin
            if ((1'b0 == ap_block_pp0_stage2_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage3;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage2;
            end
        end
        ap_ST_fsm_pp0_stage3 : begin
            if ((1'b0 == ap_block_pp0_stage3_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage4;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage3;
            end
        end
        ap_ST_fsm_pp0_stage4 : begin
            if ((1'b0 == ap_block_pp0_stage4_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage4;
            end
        end
        ap_ST_fsm_state49 : begin
            ap_NS_fsm = ap_ST_fsm_state1;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_pp0_stage1 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_pp0_stage2 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_pp0_stage3 = ap_CS_fsm[32'd4];

assign ap_CS_fsm_pp0_stage4 = ap_CS_fsm[32'd5];

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state49 = ap_CS_fsm[32'd6];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage1 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage1_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage1_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage2 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage2_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage2_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage3 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage3_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage3_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage4 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage4_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage4_subdone = ~(1'b1 == 1'b1);

assign ap_block_state10_pp0_stage3_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state11_pp0_stage4_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state12_pp0_stage0_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state13_pp0_stage1_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state14_pp0_stage2_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state15_pp0_stage3_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state16_pp0_stage4_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state17_pp0_stage0_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state18_pp0_stage1_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state19_pp0_stage2_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state20_pp0_stage3_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state21_pp0_stage4_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state22_pp0_stage0_iter4 = ~(1'b1 == 1'b1);

assign ap_block_state23_pp0_stage1_iter4 = ~(1'b1 == 1'b1);

assign ap_block_state24_pp0_stage2_iter4 = ~(1'b1 == 1'b1);

assign ap_block_state25_pp0_stage3_iter4 = ~(1'b1 == 1'b1);

assign ap_block_state26_pp0_stage4_iter4 = ~(1'b1 == 1'b1);

assign ap_block_state27_pp0_stage0_iter5 = ~(1'b1 == 1'b1);

assign ap_block_state28_pp0_stage1_iter5 = ~(1'b1 == 1'b1);

assign ap_block_state29_pp0_stage2_iter5 = ~(1'b1 == 1'b1);

assign ap_block_state2_pp0_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state30_pp0_stage3_iter5 = ~(1'b1 == 1'b1);

assign ap_block_state31_pp0_stage4_iter5 = ~(1'b1 == 1'b1);

assign ap_block_state32_pp0_stage0_iter6 = ~(1'b1 == 1'b1);

assign ap_block_state33_pp0_stage1_iter6 = ~(1'b1 == 1'b1);

assign ap_block_state34_pp0_stage2_iter6 = ~(1'b1 == 1'b1);

assign ap_block_state35_pp0_stage3_iter6 = ~(1'b1 == 1'b1);

assign ap_block_state36_pp0_stage4_iter6 = ~(1'b1 == 1'b1);

assign ap_block_state37_pp0_stage0_iter7 = ~(1'b1 == 1'b1);

assign ap_block_state38_pp0_stage1_iter7 = ~(1'b1 == 1'b1);

assign ap_block_state39_pp0_stage2_iter7 = ~(1'b1 == 1'b1);

assign ap_block_state3_pp0_stage1_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state40_pp0_stage3_iter7 = ~(1'b1 == 1'b1);

assign ap_block_state41_pp0_stage4_iter7 = ~(1'b1 == 1'b1);

assign ap_block_state42_pp0_stage0_iter8 = ~(1'b1 == 1'b1);

assign ap_block_state43_pp0_stage1_iter8 = ~(1'b1 == 1'b1);

assign ap_block_state44_pp0_stage2_iter8 = ~(1'b1 == 1'b1);

assign ap_block_state45_pp0_stage3_iter8 = ~(1'b1 == 1'b1);

assign ap_block_state46_pp0_stage4_iter8 = ~(1'b1 == 1'b1);

assign ap_block_state47_pp0_stage0_iter9 = ~(1'b1 == 1'b1);

assign ap_block_state48_pp0_stage1_iter9 = ~(1'b1 == 1'b1);

assign ap_block_state4_pp0_stage2_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state5_pp0_stage3_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state6_pp0_stage4_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state7_pp0_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state8_pp0_stage1_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state9_pp0_stage2_iter1 = ~(1'b1 == 1'b1);

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign bias_address0 = tmp_94_mid2_fu_1063_p1;

assign co_3_fu_439_p2 = (ap_phi_mux_co_phi_fu_313_p4 + 5'd1);

assign exitcond_flatten1_fu_499_p2 = ((ap_phi_mux_indvar_flatten_phi_fu_368_p4 == 6'd25) ? 1'b1 : 1'b0);

assign exitcond_flatten2_fu_511_p2 = ((ap_phi_mux_indvar_flatten6_phi_fu_346_p4 == 9'd250) ? 1'b1 : 1'b0);

assign exitcond_flatten36_m_fu_517_p2 = (not_exitcond_flatten_fu_475_p2 & exitcond_flatten2_fu_511_p2);

assign exitcond_flatten36_n_fu_559_p2 = (exitcond_flatten2_fu_511_p2 ^ 1'd1);

assign exitcond_flatten6_fu_427_p2 = ((ap_phi_mux_indvar_flatten4_phi_fu_302_p4 == 16'd40000) ? 1'b1 : 1'b0);

assign exitcond_flatten_fu_445_p2 = ((ap_phi_mux_indvar_flatten5_phi_fu_324_p4 == 12'd2500) ? 1'b1 : 1'b0);

assign exitcond_flatten_mid_2_fu_577_p2 = (not_exitcond_flatten_1_fu_565_p2 & exitcond_flatten_mid_fu_505_p2);

assign exitcond_flatten_mid_fu_505_p2 = (not_exitcond_flatten_fu_475_p2 & exitcond_flatten1_fu_499_p2);

assign exitcond_fu_487_p2 = ((ap_phi_mux_n_phi_fu_390_p4 == 3'd5) ? 1'b1 : 1'b0);

assign exitcond_mid1_fu_571_p2 = (not_exitcond_flatten_1_fu_565_p2 & exitcond_mid_fu_493_p2);

assign exitcond_mid2_fu_631_p2 = (not_exitcond_flatten_2_fu_625_p2 & exitcond_mid1_fu_571_p2);

assign exitcond_mid_fu_493_p2 = (not_exitcond_flatten_fu_475_p2 & exitcond_fu_487_p2);

assign h_3_fu_523_p2 = (h_mid_fu_451_p3 + 4'd1);

assign h_mid_fu_451_p3 = ((exitcond_flatten_fu_445_p2[0:0] === 1'b1) ? 4'd0 : ap_phi_mux_h_phi_fu_335_p4);

assign indvar_flatten34_op_fu_671_p2 = (ap_phi_mux_indvar_flatten6_phi_fu_346_p4 + 9'd1);

assign indvar_flatten84_op_fu_685_p2 = (ap_phi_mux_indvar_flatten5_phi_fu_324_p4 + 12'd1);

assign indvar_flatten_next4_fu_677_p3 = ((tmp_172_fu_529_p2[0:0] === 1'b1) ? 9'd1 : indvar_flatten34_op_fu_671_p2);

assign indvar_flatten_next5_fu_691_p3 = ((exitcond_flatten_fu_445_p2[0:0] === 1'b1) ? 12'd1 : indvar_flatten84_op_fu_685_p2);

assign indvar_flatten_next6_fu_433_p2 = (ap_phi_mux_indvar_flatten4_phi_fu_302_p4 + 16'd1);

assign indvar_flatten_next_fu_663_p3 = ((tmp_95_fu_595_p2[0:0] === 1'b1) ? 6'd1 : indvar_flatten_op_fu_657_p2);

assign indvar_flatten_op_fu_657_p2 = (ap_phi_mux_indvar_flatten_phi_fu_368_p4 + 6'd1);

assign m_1_fu_733_p2 = (m_mid1_reg_1221 + 3'd1);

assign m_cast_fu_417_p1 = ap_phi_mux_m_phi_fu_379_p4;

assign m_cast_mid1_fu_738_p1 = m_1_fu_733_p2;

assign m_mid1_fu_601_p3 = ((tmp_95_fu_595_p2[0:0] === 1'b1) ? 3'd0 : ap_phi_mux_m_phi_fu_379_p4);

assign n_2_fu_962_p2 = (n_mid2_reg_1251 + 3'd1);

assign n_cast_fu_844_p1 = n_mid2_reg_1251;

assign n_mid2_fu_649_p3 = ((tmp_96_fu_643_p2[0:0] === 1'b1) ? 3'd0 : ap_phi_mux_n_phi_fu_390_p4);

assign not_exitcond_flatten_1_fu_565_p2 = (exitcond_flatten_fu_445_p2 | exitcond_flatten36_n_fu_559_p2);

assign not_exitcond_flatten_2_fu_625_p2 = (exitcond_flatten_mid_2_fu_577_p2 ^ 1'd1);

assign not_exitcond_flatten_fu_475_p2 = (exitcond_flatten_fu_445_p2 ^ 1'd1);

assign or_cond5_fu_817_p2 = (tmp_118_mid2_fu_805_p3 & tmp_117_fu_812_p2);

assign output_r_address0 = output_addr_reg_1562_pp0_iter8_reg;

assign output_r_d0 = tmp_123_reg_1582;

assign p_10_fu_1025_p3 = ((tmp_101_reg_1377_pp0_iter1_reg[0:0] === 1'b1) ? 32'd0 : tmp_89_fu_130);

assign p_11_fu_995_p3 = ((tmp_101_reg_1377[0:0] === 1'b1) ? 32'd0 : tmp_90_fu_126);

assign p_12_fu_1003_p3 = ((tmp_101_reg_1377[0:0] === 1'b1) ? 32'd0 : tmp_91_fu_122);

assign p_13_fu_973_p3 = ((tmp_101_reg_1377[0:0] === 1'b1) ? 32'd0 : tmp_92_fu_118);

assign p_14_fu_981_p3 = ((tmp_101_reg_1377[0:0] === 1'b1) ? 32'd0 : tmp_93_fu_114);

assign p_s_fu_1017_p3 = ((tmp_101_reg_1377_pp0_iter1_reg[0:0] === 1'b1) ? 32'd0 : tmp_s_fu_134);

assign p_shl1_cast_fu_709_p1 = tmp_fu_702_p3;

assign p_shl2_cast_fu_1074_p1 = tmp_168_fu_1067_p3;

assign p_shl3_cast_fu_1085_p1 = tmp_169_fu_1078_p3;

assign p_shl4_cast_fu_1104_p3 = {{tmp_173_fu_1098_p2}, {3'd0}};

assign p_shl5_cast_fu_1120_p1 = tmp_94_fu_1112_p3;

assign p_shl6_cast_fu_826_p3 = {{tmp_178_reg_1281}, {2'd0}};

assign p_shl9_cast_fu_789_p1 = tmp_99_fu_781_p3;

assign p_shl_cast_fu_777_p1 = tmp_98_fu_769_p3;

assign tmp_100_fu_932_p2 = (tmp_115_mid2_reg_1275 | n_mid2_reg_1251);

assign tmp_101_fu_936_p2 = ((tmp_100_fu_932_p2 == 3'd0) ? 1'b1 : 1'b0);

assign tmp_101_mid2_cast_fu_1095_p1 = tmp_101_mid2_reg_1209_pp0_iter7_reg;

assign tmp_101_mid2_fu_543_p3 = ((exitcond_flatten36_m_fu_517_p2[0:0] === 1'b1) ? h_3_fu_523_p2 : h_mid_fu_451_p3);

assign tmp_102_cast_fu_847_p1 = n_mid2_reg_1251;

assign tmp_103_fu_862_p2 = (tmp_108_mid2_reg_1227 + n_cast_fu_844_p1);

assign tmp_104_cast_fu_867_p1 = tmp_103_fu_862_p2;

assign tmp_108_mid2_cast_fu_1130_p1 = tmp_108_mid2_reg_1227_pp0_iter7_reg;

assign tmp_108_mid2_fu_609_p3 = ((exitcond_flatten_mid_2_fu_577_p2[0:0] === 1'b1) ? w_4_fu_583_p2 : w_mid_fu_535_p3);

assign tmp_115_mid2_cast_fu_748_p1 = tmp_115_mid2_fu_742_p3;

assign tmp_115_mid2_fu_742_p3 = ((exitcond_mid2_reg_1244[0:0] === 1'b1) ? m_1_fu_733_p2 : m_mid1_reg_1221);

assign tmp_116_mid1_fu_758_p2 = (tmp_101_mid2_reg_1209 + m_cast_mid1_fu_738_p1);

assign tmp_117_fu_812_p2 = ((n_mid2_reg_1251 == 3'd4) ? 1'b1 : 1'b0);

assign tmp_117_mid2_fu_763_p3 = ((exitcond_mid2_reg_1244[0:0] === 1'b1) ? tmp_116_mid1_fu_758_p2 : tmp_117_mid5_reg_1234);

assign tmp_117_mid3_fu_551_p3 = ((exitcond_flatten36_m_fu_517_p2[0:0] === 1'b1) ? h_3_fu_523_p2 : tmp_117_mid_fu_467_p3);

assign tmp_117_mid5_fu_617_p3 = ((exitcond_flatten_mid_2_fu_577_p2[0:0] === 1'b1) ? tmp_101_mid2_fu_543_p3 : tmp_117_mid3_fu_551_p3);

assign tmp_117_mid_fu_467_p3 = ((exitcond_flatten_fu_445_p2[0:0] === 1'b1) ? 4'd0 : tmp_97_fu_421_p2);

assign tmp_118_mid1_fu_799_p2 = ((m_1_fu_733_p2 == 3'd4) ? 1'b1 : 1'b0);

assign tmp_118_mid2_fu_805_p3 = ((exitcond_mid2_reg_1244[0:0] === 1'b1) ? tmp_118_mid1_fu_799_p2 : tmp_118_mid4_fu_728_p2);

assign tmp_118_mid3_fu_723_p2 = (tmp_118_mid_fu_719_p2 & not_exitcond_flatten_1_reg_1216);

assign tmp_118_mid4_fu_728_p2 = (tmp_118_mid3_fu_723_p2 & not_exitcond_flatten_2_reg_1239);

assign tmp_118_mid_fu_719_p2 = (tmp_171_reg_1204 & not_exitcond_flatten_reg_1199);

assign tmp_167_fu_713_p2 = (p_shl1_cast_fu_709_p1 + tmp_94_mid2_cast_fu_699_p1);

assign tmp_168_fu_1067_p3 = {{tmp_94_mid2_v_reg_1189_pp0_iter7_reg}, {3'd0}};

assign tmp_169_fu_1078_p3 = {{tmp_94_mid2_v_reg_1189_pp0_iter7_reg}, {1'd0}};

assign tmp_170_fu_1089_p2 = (p_shl2_cast_fu_1074_p1 + p_shl3_cast_fu_1085_p1);

assign tmp_171_fu_481_p2 = ((ap_phi_mux_m_phi_fu_379_p4 == 3'd4) ? 1'b1 : 1'b0);

assign tmp_172_fu_529_p2 = (exitcond_flatten_fu_445_p2 | exitcond_flatten36_m_fu_517_p2);

assign tmp_173_fu_1098_p2 = (tmp_101_mid2_cast_fu_1095_p1 + tmp_170_fu_1089_p2);

assign tmp_174_fu_1124_p2 = (p_shl4_cast_fu_1104_p3 + p_shl5_cast_fu_1120_p1);

assign tmp_175_fu_589_p2 = (exitcond_flatten_mid_2_fu_577_p2 | exitcond_flatten36_m_fu_517_p2);

assign tmp_176_fu_1133_p2 = (tmp_108_mid2_cast_fu_1130_p1 + tmp_174_fu_1124_p2);

assign tmp_177_fu_637_p2 = (exitcond_mid2_fu_631_p2 | exitcond_flatten_mid_2_fu_577_p2);

assign tmp_178_fu_752_p2 = (tmp_115_mid2_cast_fu_748_p1 + tmp_167_fu_713_p2);

assign tmp_179_fu_833_p2 = (p_shl6_cast_fu_826_p3 + tmp_236_cast_fu_823_p1);

assign tmp_180_fu_793_p2 = (p_shl_cast_fu_777_p1 - p_shl9_cast_fu_789_p1);

assign tmp_181_fu_839_p2 = (tmp_180_reg_1287 + 12'd196);

assign tmp_182_fu_892_p2 = (tmp_180_reg_1287 + 12'd392);

assign tmp_183_fu_897_p2 = (tmp_180_reg_1287 + 12'd588);

assign tmp_184_fu_922_p2 = (tmp_180_reg_1287 + 12'd784);

assign tmp_185_fu_927_p2 = (tmp_180_reg_1287 + 12'd980);

assign tmp_186_fu_850_p2 = (tmp_102_cast_fu_847_p1 + tmp_179_fu_833_p2);

assign tmp_187_fu_871_p2 = (tmp_104_cast_fu_867_p1 + tmp_180_reg_1287);

assign tmp_188_fu_881_p2 = (tmp_104_cast_fu_867_p1 + tmp_181_fu_839_p2);

assign tmp_189_fu_902_p2 = (tmp_104_cast_reg_1319 + tmp_182_fu_892_p2);

assign tmp_190_fu_912_p2 = (tmp_104_cast_reg_1319 + tmp_183_fu_897_p2);

assign tmp_191_fu_942_p2 = (tmp_104_cast_reg_1319 + tmp_184_fu_922_p2);

assign tmp_192_fu_952_p2 = (tmp_104_cast_reg_1319 + tmp_185_fu_927_p2);

assign tmp_233_cast_fu_1139_p1 = tmp_176_fu_1133_p2;

assign tmp_236_cast_fu_823_p1 = tmp_178_reg_1281;

assign tmp_247_cast_fu_856_p1 = tmp_186_fu_850_p2;

assign tmp_248_cast_fu_876_p1 = tmp_187_fu_871_p2;

assign tmp_249_cast_fu_887_p1 = tmp_188_fu_881_p2;

assign tmp_250_cast_fu_907_p1 = tmp_189_fu_902_p2;

assign tmp_251_cast_fu_917_p1 = tmp_190_fu_912_p2;

assign tmp_252_cast_fu_947_p1 = tmp_191_fu_942_p2;

assign tmp_253_cast_fu_957_p1 = tmp_192_fu_952_p2;

assign tmp_94_fu_1112_p3 = {{tmp_173_fu_1098_p2}, {1'd0}};

assign tmp_94_mid2_cast_fu_699_p1 = tmp_94_mid2_v_reg_1189;

assign tmp_94_mid2_fu_1063_p1 = tmp_94_mid2_v_reg_1189_pp0_iter7_reg;

assign tmp_94_mid2_v_fu_459_p3 = ((exitcond_flatten_fu_445_p2[0:0] === 1'b1) ? co_3_fu_439_p2 : ap_phi_mux_co_phi_fu_313_p4);

assign tmp_95_fu_595_p2 = (tmp_175_fu_589_p2 | exitcond_flatten_fu_445_p2);

assign tmp_96_fu_643_p2 = (tmp_177_fu_637_p2 | tmp_172_fu_529_p2);

assign tmp_97_fu_421_p2 = (m_cast_fu_417_p1 + ap_phi_mux_h_phi_fu_335_p4);

assign tmp_98_fu_769_p3 = {{tmp_117_mid2_fu_763_p3}, {4'd0}};

assign tmp_99_fu_781_p3 = {{tmp_117_mid2_fu_763_p3}, {1'd0}};

assign tmp_fu_702_p3 = {{tmp_94_mid2_v_reg_1189}, {2'd0}};

assign w_4_fu_583_p2 = (w_mid_fu_535_p3 + 4'd1);

assign w_mid_fu_535_p3 = ((tmp_172_fu_529_p2[0:0] === 1'b1) ? 4'd0 : ap_phi_mux_w_phi_fu_357_p4);

assign weights_0_address0 = tmp_247_cast_fu_856_p1;

assign weights_1_address0 = tmp_247_cast_fu_856_p1;

assign weights_2_address0 = tmp_247_cast_reg_1301;

assign weights_3_address0 = tmp_247_cast_reg_1301;

assign weights_4_address0 = tmp_247_cast_reg_1301;

assign weights_5_address0 = tmp_247_cast_reg_1301;

always @ (posedge ap_clk) begin
    tmp_180_reg_1287[0] <= 1'b0;
    tmp_247_cast_reg_1301[63:10] <= 54'b000000000000000000000000000000000000000000000000000000;
    tmp_104_cast_reg_1319[11:4] <= 8'b00000000;
end

endmodule //convolution_3
