// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2018.2
// Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#ifndef _conv1_HH_
#define _conv1_HH_

#include "systemc.h"
#include "AESL_pkg.h"

#include "convulution1.h"
#include "maxpool_2.h"
#include "relu_1.h"
#include "relu_2.h"
#include "store_weights.h"
#include "store_output.h"
#include "store_input.h"
#include "store_bias.h"
#include "conv1_input_oc_0.h"
#include "conv1_weights_oc_0.h"
#include "conv1_bias_oc.h"
#include "conv1_output1_oc.h"
#include "conv1_output2_oc.h"
#include "conv1_CTL_s_axi.h"
#include "conv1_DATA_INPUT_m_axi.h"
#include "conv1_DATA_WEIGHT_m_axi.h"
#include "conv1_DATA_BIAS_m_axi.h"
#include "conv1_DATA_OUTPUT_m_axi.h"

namespace ap_rtl {

template<unsigned int C_M_AXI_DATA_INPUT_ADDR_WIDTH = 32,
         unsigned int C_M_AXI_DATA_INPUT_ID_WIDTH = 1,
         unsigned int C_M_AXI_DATA_INPUT_AWUSER_WIDTH = 1,
         unsigned int C_M_AXI_DATA_INPUT_DATA_WIDTH = 32,
         unsigned int C_M_AXI_DATA_INPUT_WUSER_WIDTH = 1,
         unsigned int C_M_AXI_DATA_INPUT_ARUSER_WIDTH = 1,
         unsigned int C_M_AXI_DATA_INPUT_RUSER_WIDTH = 1,
         unsigned int C_M_AXI_DATA_INPUT_BUSER_WIDTH = 1,
         unsigned int C_M_AXI_DATA_WEIGHT_ADDR_WIDTH = 32,
         unsigned int C_M_AXI_DATA_WEIGHT_ID_WIDTH = 1,
         unsigned int C_M_AXI_DATA_WEIGHT_AWUSER_WIDTH = 1,
         unsigned int C_M_AXI_DATA_WEIGHT_DATA_WIDTH = 32,
         unsigned int C_M_AXI_DATA_WEIGHT_WUSER_WIDTH = 1,
         unsigned int C_M_AXI_DATA_WEIGHT_ARUSER_WIDTH = 1,
         unsigned int C_M_AXI_DATA_WEIGHT_RUSER_WIDTH = 1,
         unsigned int C_M_AXI_DATA_WEIGHT_BUSER_WIDTH = 1,
         unsigned int C_M_AXI_DATA_BIAS_ADDR_WIDTH = 32,
         unsigned int C_M_AXI_DATA_BIAS_ID_WIDTH = 1,
         unsigned int C_M_AXI_DATA_BIAS_AWUSER_WIDTH = 1,
         unsigned int C_M_AXI_DATA_BIAS_DATA_WIDTH = 32,
         unsigned int C_M_AXI_DATA_BIAS_WUSER_WIDTH = 1,
         unsigned int C_M_AXI_DATA_BIAS_ARUSER_WIDTH = 1,
         unsigned int C_M_AXI_DATA_BIAS_RUSER_WIDTH = 1,
         unsigned int C_M_AXI_DATA_BIAS_BUSER_WIDTH = 1,
         unsigned int C_M_AXI_DATA_OUTPUT_ADDR_WIDTH = 32,
         unsigned int C_M_AXI_DATA_OUTPUT_ID_WIDTH = 1,
         unsigned int C_M_AXI_DATA_OUTPUT_AWUSER_WIDTH = 1,
         unsigned int C_M_AXI_DATA_OUTPUT_DATA_WIDTH = 32,
         unsigned int C_M_AXI_DATA_OUTPUT_WUSER_WIDTH = 1,
         unsigned int C_M_AXI_DATA_OUTPUT_ARUSER_WIDTH = 1,
         unsigned int C_M_AXI_DATA_OUTPUT_RUSER_WIDTH = 1,
         unsigned int C_M_AXI_DATA_OUTPUT_BUSER_WIDTH = 1,
         unsigned int C_S_AXI_CTL_ADDR_WIDTH = 6,
         unsigned int C_S_AXI_CTL_DATA_WIDTH = 32>
struct conv1 : public sc_module {
    // Port declarations 200
    sc_in_clk ap_clk;
    sc_in< sc_logic > ap_rst_n;
    sc_out< sc_logic > m_axi_DATA_INPUT_AWVALID;
    sc_in< sc_logic > m_axi_DATA_INPUT_AWREADY;
    sc_out< sc_uint<C_M_AXI_DATA_INPUT_ADDR_WIDTH> > m_axi_DATA_INPUT_AWADDR;
    sc_out< sc_uint<C_M_AXI_DATA_INPUT_ID_WIDTH> > m_axi_DATA_INPUT_AWID;
    sc_out< sc_lv<8> > m_axi_DATA_INPUT_AWLEN;
    sc_out< sc_lv<3> > m_axi_DATA_INPUT_AWSIZE;
    sc_out< sc_lv<2> > m_axi_DATA_INPUT_AWBURST;
    sc_out< sc_lv<2> > m_axi_DATA_INPUT_AWLOCK;
    sc_out< sc_lv<4> > m_axi_DATA_INPUT_AWCACHE;
    sc_out< sc_lv<3> > m_axi_DATA_INPUT_AWPROT;
    sc_out< sc_lv<4> > m_axi_DATA_INPUT_AWQOS;
    sc_out< sc_lv<4> > m_axi_DATA_INPUT_AWREGION;
    sc_out< sc_uint<C_M_AXI_DATA_INPUT_AWUSER_WIDTH> > m_axi_DATA_INPUT_AWUSER;
    sc_out< sc_logic > m_axi_DATA_INPUT_WVALID;
    sc_in< sc_logic > m_axi_DATA_INPUT_WREADY;
    sc_out< sc_uint<C_M_AXI_DATA_INPUT_DATA_WIDTH> > m_axi_DATA_INPUT_WDATA;
    sc_out< sc_uint<C_M_AXI_DATA_INPUT_DATA_WIDTH/8> > m_axi_DATA_INPUT_WSTRB;
    sc_out< sc_logic > m_axi_DATA_INPUT_WLAST;
    sc_out< sc_uint<C_M_AXI_DATA_INPUT_ID_WIDTH> > m_axi_DATA_INPUT_WID;
    sc_out< sc_uint<C_M_AXI_DATA_INPUT_WUSER_WIDTH> > m_axi_DATA_INPUT_WUSER;
    sc_out< sc_logic > m_axi_DATA_INPUT_ARVALID;
    sc_in< sc_logic > m_axi_DATA_INPUT_ARREADY;
    sc_out< sc_uint<C_M_AXI_DATA_INPUT_ADDR_WIDTH> > m_axi_DATA_INPUT_ARADDR;
    sc_out< sc_uint<C_M_AXI_DATA_INPUT_ID_WIDTH> > m_axi_DATA_INPUT_ARID;
    sc_out< sc_lv<8> > m_axi_DATA_INPUT_ARLEN;
    sc_out< sc_lv<3> > m_axi_DATA_INPUT_ARSIZE;
    sc_out< sc_lv<2> > m_axi_DATA_INPUT_ARBURST;
    sc_out< sc_lv<2> > m_axi_DATA_INPUT_ARLOCK;
    sc_out< sc_lv<4> > m_axi_DATA_INPUT_ARCACHE;
    sc_out< sc_lv<3> > m_axi_DATA_INPUT_ARPROT;
    sc_out< sc_lv<4> > m_axi_DATA_INPUT_ARQOS;
    sc_out< sc_lv<4> > m_axi_DATA_INPUT_ARREGION;
    sc_out< sc_uint<C_M_AXI_DATA_INPUT_ARUSER_WIDTH> > m_axi_DATA_INPUT_ARUSER;
    sc_in< sc_logic > m_axi_DATA_INPUT_RVALID;
    sc_out< sc_logic > m_axi_DATA_INPUT_RREADY;
    sc_in< sc_uint<C_M_AXI_DATA_INPUT_DATA_WIDTH> > m_axi_DATA_INPUT_RDATA;
    sc_in< sc_logic > m_axi_DATA_INPUT_RLAST;
    sc_in< sc_uint<C_M_AXI_DATA_INPUT_ID_WIDTH> > m_axi_DATA_INPUT_RID;
    sc_in< sc_uint<C_M_AXI_DATA_INPUT_RUSER_WIDTH> > m_axi_DATA_INPUT_RUSER;
    sc_in< sc_lv<2> > m_axi_DATA_INPUT_RRESP;
    sc_in< sc_logic > m_axi_DATA_INPUT_BVALID;
    sc_out< sc_logic > m_axi_DATA_INPUT_BREADY;
    sc_in< sc_lv<2> > m_axi_DATA_INPUT_BRESP;
    sc_in< sc_uint<C_M_AXI_DATA_INPUT_ID_WIDTH> > m_axi_DATA_INPUT_BID;
    sc_in< sc_uint<C_M_AXI_DATA_INPUT_BUSER_WIDTH> > m_axi_DATA_INPUT_BUSER;
    sc_out< sc_logic > m_axi_DATA_WEIGHT_AWVALID;
    sc_in< sc_logic > m_axi_DATA_WEIGHT_AWREADY;
    sc_out< sc_uint<C_M_AXI_DATA_WEIGHT_ADDR_WIDTH> > m_axi_DATA_WEIGHT_AWADDR;
    sc_out< sc_uint<C_M_AXI_DATA_WEIGHT_ID_WIDTH> > m_axi_DATA_WEIGHT_AWID;
    sc_out< sc_lv<8> > m_axi_DATA_WEIGHT_AWLEN;
    sc_out< sc_lv<3> > m_axi_DATA_WEIGHT_AWSIZE;
    sc_out< sc_lv<2> > m_axi_DATA_WEIGHT_AWBURST;
    sc_out< sc_lv<2> > m_axi_DATA_WEIGHT_AWLOCK;
    sc_out< sc_lv<4> > m_axi_DATA_WEIGHT_AWCACHE;
    sc_out< sc_lv<3> > m_axi_DATA_WEIGHT_AWPROT;
    sc_out< sc_lv<4> > m_axi_DATA_WEIGHT_AWQOS;
    sc_out< sc_lv<4> > m_axi_DATA_WEIGHT_AWREGION;
    sc_out< sc_uint<C_M_AXI_DATA_WEIGHT_AWUSER_WIDTH> > m_axi_DATA_WEIGHT_AWUSER;
    sc_out< sc_logic > m_axi_DATA_WEIGHT_WVALID;
    sc_in< sc_logic > m_axi_DATA_WEIGHT_WREADY;
    sc_out< sc_uint<C_M_AXI_DATA_WEIGHT_DATA_WIDTH> > m_axi_DATA_WEIGHT_WDATA;
    sc_out< sc_uint<C_M_AXI_DATA_WEIGHT_DATA_WIDTH/8> > m_axi_DATA_WEIGHT_WSTRB;
    sc_out< sc_logic > m_axi_DATA_WEIGHT_WLAST;
    sc_out< sc_uint<C_M_AXI_DATA_WEIGHT_ID_WIDTH> > m_axi_DATA_WEIGHT_WID;
    sc_out< sc_uint<C_M_AXI_DATA_WEIGHT_WUSER_WIDTH> > m_axi_DATA_WEIGHT_WUSER;
    sc_out< sc_logic > m_axi_DATA_WEIGHT_ARVALID;
    sc_in< sc_logic > m_axi_DATA_WEIGHT_ARREADY;
    sc_out< sc_uint<C_M_AXI_DATA_WEIGHT_ADDR_WIDTH> > m_axi_DATA_WEIGHT_ARADDR;
    sc_out< sc_uint<C_M_AXI_DATA_WEIGHT_ID_WIDTH> > m_axi_DATA_WEIGHT_ARID;
    sc_out< sc_lv<8> > m_axi_DATA_WEIGHT_ARLEN;
    sc_out< sc_lv<3> > m_axi_DATA_WEIGHT_ARSIZE;
    sc_out< sc_lv<2> > m_axi_DATA_WEIGHT_ARBURST;
    sc_out< sc_lv<2> > m_axi_DATA_WEIGHT_ARLOCK;
    sc_out< sc_lv<4> > m_axi_DATA_WEIGHT_ARCACHE;
    sc_out< sc_lv<3> > m_axi_DATA_WEIGHT_ARPROT;
    sc_out< sc_lv<4> > m_axi_DATA_WEIGHT_ARQOS;
    sc_out< sc_lv<4> > m_axi_DATA_WEIGHT_ARREGION;
    sc_out< sc_uint<C_M_AXI_DATA_WEIGHT_ARUSER_WIDTH> > m_axi_DATA_WEIGHT_ARUSER;
    sc_in< sc_logic > m_axi_DATA_WEIGHT_RVALID;
    sc_out< sc_logic > m_axi_DATA_WEIGHT_RREADY;
    sc_in< sc_uint<C_M_AXI_DATA_WEIGHT_DATA_WIDTH> > m_axi_DATA_WEIGHT_RDATA;
    sc_in< sc_logic > m_axi_DATA_WEIGHT_RLAST;
    sc_in< sc_uint<C_M_AXI_DATA_WEIGHT_ID_WIDTH> > m_axi_DATA_WEIGHT_RID;
    sc_in< sc_uint<C_M_AXI_DATA_WEIGHT_RUSER_WIDTH> > m_axi_DATA_WEIGHT_RUSER;
    sc_in< sc_lv<2> > m_axi_DATA_WEIGHT_RRESP;
    sc_in< sc_logic > m_axi_DATA_WEIGHT_BVALID;
    sc_out< sc_logic > m_axi_DATA_WEIGHT_BREADY;
    sc_in< sc_lv<2> > m_axi_DATA_WEIGHT_BRESP;
    sc_in< sc_uint<C_M_AXI_DATA_WEIGHT_ID_WIDTH> > m_axi_DATA_WEIGHT_BID;
    sc_in< sc_uint<C_M_AXI_DATA_WEIGHT_BUSER_WIDTH> > m_axi_DATA_WEIGHT_BUSER;
    sc_out< sc_logic > m_axi_DATA_BIAS_AWVALID;
    sc_in< sc_logic > m_axi_DATA_BIAS_AWREADY;
    sc_out< sc_uint<C_M_AXI_DATA_BIAS_ADDR_WIDTH> > m_axi_DATA_BIAS_AWADDR;
    sc_out< sc_uint<C_M_AXI_DATA_BIAS_ID_WIDTH> > m_axi_DATA_BIAS_AWID;
    sc_out< sc_lv<8> > m_axi_DATA_BIAS_AWLEN;
    sc_out< sc_lv<3> > m_axi_DATA_BIAS_AWSIZE;
    sc_out< sc_lv<2> > m_axi_DATA_BIAS_AWBURST;
    sc_out< sc_lv<2> > m_axi_DATA_BIAS_AWLOCK;
    sc_out< sc_lv<4> > m_axi_DATA_BIAS_AWCACHE;
    sc_out< sc_lv<3> > m_axi_DATA_BIAS_AWPROT;
    sc_out< sc_lv<4> > m_axi_DATA_BIAS_AWQOS;
    sc_out< sc_lv<4> > m_axi_DATA_BIAS_AWREGION;
    sc_out< sc_uint<C_M_AXI_DATA_BIAS_AWUSER_WIDTH> > m_axi_DATA_BIAS_AWUSER;
    sc_out< sc_logic > m_axi_DATA_BIAS_WVALID;
    sc_in< sc_logic > m_axi_DATA_BIAS_WREADY;
    sc_out< sc_uint<C_M_AXI_DATA_BIAS_DATA_WIDTH> > m_axi_DATA_BIAS_WDATA;
    sc_out< sc_uint<C_M_AXI_DATA_BIAS_DATA_WIDTH/8> > m_axi_DATA_BIAS_WSTRB;
    sc_out< sc_logic > m_axi_DATA_BIAS_WLAST;
    sc_out< sc_uint<C_M_AXI_DATA_BIAS_ID_WIDTH> > m_axi_DATA_BIAS_WID;
    sc_out< sc_uint<C_M_AXI_DATA_BIAS_WUSER_WIDTH> > m_axi_DATA_BIAS_WUSER;
    sc_out< sc_logic > m_axi_DATA_BIAS_ARVALID;
    sc_in< sc_logic > m_axi_DATA_BIAS_ARREADY;
    sc_out< sc_uint<C_M_AXI_DATA_BIAS_ADDR_WIDTH> > m_axi_DATA_BIAS_ARADDR;
    sc_out< sc_uint<C_M_AXI_DATA_BIAS_ID_WIDTH> > m_axi_DATA_BIAS_ARID;
    sc_out< sc_lv<8> > m_axi_DATA_BIAS_ARLEN;
    sc_out< sc_lv<3> > m_axi_DATA_BIAS_ARSIZE;
    sc_out< sc_lv<2> > m_axi_DATA_BIAS_ARBURST;
    sc_out< sc_lv<2> > m_axi_DATA_BIAS_ARLOCK;
    sc_out< sc_lv<4> > m_axi_DATA_BIAS_ARCACHE;
    sc_out< sc_lv<3> > m_axi_DATA_BIAS_ARPROT;
    sc_out< sc_lv<4> > m_axi_DATA_BIAS_ARQOS;
    sc_out< sc_lv<4> > m_axi_DATA_BIAS_ARREGION;
    sc_out< sc_uint<C_M_AXI_DATA_BIAS_ARUSER_WIDTH> > m_axi_DATA_BIAS_ARUSER;
    sc_in< sc_logic > m_axi_DATA_BIAS_RVALID;
    sc_out< sc_logic > m_axi_DATA_BIAS_RREADY;
    sc_in< sc_uint<C_M_AXI_DATA_BIAS_DATA_WIDTH> > m_axi_DATA_BIAS_RDATA;
    sc_in< sc_logic > m_axi_DATA_BIAS_RLAST;
    sc_in< sc_uint<C_M_AXI_DATA_BIAS_ID_WIDTH> > m_axi_DATA_BIAS_RID;
    sc_in< sc_uint<C_M_AXI_DATA_BIAS_RUSER_WIDTH> > m_axi_DATA_BIAS_RUSER;
    sc_in< sc_lv<2> > m_axi_DATA_BIAS_RRESP;
    sc_in< sc_logic > m_axi_DATA_BIAS_BVALID;
    sc_out< sc_logic > m_axi_DATA_BIAS_BREADY;
    sc_in< sc_lv<2> > m_axi_DATA_BIAS_BRESP;
    sc_in< sc_uint<C_M_AXI_DATA_BIAS_ID_WIDTH> > m_axi_DATA_BIAS_BID;
    sc_in< sc_uint<C_M_AXI_DATA_BIAS_BUSER_WIDTH> > m_axi_DATA_BIAS_BUSER;
    sc_out< sc_logic > m_axi_DATA_OUTPUT_AWVALID;
    sc_in< sc_logic > m_axi_DATA_OUTPUT_AWREADY;
    sc_out< sc_uint<C_M_AXI_DATA_OUTPUT_ADDR_WIDTH> > m_axi_DATA_OUTPUT_AWADDR;
    sc_out< sc_uint<C_M_AXI_DATA_OUTPUT_ID_WIDTH> > m_axi_DATA_OUTPUT_AWID;
    sc_out< sc_lv<8> > m_axi_DATA_OUTPUT_AWLEN;
    sc_out< sc_lv<3> > m_axi_DATA_OUTPUT_AWSIZE;
    sc_out< sc_lv<2> > m_axi_DATA_OUTPUT_AWBURST;
    sc_out< sc_lv<2> > m_axi_DATA_OUTPUT_AWLOCK;
    sc_out< sc_lv<4> > m_axi_DATA_OUTPUT_AWCACHE;
    sc_out< sc_lv<3> > m_axi_DATA_OUTPUT_AWPROT;
    sc_out< sc_lv<4> > m_axi_DATA_OUTPUT_AWQOS;
    sc_out< sc_lv<4> > m_axi_DATA_OUTPUT_AWREGION;
    sc_out< sc_uint<C_M_AXI_DATA_OUTPUT_AWUSER_WIDTH> > m_axi_DATA_OUTPUT_AWUSER;
    sc_out< sc_logic > m_axi_DATA_OUTPUT_WVALID;
    sc_in< sc_logic > m_axi_DATA_OUTPUT_WREADY;
    sc_out< sc_uint<C_M_AXI_DATA_OUTPUT_DATA_WIDTH> > m_axi_DATA_OUTPUT_WDATA;
    sc_out< sc_uint<C_M_AXI_DATA_OUTPUT_DATA_WIDTH/8> > m_axi_DATA_OUTPUT_WSTRB;
    sc_out< sc_logic > m_axi_DATA_OUTPUT_WLAST;
    sc_out< sc_uint<C_M_AXI_DATA_OUTPUT_ID_WIDTH> > m_axi_DATA_OUTPUT_WID;
    sc_out< sc_uint<C_M_AXI_DATA_OUTPUT_WUSER_WIDTH> > m_axi_DATA_OUTPUT_WUSER;
    sc_out< sc_logic > m_axi_DATA_OUTPUT_ARVALID;
    sc_in< sc_logic > m_axi_DATA_OUTPUT_ARREADY;
    sc_out< sc_uint<C_M_AXI_DATA_OUTPUT_ADDR_WIDTH> > m_axi_DATA_OUTPUT_ARADDR;
    sc_out< sc_uint<C_M_AXI_DATA_OUTPUT_ID_WIDTH> > m_axi_DATA_OUTPUT_ARID;
    sc_out< sc_lv<8> > m_axi_DATA_OUTPUT_ARLEN;
    sc_out< sc_lv<3> > m_axi_DATA_OUTPUT_ARSIZE;
    sc_out< sc_lv<2> > m_axi_DATA_OUTPUT_ARBURST;
    sc_out< sc_lv<2> > m_axi_DATA_OUTPUT_ARLOCK;
    sc_out< sc_lv<4> > m_axi_DATA_OUTPUT_ARCACHE;
    sc_out< sc_lv<3> > m_axi_DATA_OUTPUT_ARPROT;
    sc_out< sc_lv<4> > m_axi_DATA_OUTPUT_ARQOS;
    sc_out< sc_lv<4> > m_axi_DATA_OUTPUT_ARREGION;
    sc_out< sc_uint<C_M_AXI_DATA_OUTPUT_ARUSER_WIDTH> > m_axi_DATA_OUTPUT_ARUSER;
    sc_in< sc_logic > m_axi_DATA_OUTPUT_RVALID;
    sc_out< sc_logic > m_axi_DATA_OUTPUT_RREADY;
    sc_in< sc_uint<C_M_AXI_DATA_OUTPUT_DATA_WIDTH> > m_axi_DATA_OUTPUT_RDATA;
    sc_in< sc_logic > m_axi_DATA_OUTPUT_RLAST;
    sc_in< sc_uint<C_M_AXI_DATA_OUTPUT_ID_WIDTH> > m_axi_DATA_OUTPUT_RID;
    sc_in< sc_uint<C_M_AXI_DATA_OUTPUT_RUSER_WIDTH> > m_axi_DATA_OUTPUT_RUSER;
    sc_in< sc_lv<2> > m_axi_DATA_OUTPUT_RRESP;
    sc_in< sc_logic > m_axi_DATA_OUTPUT_BVALID;
    sc_out< sc_logic > m_axi_DATA_OUTPUT_BREADY;
    sc_in< sc_lv<2> > m_axi_DATA_OUTPUT_BRESP;
    sc_in< sc_uint<C_M_AXI_DATA_OUTPUT_ID_WIDTH> > m_axi_DATA_OUTPUT_BID;
    sc_in< sc_uint<C_M_AXI_DATA_OUTPUT_BUSER_WIDTH> > m_axi_DATA_OUTPUT_BUSER;
    sc_in< sc_logic > s_axi_CTL_AWVALID;
    sc_out< sc_logic > s_axi_CTL_AWREADY;
    sc_in< sc_uint<C_S_AXI_CTL_ADDR_WIDTH> > s_axi_CTL_AWADDR;
    sc_in< sc_logic > s_axi_CTL_WVALID;
    sc_out< sc_logic > s_axi_CTL_WREADY;
    sc_in< sc_uint<C_S_AXI_CTL_DATA_WIDTH> > s_axi_CTL_WDATA;
    sc_in< sc_uint<C_S_AXI_CTL_DATA_WIDTH/8> > s_axi_CTL_WSTRB;
    sc_in< sc_logic > s_axi_CTL_ARVALID;
    sc_out< sc_logic > s_axi_CTL_ARREADY;
    sc_in< sc_uint<C_S_AXI_CTL_ADDR_WIDTH> > s_axi_CTL_ARADDR;
    sc_out< sc_logic > s_axi_CTL_RVALID;
    sc_in< sc_logic > s_axi_CTL_RREADY;
    sc_out< sc_uint<C_S_AXI_CTL_DATA_WIDTH> > s_axi_CTL_RDATA;
    sc_out< sc_lv<2> > s_axi_CTL_RRESP;
    sc_out< sc_logic > s_axi_CTL_BVALID;
    sc_in< sc_logic > s_axi_CTL_BREADY;
    sc_out< sc_lv<2> > s_axi_CTL_BRESP;
    sc_out< sc_logic > interrupt;
    sc_signal< sc_logic > ap_var_for_const0;
    sc_signal< sc_logic > ap_var_for_const1;
    sc_signal< sc_lv<32> > ap_var_for_const2;
    sc_signal< sc_lv<1> > ap_var_for_const3;
    sc_signal< sc_lv<3> > ap_var_for_const4;
    sc_signal< sc_lv<2> > ap_var_for_const5;
    sc_signal< sc_lv<4> > ap_var_for_const6;


    // Module declarations
    conv1(sc_module_name name);
    SC_HAS_PROCESS(conv1);

    ~conv1();

    sc_trace_file* mVcdFile;

    ofstream mHdltvinHandle;
    ofstream mHdltvoutHandle;
    conv1_CTL_s_axi<C_S_AXI_CTL_ADDR_WIDTH,C_S_AXI_CTL_DATA_WIDTH>* conv1_CTL_s_axi_U;
    conv1_DATA_INPUT_m_axi<0,32,32,5,16,16,16,16,C_M_AXI_DATA_INPUT_ID_WIDTH,C_M_AXI_DATA_INPUT_ADDR_WIDTH,C_M_AXI_DATA_INPUT_DATA_WIDTH,C_M_AXI_DATA_INPUT_AWUSER_WIDTH,C_M_AXI_DATA_INPUT_ARUSER_WIDTH,C_M_AXI_DATA_INPUT_WUSER_WIDTH,C_M_AXI_DATA_INPUT_RUSER_WIDTH,C_M_AXI_DATA_INPUT_BUSER_WIDTH,C_M_AXI_DATA_INPUT_USER_VALUE,C_M_AXI_DATA_INPUT_PROT_VALUE,C_M_AXI_DATA_INPUT_CACHE_VALUE>* conv1_DATA_INPUT_m_axi_U;
    conv1_DATA_WEIGHT_m_axi<0,32,32,5,16,16,16,16,C_M_AXI_DATA_WEIGHT_ID_WIDTH,C_M_AXI_DATA_WEIGHT_ADDR_WIDTH,C_M_AXI_DATA_WEIGHT_DATA_WIDTH,C_M_AXI_DATA_WEIGHT_AWUSER_WIDTH,C_M_AXI_DATA_WEIGHT_ARUSER_WIDTH,C_M_AXI_DATA_WEIGHT_WUSER_WIDTH,C_M_AXI_DATA_WEIGHT_RUSER_WIDTH,C_M_AXI_DATA_WEIGHT_BUSER_WIDTH,C_M_AXI_DATA_WEIGHT_USER_VALUE,C_M_AXI_DATA_WEIGHT_PROT_VALUE,C_M_AXI_DATA_WEIGHT_CACHE_VALUE>* conv1_DATA_WEIGHT_m_axi_U;
    conv1_DATA_BIAS_m_axi<0,32,32,5,16,16,16,16,C_M_AXI_DATA_BIAS_ID_WIDTH,C_M_AXI_DATA_BIAS_ADDR_WIDTH,C_M_AXI_DATA_BIAS_DATA_WIDTH,C_M_AXI_DATA_BIAS_AWUSER_WIDTH,C_M_AXI_DATA_BIAS_ARUSER_WIDTH,C_M_AXI_DATA_BIAS_WUSER_WIDTH,C_M_AXI_DATA_BIAS_RUSER_WIDTH,C_M_AXI_DATA_BIAS_BUSER_WIDTH,C_M_AXI_DATA_BIAS_USER_VALUE,C_M_AXI_DATA_BIAS_PROT_VALUE,C_M_AXI_DATA_BIAS_CACHE_VALUE>* conv1_DATA_BIAS_m_axi_U;
    conv1_DATA_OUTPUT_m_axi<0,32,32,5,16,16,16,16,C_M_AXI_DATA_OUTPUT_ID_WIDTH,C_M_AXI_DATA_OUTPUT_ADDR_WIDTH,C_M_AXI_DATA_OUTPUT_DATA_WIDTH,C_M_AXI_DATA_OUTPUT_AWUSER_WIDTH,C_M_AXI_DATA_OUTPUT_ARUSER_WIDTH,C_M_AXI_DATA_OUTPUT_WUSER_WIDTH,C_M_AXI_DATA_OUTPUT_RUSER_WIDTH,C_M_AXI_DATA_OUTPUT_BUSER_WIDTH,C_M_AXI_DATA_OUTPUT_USER_VALUE,C_M_AXI_DATA_OUTPUT_PROT_VALUE,C_M_AXI_DATA_OUTPUT_CACHE_VALUE>* conv1_DATA_OUTPUT_m_axi_U;
    conv1_input_oc_0* input_oc_0_U;
    conv1_weights_oc_0* weights_oc_0_U;
    conv1_bias_oc* bias_oc_U;
    conv1_output1_oc* output1_oc_U;
    conv1_output2_oc* output2_oc_U;
    convulution1* grp_convulution1_fu_142;
    maxpool_2* grp_maxpool_2_fu_150;
    relu_1* grp_relu_1_fu_156;
    relu_2* grp_relu_2_fu_161;
    store_weights* grp_store_weights_fu_166;
    store_output* grp_store_output_fu_175;
    store_input* grp_store_input_fu_183;
    store_bias* grp_store_bias_fu_192;
    sc_signal< sc_logic > ap_rst_n_inv;
    sc_signal< sc_logic > ap_start;
    sc_signal< sc_logic > ap_done;
    sc_signal< sc_logic > ap_idle;
    sc_signal< sc_lv<12> > ap_CS_fsm;
    sc_signal< sc_logic > ap_CS_fsm_state1;
    sc_signal< sc_logic > ap_ready;
    sc_signal< sc_lv<32> > input_r;
    sc_signal< sc_lv<32> > weights;
    sc_signal< sc_lv<32> > bias;
    sc_signal< sc_lv<32> > output_r;
    sc_signal< sc_lv<32> > ap_return;
    sc_signal< sc_logic > DATA_INPUT_AWREADY;
    sc_signal< sc_logic > DATA_INPUT_WREADY;
    sc_signal< sc_logic > DATA_INPUT_ARVALID;
    sc_signal< sc_logic > DATA_INPUT_ARREADY;
    sc_signal< sc_logic > DATA_INPUT_RVALID;
    sc_signal< sc_logic > DATA_INPUT_RREADY;
    sc_signal< sc_lv<32> > DATA_INPUT_RDATA;
    sc_signal< sc_logic > DATA_INPUT_RLAST;
    sc_signal< sc_lv<1> > DATA_INPUT_RID;
    sc_signal< sc_lv<1> > DATA_INPUT_RUSER;
    sc_signal< sc_lv<2> > DATA_INPUT_RRESP;
    sc_signal< sc_logic > DATA_INPUT_BVALID;
    sc_signal< sc_lv<2> > DATA_INPUT_BRESP;
    sc_signal< sc_lv<1> > DATA_INPUT_BID;
    sc_signal< sc_lv<1> > DATA_INPUT_BUSER;
    sc_signal< sc_logic > DATA_WEIGHT_AWREADY;
    sc_signal< sc_logic > DATA_WEIGHT_WREADY;
    sc_signal< sc_logic > DATA_WEIGHT_ARVALID;
    sc_signal< sc_logic > DATA_WEIGHT_ARREADY;
    sc_signal< sc_logic > DATA_WEIGHT_RVALID;
    sc_signal< sc_logic > DATA_WEIGHT_RREADY;
    sc_signal< sc_lv<32> > DATA_WEIGHT_RDATA;
    sc_signal< sc_logic > DATA_WEIGHT_RLAST;
    sc_signal< sc_lv<1> > DATA_WEIGHT_RID;
    sc_signal< sc_lv<1> > DATA_WEIGHT_RUSER;
    sc_signal< sc_lv<2> > DATA_WEIGHT_RRESP;
    sc_signal< sc_logic > DATA_WEIGHT_BVALID;
    sc_signal< sc_lv<2> > DATA_WEIGHT_BRESP;
    sc_signal< sc_lv<1> > DATA_WEIGHT_BID;
    sc_signal< sc_lv<1> > DATA_WEIGHT_BUSER;
    sc_signal< sc_logic > DATA_BIAS_AWREADY;
    sc_signal< sc_logic > DATA_BIAS_WREADY;
    sc_signal< sc_logic > DATA_BIAS_ARVALID;
    sc_signal< sc_logic > DATA_BIAS_ARREADY;
    sc_signal< sc_logic > DATA_BIAS_RVALID;
    sc_signal< sc_logic > DATA_BIAS_RREADY;
    sc_signal< sc_lv<32> > DATA_BIAS_RDATA;
    sc_signal< sc_logic > DATA_BIAS_RLAST;
    sc_signal< sc_lv<1> > DATA_BIAS_RID;
    sc_signal< sc_lv<1> > DATA_BIAS_RUSER;
    sc_signal< sc_lv<2> > DATA_BIAS_RRESP;
    sc_signal< sc_logic > DATA_BIAS_BVALID;
    sc_signal< sc_lv<2> > DATA_BIAS_BRESP;
    sc_signal< sc_lv<1> > DATA_BIAS_BID;
    sc_signal< sc_lv<1> > DATA_BIAS_BUSER;
    sc_signal< sc_logic > DATA_OUTPUT_AWVALID;
    sc_signal< sc_logic > DATA_OUTPUT_AWREADY;
    sc_signal< sc_logic > DATA_OUTPUT_WVALID;
    sc_signal< sc_logic > DATA_OUTPUT_WREADY;
    sc_signal< sc_logic > DATA_OUTPUT_ARREADY;
    sc_signal< sc_logic > DATA_OUTPUT_RVALID;
    sc_signal< sc_lv<32> > DATA_OUTPUT_RDATA;
    sc_signal< sc_logic > DATA_OUTPUT_RLAST;
    sc_signal< sc_lv<1> > DATA_OUTPUT_RID;
    sc_signal< sc_lv<1> > DATA_OUTPUT_RUSER;
    sc_signal< sc_lv<2> > DATA_OUTPUT_RRESP;
    sc_signal< sc_logic > DATA_OUTPUT_BVALID;
    sc_signal< sc_logic > DATA_OUTPUT_BREADY;
    sc_signal< sc_lv<2> > DATA_OUTPUT_BRESP;
    sc_signal< sc_lv<1> > DATA_OUTPUT_BID;
    sc_signal< sc_lv<1> > DATA_OUTPUT_BUSER;
    sc_signal< sc_lv<30> > output7_reg_244;
    sc_signal< sc_lv<30> > bias5_reg_249;
    sc_signal< sc_lv<30> > weights3_reg_254;
    sc_signal< sc_lv<30> > input1_reg_259;
    sc_signal< sc_lv<10> > input_oc_0_address0;
    sc_signal< sc_logic > input_oc_0_ce0;
    sc_signal< sc_logic > input_oc_0_we0;
    sc_signal< sc_lv<32> > input_oc_0_q0;
    sc_signal< sc_logic > input_oc_0_ce1;
    sc_signal< sc_lv<32> > input_oc_0_q1;
    sc_signal< sc_lv<8> > weights_oc_0_address0;
    sc_signal< sc_logic > weights_oc_0_ce0;
    sc_signal< sc_logic > weights_oc_0_we0;
    sc_signal< sc_lv<32> > weights_oc_0_q0;
    sc_signal< sc_logic > weights_oc_0_ce1;
    sc_signal< sc_lv<32> > weights_oc_0_q1;
    sc_signal< sc_lv<3> > bias_oc_address0;
    sc_signal< sc_logic > bias_oc_ce0;
    sc_signal< sc_logic > bias_oc_we0;
    sc_signal< sc_lv<32> > bias_oc_q0;
    sc_signal< sc_lv<13> > output1_oc_address0;
    sc_signal< sc_logic > output1_oc_ce0;
    sc_signal< sc_logic > output1_oc_we0;
    sc_signal< sc_lv<32> > output1_oc_d0;
    sc_signal< sc_lv<32> > output1_oc_q0;
    sc_signal< sc_lv<11> > output2_oc_address0;
    sc_signal< sc_logic > output2_oc_ce0;
    sc_signal< sc_logic > output2_oc_we0;
    sc_signal< sc_lv<32> > output2_oc_d0;
    sc_signal< sc_lv<32> > output2_oc_q0;
    sc_signal< sc_logic > grp_convulution1_fu_142_ap_start;
    sc_signal< sc_logic > grp_convulution1_fu_142_ap_done;
    sc_signal< sc_logic > grp_convulution1_fu_142_ap_idle;
    sc_signal< sc_logic > grp_convulution1_fu_142_ap_ready;
    sc_signal< sc_lv<10> > grp_convulution1_fu_142_input_0_address0;
    sc_signal< sc_logic > grp_convulution1_fu_142_input_0_ce0;
    sc_signal< sc_lv<10> > grp_convulution1_fu_142_input_0_address1;
    sc_signal< sc_logic > grp_convulution1_fu_142_input_0_ce1;
    sc_signal< sc_lv<8> > grp_convulution1_fu_142_weights_0_address0;
    sc_signal< sc_logic > grp_convulution1_fu_142_weights_0_ce0;
    sc_signal< sc_lv<8> > grp_convulution1_fu_142_weights_0_address1;
    sc_signal< sc_logic > grp_convulution1_fu_142_weights_0_ce1;
    sc_signal< sc_lv<3> > grp_convulution1_fu_142_bias_address0;
    sc_signal< sc_logic > grp_convulution1_fu_142_bias_ce0;
    sc_signal< sc_lv<13> > grp_convulution1_fu_142_output_r_address0;
    sc_signal< sc_logic > grp_convulution1_fu_142_output_r_ce0;
    sc_signal< sc_logic > grp_convulution1_fu_142_output_r_we0;
    sc_signal< sc_lv<32> > grp_convulution1_fu_142_output_r_d0;
    sc_signal< sc_logic > grp_maxpool_2_fu_150_ap_start;
    sc_signal< sc_logic > grp_maxpool_2_fu_150_ap_done;
    sc_signal< sc_logic > grp_maxpool_2_fu_150_ap_idle;
    sc_signal< sc_logic > grp_maxpool_2_fu_150_ap_ready;
    sc_signal< sc_lv<13> > grp_maxpool_2_fu_150_input_r_address0;
    sc_signal< sc_logic > grp_maxpool_2_fu_150_input_r_ce0;
    sc_signal< sc_lv<11> > grp_maxpool_2_fu_150_output_r_address0;
    sc_signal< sc_logic > grp_maxpool_2_fu_150_output_r_ce0;
    sc_signal< sc_logic > grp_maxpool_2_fu_150_output_r_we0;
    sc_signal< sc_lv<32> > grp_maxpool_2_fu_150_output_r_d0;
    sc_signal< sc_logic > grp_relu_1_fu_156_ap_start;
    sc_signal< sc_logic > grp_relu_1_fu_156_ap_done;
    sc_signal< sc_logic > grp_relu_1_fu_156_ap_idle;
    sc_signal< sc_logic > grp_relu_1_fu_156_ap_ready;
    sc_signal< sc_lv<13> > grp_relu_1_fu_156_output_r_address0;
    sc_signal< sc_logic > grp_relu_1_fu_156_output_r_ce0;
    sc_signal< sc_logic > grp_relu_1_fu_156_output_r_we0;
    sc_signal< sc_lv<32> > grp_relu_1_fu_156_output_r_d0;
    sc_signal< sc_logic > grp_relu_2_fu_161_ap_start;
    sc_signal< sc_logic > grp_relu_2_fu_161_ap_done;
    sc_signal< sc_logic > grp_relu_2_fu_161_ap_idle;
    sc_signal< sc_logic > grp_relu_2_fu_161_ap_ready;
    sc_signal< sc_lv<11> > grp_relu_2_fu_161_output_r_address0;
    sc_signal< sc_logic > grp_relu_2_fu_161_output_r_ce0;
    sc_signal< sc_logic > grp_relu_2_fu_161_output_r_we0;
    sc_signal< sc_lv<32> > grp_relu_2_fu_161_output_r_d0;
    sc_signal< sc_logic > grp_store_weights_fu_166_ap_start;
    sc_signal< sc_logic > grp_store_weights_fu_166_ap_done;
    sc_signal< sc_logic > grp_store_weights_fu_166_ap_idle;
    sc_signal< sc_logic > grp_store_weights_fu_166_ap_ready;
    sc_signal< sc_logic > grp_store_weights_fu_166_m_axi_weights_AWVALID;
    sc_signal< sc_lv<32> > grp_store_weights_fu_166_m_axi_weights_AWADDR;
    sc_signal< sc_lv<1> > grp_store_weights_fu_166_m_axi_weights_AWID;
    sc_signal< sc_lv<32> > grp_store_weights_fu_166_m_axi_weights_AWLEN;
    sc_signal< sc_lv<3> > grp_store_weights_fu_166_m_axi_weights_AWSIZE;
    sc_signal< sc_lv<2> > grp_store_weights_fu_166_m_axi_weights_AWBURST;
    sc_signal< sc_lv<2> > grp_store_weights_fu_166_m_axi_weights_AWLOCK;
    sc_signal< sc_lv<4> > grp_store_weights_fu_166_m_axi_weights_AWCACHE;
    sc_signal< sc_lv<3> > grp_store_weights_fu_166_m_axi_weights_AWPROT;
    sc_signal< sc_lv<4> > grp_store_weights_fu_166_m_axi_weights_AWQOS;
    sc_signal< sc_lv<4> > grp_store_weights_fu_166_m_axi_weights_AWREGION;
    sc_signal< sc_lv<1> > grp_store_weights_fu_166_m_axi_weights_AWUSER;
    sc_signal< sc_logic > grp_store_weights_fu_166_m_axi_weights_WVALID;
    sc_signal< sc_lv<32> > grp_store_weights_fu_166_m_axi_weights_WDATA;
    sc_signal< sc_lv<4> > grp_store_weights_fu_166_m_axi_weights_WSTRB;
    sc_signal< sc_logic > grp_store_weights_fu_166_m_axi_weights_WLAST;
    sc_signal< sc_lv<1> > grp_store_weights_fu_166_m_axi_weights_WID;
    sc_signal< sc_lv<1> > grp_store_weights_fu_166_m_axi_weights_WUSER;
    sc_signal< sc_logic > grp_store_weights_fu_166_m_axi_weights_ARVALID;
    sc_signal< sc_lv<32> > grp_store_weights_fu_166_m_axi_weights_ARADDR;
    sc_signal< sc_lv<1> > grp_store_weights_fu_166_m_axi_weights_ARID;
    sc_signal< sc_lv<32> > grp_store_weights_fu_166_m_axi_weights_ARLEN;
    sc_signal< sc_lv<3> > grp_store_weights_fu_166_m_axi_weights_ARSIZE;
    sc_signal< sc_lv<2> > grp_store_weights_fu_166_m_axi_weights_ARBURST;
    sc_signal< sc_lv<2> > grp_store_weights_fu_166_m_axi_weights_ARLOCK;
    sc_signal< sc_lv<4> > grp_store_weights_fu_166_m_axi_weights_ARCACHE;
    sc_signal< sc_lv<3> > grp_store_weights_fu_166_m_axi_weights_ARPROT;
    sc_signal< sc_lv<4> > grp_store_weights_fu_166_m_axi_weights_ARQOS;
    sc_signal< sc_lv<4> > grp_store_weights_fu_166_m_axi_weights_ARREGION;
    sc_signal< sc_lv<1> > grp_store_weights_fu_166_m_axi_weights_ARUSER;
    sc_signal< sc_logic > grp_store_weights_fu_166_m_axi_weights_RREADY;
    sc_signal< sc_logic > grp_store_weights_fu_166_m_axi_weights_BREADY;
    sc_signal< sc_lv<8> > grp_store_weights_fu_166_weights_oc_0_address0;
    sc_signal< sc_logic > grp_store_weights_fu_166_weights_oc_0_ce0;
    sc_signal< sc_logic > grp_store_weights_fu_166_weights_oc_0_we0;
    sc_signal< sc_lv<32> > grp_store_weights_fu_166_weights_oc_0_d0;
    sc_signal< sc_logic > grp_store_output_fu_175_ap_start;
    sc_signal< sc_logic > grp_store_output_fu_175_ap_done;
    sc_signal< sc_logic > grp_store_output_fu_175_ap_idle;
    sc_signal< sc_logic > grp_store_output_fu_175_ap_ready;
    sc_signal< sc_logic > grp_store_output_fu_175_m_axi_output_r_AWVALID;
    sc_signal< sc_lv<32> > grp_store_output_fu_175_m_axi_output_r_AWADDR;
    sc_signal< sc_lv<1> > grp_store_output_fu_175_m_axi_output_r_AWID;
    sc_signal< sc_lv<32> > grp_store_output_fu_175_m_axi_output_r_AWLEN;
    sc_signal< sc_lv<3> > grp_store_output_fu_175_m_axi_output_r_AWSIZE;
    sc_signal< sc_lv<2> > grp_store_output_fu_175_m_axi_output_r_AWBURST;
    sc_signal< sc_lv<2> > grp_store_output_fu_175_m_axi_output_r_AWLOCK;
    sc_signal< sc_lv<4> > grp_store_output_fu_175_m_axi_output_r_AWCACHE;
    sc_signal< sc_lv<3> > grp_store_output_fu_175_m_axi_output_r_AWPROT;
    sc_signal< sc_lv<4> > grp_store_output_fu_175_m_axi_output_r_AWQOS;
    sc_signal< sc_lv<4> > grp_store_output_fu_175_m_axi_output_r_AWREGION;
    sc_signal< sc_lv<1> > grp_store_output_fu_175_m_axi_output_r_AWUSER;
    sc_signal< sc_logic > grp_store_output_fu_175_m_axi_output_r_WVALID;
    sc_signal< sc_lv<32> > grp_store_output_fu_175_m_axi_output_r_WDATA;
    sc_signal< sc_lv<4> > grp_store_output_fu_175_m_axi_output_r_WSTRB;
    sc_signal< sc_logic > grp_store_output_fu_175_m_axi_output_r_WLAST;
    sc_signal< sc_lv<1> > grp_store_output_fu_175_m_axi_output_r_WID;
    sc_signal< sc_lv<1> > grp_store_output_fu_175_m_axi_output_r_WUSER;
    sc_signal< sc_logic > grp_store_output_fu_175_m_axi_output_r_ARVALID;
    sc_signal< sc_lv<32> > grp_store_output_fu_175_m_axi_output_r_ARADDR;
    sc_signal< sc_lv<1> > grp_store_output_fu_175_m_axi_output_r_ARID;
    sc_signal< sc_lv<32> > grp_store_output_fu_175_m_axi_output_r_ARLEN;
    sc_signal< sc_lv<3> > grp_store_output_fu_175_m_axi_output_r_ARSIZE;
    sc_signal< sc_lv<2> > grp_store_output_fu_175_m_axi_output_r_ARBURST;
    sc_signal< sc_lv<2> > grp_store_output_fu_175_m_axi_output_r_ARLOCK;
    sc_signal< sc_lv<4> > grp_store_output_fu_175_m_axi_output_r_ARCACHE;
    sc_signal< sc_lv<3> > grp_store_output_fu_175_m_axi_output_r_ARPROT;
    sc_signal< sc_lv<4> > grp_store_output_fu_175_m_axi_output_r_ARQOS;
    sc_signal< sc_lv<4> > grp_store_output_fu_175_m_axi_output_r_ARREGION;
    sc_signal< sc_lv<1> > grp_store_output_fu_175_m_axi_output_r_ARUSER;
    sc_signal< sc_logic > grp_store_output_fu_175_m_axi_output_r_RREADY;
    sc_signal< sc_logic > grp_store_output_fu_175_m_axi_output_r_BREADY;
    sc_signal< sc_lv<11> > grp_store_output_fu_175_output_oc_address0;
    sc_signal< sc_logic > grp_store_output_fu_175_output_oc_ce0;
    sc_signal< sc_logic > grp_store_input_fu_183_ap_start;
    sc_signal< sc_logic > grp_store_input_fu_183_ap_done;
    sc_signal< sc_logic > grp_store_input_fu_183_ap_idle;
    sc_signal< sc_logic > grp_store_input_fu_183_ap_ready;
    sc_signal< sc_logic > grp_store_input_fu_183_m_axi_input_r_AWVALID;
    sc_signal< sc_lv<32> > grp_store_input_fu_183_m_axi_input_r_AWADDR;
    sc_signal< sc_lv<1> > grp_store_input_fu_183_m_axi_input_r_AWID;
    sc_signal< sc_lv<32> > grp_store_input_fu_183_m_axi_input_r_AWLEN;
    sc_signal< sc_lv<3> > grp_store_input_fu_183_m_axi_input_r_AWSIZE;
    sc_signal< sc_lv<2> > grp_store_input_fu_183_m_axi_input_r_AWBURST;
    sc_signal< sc_lv<2> > grp_store_input_fu_183_m_axi_input_r_AWLOCK;
    sc_signal< sc_lv<4> > grp_store_input_fu_183_m_axi_input_r_AWCACHE;
    sc_signal< sc_lv<3> > grp_store_input_fu_183_m_axi_input_r_AWPROT;
    sc_signal< sc_lv<4> > grp_store_input_fu_183_m_axi_input_r_AWQOS;
    sc_signal< sc_lv<4> > grp_store_input_fu_183_m_axi_input_r_AWREGION;
    sc_signal< sc_lv<1> > grp_store_input_fu_183_m_axi_input_r_AWUSER;
    sc_signal< sc_logic > grp_store_input_fu_183_m_axi_input_r_WVALID;
    sc_signal< sc_lv<32> > grp_store_input_fu_183_m_axi_input_r_WDATA;
    sc_signal< sc_lv<4> > grp_store_input_fu_183_m_axi_input_r_WSTRB;
    sc_signal< sc_logic > grp_store_input_fu_183_m_axi_input_r_WLAST;
    sc_signal< sc_lv<1> > grp_store_input_fu_183_m_axi_input_r_WID;
    sc_signal< sc_lv<1> > grp_store_input_fu_183_m_axi_input_r_WUSER;
    sc_signal< sc_logic > grp_store_input_fu_183_m_axi_input_r_ARVALID;
    sc_signal< sc_lv<32> > grp_store_input_fu_183_m_axi_input_r_ARADDR;
    sc_signal< sc_lv<1> > grp_store_input_fu_183_m_axi_input_r_ARID;
    sc_signal< sc_lv<32> > grp_store_input_fu_183_m_axi_input_r_ARLEN;
    sc_signal< sc_lv<3> > grp_store_input_fu_183_m_axi_input_r_ARSIZE;
    sc_signal< sc_lv<2> > grp_store_input_fu_183_m_axi_input_r_ARBURST;
    sc_signal< sc_lv<2> > grp_store_input_fu_183_m_axi_input_r_ARLOCK;
    sc_signal< sc_lv<4> > grp_store_input_fu_183_m_axi_input_r_ARCACHE;
    sc_signal< sc_lv<3> > grp_store_input_fu_183_m_axi_input_r_ARPROT;
    sc_signal< sc_lv<4> > grp_store_input_fu_183_m_axi_input_r_ARQOS;
    sc_signal< sc_lv<4> > grp_store_input_fu_183_m_axi_input_r_ARREGION;
    sc_signal< sc_lv<1> > grp_store_input_fu_183_m_axi_input_r_ARUSER;
    sc_signal< sc_logic > grp_store_input_fu_183_m_axi_input_r_RREADY;
    sc_signal< sc_logic > grp_store_input_fu_183_m_axi_input_r_BREADY;
    sc_signal< sc_lv<10> > grp_store_input_fu_183_input_oc_0_address0;
    sc_signal< sc_logic > grp_store_input_fu_183_input_oc_0_ce0;
    sc_signal< sc_logic > grp_store_input_fu_183_input_oc_0_we0;
    sc_signal< sc_lv<32> > grp_store_input_fu_183_input_oc_0_d0;
    sc_signal< sc_logic > grp_store_bias_fu_192_ap_start;
    sc_signal< sc_logic > grp_store_bias_fu_192_ap_done;
    sc_signal< sc_logic > grp_store_bias_fu_192_ap_idle;
    sc_signal< sc_logic > grp_store_bias_fu_192_ap_ready;
    sc_signal< sc_logic > grp_store_bias_fu_192_m_axi_bias_AWVALID;
    sc_signal< sc_lv<32> > grp_store_bias_fu_192_m_axi_bias_AWADDR;
    sc_signal< sc_lv<1> > grp_store_bias_fu_192_m_axi_bias_AWID;
    sc_signal< sc_lv<32> > grp_store_bias_fu_192_m_axi_bias_AWLEN;
    sc_signal< sc_lv<3> > grp_store_bias_fu_192_m_axi_bias_AWSIZE;
    sc_signal< sc_lv<2> > grp_store_bias_fu_192_m_axi_bias_AWBURST;
    sc_signal< sc_lv<2> > grp_store_bias_fu_192_m_axi_bias_AWLOCK;
    sc_signal< sc_lv<4> > grp_store_bias_fu_192_m_axi_bias_AWCACHE;
    sc_signal< sc_lv<3> > grp_store_bias_fu_192_m_axi_bias_AWPROT;
    sc_signal< sc_lv<4> > grp_store_bias_fu_192_m_axi_bias_AWQOS;
    sc_signal< sc_lv<4> > grp_store_bias_fu_192_m_axi_bias_AWREGION;
    sc_signal< sc_lv<1> > grp_store_bias_fu_192_m_axi_bias_AWUSER;
    sc_signal< sc_logic > grp_store_bias_fu_192_m_axi_bias_WVALID;
    sc_signal< sc_lv<32> > grp_store_bias_fu_192_m_axi_bias_WDATA;
    sc_signal< sc_lv<4> > grp_store_bias_fu_192_m_axi_bias_WSTRB;
    sc_signal< sc_logic > grp_store_bias_fu_192_m_axi_bias_WLAST;
    sc_signal< sc_lv<1> > grp_store_bias_fu_192_m_axi_bias_WID;
    sc_signal< sc_lv<1> > grp_store_bias_fu_192_m_axi_bias_WUSER;
    sc_signal< sc_logic > grp_store_bias_fu_192_m_axi_bias_ARVALID;
    sc_signal< sc_lv<32> > grp_store_bias_fu_192_m_axi_bias_ARADDR;
    sc_signal< sc_lv<1> > grp_store_bias_fu_192_m_axi_bias_ARID;
    sc_signal< sc_lv<32> > grp_store_bias_fu_192_m_axi_bias_ARLEN;
    sc_signal< sc_lv<3> > grp_store_bias_fu_192_m_axi_bias_ARSIZE;
    sc_signal< sc_lv<2> > grp_store_bias_fu_192_m_axi_bias_ARBURST;
    sc_signal< sc_lv<2> > grp_store_bias_fu_192_m_axi_bias_ARLOCK;
    sc_signal< sc_lv<4> > grp_store_bias_fu_192_m_axi_bias_ARCACHE;
    sc_signal< sc_lv<3> > grp_store_bias_fu_192_m_axi_bias_ARPROT;
    sc_signal< sc_lv<4> > grp_store_bias_fu_192_m_axi_bias_ARQOS;
    sc_signal< sc_lv<4> > grp_store_bias_fu_192_m_axi_bias_ARREGION;
    sc_signal< sc_lv<1> > grp_store_bias_fu_192_m_axi_bias_ARUSER;
    sc_signal< sc_logic > grp_store_bias_fu_192_m_axi_bias_RREADY;
    sc_signal< sc_logic > grp_store_bias_fu_192_m_axi_bias_BREADY;
    sc_signal< sc_lv<3> > grp_store_bias_fu_192_bias_oc_address0;
    sc_signal< sc_logic > grp_store_bias_fu_192_bias_oc_ce0;
    sc_signal< sc_logic > grp_store_bias_fu_192_bias_oc_we0;
    sc_signal< sc_lv<32> > grp_store_bias_fu_192_bias_oc_d0;
    sc_signal< sc_logic > grp_convulution1_fu_142_ap_start_reg;
    sc_signal< sc_logic > ap_CS_fsm_state3;
    sc_signal< sc_logic > ap_CS_fsm_state4;
    sc_signal< sc_logic > grp_maxpool_2_fu_150_ap_start_reg;
    sc_signal< sc_logic > ap_CS_fsm_state7;
    sc_signal< sc_logic > ap_CS_fsm_state8;
    sc_signal< sc_logic > grp_relu_1_fu_156_ap_start_reg;
    sc_signal< sc_logic > ap_CS_fsm_state5;
    sc_signal< sc_logic > ap_CS_fsm_state6;
    sc_signal< sc_logic > grp_relu_2_fu_161_ap_start_reg;
    sc_signal< sc_logic > ap_CS_fsm_state9;
    sc_signal< sc_logic > ap_CS_fsm_state10;
    sc_signal< sc_logic > grp_store_weights_fu_166_ap_start_reg;
    sc_signal< sc_logic > ap_CS_fsm_state2;
    sc_signal< sc_logic > grp_store_output_fu_175_ap_start_reg;
    sc_signal< sc_logic > ap_CS_fsm_state11;
    sc_signal< sc_logic > ap_CS_fsm_state12;
    sc_signal< sc_logic > grp_store_input_fu_183_ap_start_reg;
    sc_signal< sc_logic > grp_store_bias_fu_192_ap_start_reg;
    sc_signal< sc_lv<12> > ap_NS_fsm;
    sc_signal< bool > ap_block_state2_on_subcall_done;
    static const sc_logic ap_const_logic_1;
    static const sc_logic ap_const_logic_0;
    static const sc_lv<12> ap_ST_fsm_state1;
    static const sc_lv<12> ap_ST_fsm_state2;
    static const sc_lv<12> ap_ST_fsm_state3;
    static const sc_lv<12> ap_ST_fsm_state4;
    static const sc_lv<12> ap_ST_fsm_state5;
    static const sc_lv<12> ap_ST_fsm_state6;
    static const sc_lv<12> ap_ST_fsm_state7;
    static const sc_lv<12> ap_ST_fsm_state8;
    static const sc_lv<12> ap_ST_fsm_state9;
    static const sc_lv<12> ap_ST_fsm_state10;
    static const sc_lv<12> ap_ST_fsm_state11;
    static const sc_lv<12> ap_ST_fsm_state12;
    static const sc_lv<32> ap_const_lv32_0;
    static const int C_S_AXI_DATA_WIDTH;
    static const int C_M_AXI_DATA_INPUT_USER_VALUE;
    static const int C_M_AXI_DATA_INPUT_PROT_VALUE;
    static const int C_M_AXI_DATA_INPUT_CACHE_VALUE;
    static const int C_M_AXI_DATA_WIDTH;
    static const int C_M_AXI_DATA_WEIGHT_USER_VALUE;
    static const int C_M_AXI_DATA_WEIGHT_PROT_VALUE;
    static const int C_M_AXI_DATA_WEIGHT_CACHE_VALUE;
    static const int C_M_AXI_DATA_BIAS_USER_VALUE;
    static const int C_M_AXI_DATA_BIAS_PROT_VALUE;
    static const int C_M_AXI_DATA_BIAS_CACHE_VALUE;
    static const int C_M_AXI_DATA_OUTPUT_USER_VALUE;
    static const int C_M_AXI_DATA_OUTPUT_PROT_VALUE;
    static const int C_M_AXI_DATA_OUTPUT_CACHE_VALUE;
    static const sc_lv<32> ap_const_lv32_2;
    static const sc_lv<32> ap_const_lv32_3;
    static const sc_lv<32> ap_const_lv32_6;
    static const sc_lv<32> ap_const_lv32_7;
    static const sc_lv<32> ap_const_lv32_4;
    static const sc_lv<32> ap_const_lv32_5;
    static const sc_lv<32> ap_const_lv32_8;
    static const sc_lv<32> ap_const_lv32_9;
    static const sc_lv<32> ap_const_lv32_1;
    static const sc_lv<32> ap_const_lv32_A;
    static const sc_lv<32> ap_const_lv32_B;
    static const sc_lv<32> ap_const_lv32_1F;
    static const bool ap_const_boolean_0;
    static const sc_lv<1> ap_const_lv1_0;
    static const sc_lv<3> ap_const_lv3_0;
    static const sc_lv<2> ap_const_lv2_0;
    static const sc_lv<4> ap_const_lv4_0;
    static const bool ap_const_boolean_1;
    // Thread declarations
    void thread_ap_var_for_const0();
    void thread_ap_var_for_const1();
    void thread_ap_var_for_const2();
    void thread_ap_var_for_const3();
    void thread_ap_var_for_const4();
    void thread_ap_var_for_const5();
    void thread_ap_var_for_const6();
    void thread_ap_clk_no_reset_();
    void thread_DATA_BIAS_ARVALID();
    void thread_DATA_BIAS_RREADY();
    void thread_DATA_INPUT_ARVALID();
    void thread_DATA_INPUT_RREADY();
    void thread_DATA_OUTPUT_AWVALID();
    void thread_DATA_OUTPUT_BREADY();
    void thread_DATA_OUTPUT_WVALID();
    void thread_DATA_WEIGHT_ARVALID();
    void thread_DATA_WEIGHT_RREADY();
    void thread_ap_CS_fsm_state1();
    void thread_ap_CS_fsm_state10();
    void thread_ap_CS_fsm_state11();
    void thread_ap_CS_fsm_state12();
    void thread_ap_CS_fsm_state2();
    void thread_ap_CS_fsm_state3();
    void thread_ap_CS_fsm_state4();
    void thread_ap_CS_fsm_state5();
    void thread_ap_CS_fsm_state6();
    void thread_ap_CS_fsm_state7();
    void thread_ap_CS_fsm_state8();
    void thread_ap_CS_fsm_state9();
    void thread_ap_block_state2_on_subcall_done();
    void thread_ap_done();
    void thread_ap_idle();
    void thread_ap_ready();
    void thread_ap_return();
    void thread_ap_rst_n_inv();
    void thread_bias_oc_address0();
    void thread_bias_oc_ce0();
    void thread_bias_oc_we0();
    void thread_grp_convulution1_fu_142_ap_start();
    void thread_grp_maxpool_2_fu_150_ap_start();
    void thread_grp_relu_1_fu_156_ap_start();
    void thread_grp_relu_2_fu_161_ap_start();
    void thread_grp_store_bias_fu_192_ap_start();
    void thread_grp_store_input_fu_183_ap_start();
    void thread_grp_store_output_fu_175_ap_start();
    void thread_grp_store_weights_fu_166_ap_start();
    void thread_input_oc_0_address0();
    void thread_input_oc_0_ce0();
    void thread_input_oc_0_ce1();
    void thread_input_oc_0_we0();
    void thread_output1_oc_address0();
    void thread_output1_oc_ce0();
    void thread_output1_oc_d0();
    void thread_output1_oc_we0();
    void thread_output2_oc_address0();
    void thread_output2_oc_ce0();
    void thread_output2_oc_d0();
    void thread_output2_oc_we0();
    void thread_weights_oc_0_address0();
    void thread_weights_oc_0_ce0();
    void thread_weights_oc_0_ce1();
    void thread_weights_oc_0_we0();
    void thread_ap_NS_fsm();
    void thread_hdltv_gen();
};

}

using namespace ap_rtl;

#endif
