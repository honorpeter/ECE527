// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2018.2
// Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#ifndef _convolution_5_HH_
#define _convolution_5_HH_

#include "systemc.h"
#include "AESL_pkg.h"

#include "conv1_fadd_32ns_3bkb.h"
#include "conv1_fmul_32ns_3cud.h"

namespace ap_rtl {

struct convolution_5 : public sc_module {
    // Port declarations 19
    sc_in_clk ap_clk;
    sc_in< sc_logic > ap_rst;
    sc_in< sc_logic > ap_start;
    sc_out< sc_logic > ap_done;
    sc_out< sc_logic > ap_idle;
    sc_out< sc_logic > ap_ready;
    sc_out< sc_lv<9> > input_r_address0;
    sc_out< sc_logic > input_r_ce0;
    sc_in< sc_lv<32> > input_r_q0;
    sc_out< sc_lv<16> > weights_address0;
    sc_out< sc_logic > weights_ce0;
    sc_in< sc_lv<32> > weights_q0;
    sc_out< sc_lv<7> > bias_address0;
    sc_out< sc_logic > bias_ce0;
    sc_in< sc_lv<32> > bias_q0;
    sc_out< sc_lv<7> > output_0_0_address0;
    sc_out< sc_logic > output_0_0_ce0;
    sc_out< sc_logic > output_0_0_we0;
    sc_out< sc_lv<32> > output_0_0_d0;
    sc_signal< sc_logic > ap_var_for_const0;


    // Module declarations
    convolution_5(sc_module_name name);
    SC_HAS_PROCESS(convolution_5);

    ~convolution_5();

    sc_trace_file* mVcdFile;

    conv1_fadd_32ns_3bkb<1,5,32,32,32>* conv1_fadd_32ns_3bkb_U53;
    conv1_fmul_32ns_3cud<1,4,32,32,32>* conv1_fmul_32ns_3cud_U54;
    sc_signal< sc_lv<23> > ap_CS_fsm;
    sc_signal< sc_logic > ap_CS_fsm_state1;
    sc_signal< sc_lv<7> > co_2_fu_200_p2;
    sc_signal< sc_lv<7> > co_2_reg_397;
    sc_signal< sc_logic > ap_CS_fsm_state2;
    sc_signal< sc_lv<64> > tmp_fu_206_p1;
    sc_signal< sc_lv<64> > tmp_reg_402;
    sc_signal< sc_lv<1> > exitcond3_fu_194_p2;
    sc_signal< sc_lv<12> > tmp_165_cast_fu_218_p1;
    sc_signal< sc_lv<12> > tmp_165_cast_reg_408;
    sc_signal< sc_lv<3> > m_fu_228_p2;
    sc_signal< sc_lv<3> > m_reg_416;
    sc_signal< sc_logic > ap_CS_fsm_state3;
    sc_signal< sc_lv<64> > tmp_8_fu_234_p1;
    sc_signal< sc_lv<64> > tmp_8_reg_421;
    sc_signal< sc_lv<1> > exitcond2_fu_222_p2;
    sc_signal< sc_lv<8> > tmp_8_cast_fu_238_p1;
    sc_signal< sc_lv<8> > tmp_8_cast_reg_426;
    sc_signal< sc_lv<3> > n_fu_248_p2;
    sc_signal< sc_lv<3> > n_reg_439;
    sc_signal< sc_logic > ap_CS_fsm_state4;
    sc_signal< sc_lv<17> > tmp_9_cast1_fu_254_p1;
    sc_signal< sc_lv<17> > tmp_9_cast1_reg_444;
    sc_signal< sc_lv<1> > exitcond1_fu_242_p2;
    sc_signal< sc_lv<10> > tmp_9_cast_fu_258_p1;
    sc_signal< sc_lv<10> > tmp_9_cast_reg_449;
    sc_signal< sc_lv<5> > ci_1_fu_268_p2;
    sc_signal< sc_lv<5> > ci_1_reg_457;
    sc_signal< sc_logic > ap_CS_fsm_state5;
    sc_signal< sc_lv<10> > tmp_142_fu_323_p2;
    sc_signal< sc_lv<10> > tmp_142_reg_462;
    sc_signal< sc_lv<1> > exitcond_fu_262_p2;
    sc_signal< sc_lv<17> > tmp_146_fu_360_p1;
    sc_signal< sc_lv<17> > tmp_146_reg_467;
    sc_signal< sc_lv<15> > tmp_147_fu_364_p1;
    sc_signal< sc_lv<15> > tmp_147_reg_472;
    sc_signal< sc_logic > ap_CS_fsm_state6;
    sc_signal< sc_lv<32> > weights_load_reg_487;
    sc_signal< sc_logic > ap_CS_fsm_state7;
    sc_signal< sc_lv<32> > input_load_reg_492;
    sc_signal< sc_lv<32> > grp_fu_190_p2;
    sc_signal< sc_lv<32> > tmp_11_reg_497;
    sc_signal< sc_logic > ap_CS_fsm_state11;
    sc_signal< sc_lv<32> > grp_fu_184_p2;
    sc_signal< sc_logic > ap_CS_fsm_state16;
    sc_signal< sc_lv<32> > bias_load_reg_507;
    sc_signal< sc_logic > ap_CS_fsm_state17;
    sc_signal< sc_lv<32> > tmp_s_reg_512;
    sc_signal< sc_logic > ap_CS_fsm_state22;
    sc_signal< sc_lv<7> > co_reg_104;
    sc_signal< sc_logic > ap_CS_fsm_state23;
    sc_signal< sc_lv<3> > i_reg_115;
    sc_signal< sc_lv<32> > sum_reg_126;
    sc_signal< sc_lv<32> > sum_1_reg_138;
    sc_signal< sc_lv<3> > j_reg_150;
    sc_signal< sc_lv<32> > sum_2_reg_161;
    sc_signal< sc_lv<5> > ci_reg_173;
    sc_signal< sc_lv<64> > tmp_171_cast_fu_368_p1;
    sc_signal< sc_lv<64> > tmp_178_cast_fu_389_p1;
    sc_signal< sc_lv<32> > grp_fu_184_p0;
    sc_signal< sc_lv<32> > grp_fu_184_p1;
    sc_signal< sc_logic > ap_CS_fsm_state12;
    sc_signal< sc_logic > ap_CS_fsm_state18;
    sc_signal< sc_logic > ap_CS_fsm_state8;
    sc_signal< sc_lv<11> > tmp_137_fu_210_p3;
    sc_signal< sc_lv<7> > tmp_138_fu_282_p3;
    sc_signal< sc_lv<8> > p_shl3_cast_fu_290_p1;
    sc_signal< sc_lv<8> > tmp_10_cast_fu_278_p1;
    sc_signal< sc_lv<8> > tmp_139_fu_294_p2;
    sc_signal< sc_lv<8> > tmp_140_fu_300_p2;
    sc_signal< sc_lv<10> > p_shl2_cast_fu_309_p3;
    sc_signal< sc_lv<10> > tmp_168_cast_fu_305_p1;
    sc_signal< sc_lv<10> > tmp_141_fu_317_p2;
    sc_signal< sc_lv<12> > tmp_10_cast1_fu_274_p1;
    sc_signal< sc_lv<12> > tmp_143_fu_328_p2;
    sc_signal< sc_lv<14> > tmp_136_fu_337_p3;
    sc_signal< sc_lv<64> > p_shl1_fu_345_p1;
    sc_signal< sc_lv<64> > tmp_172_cast_fu_333_p1;
    sc_signal< sc_lv<64> > tmp_144_fu_349_p2;
    sc_signal< sc_lv<64> > tmp_145_fu_355_p2;
    sc_signal< sc_lv<17> > p_shl_cast_fu_372_p3;
    sc_signal< sc_lv<17> > tmp_148_fu_379_p2;
    sc_signal< sc_lv<17> > tmp_149_fu_384_p2;
    sc_signal< sc_lv<23> > ap_NS_fsm;
    static const sc_logic ap_const_logic_1;
    static const sc_logic ap_const_logic_0;
    static const sc_lv<23> ap_ST_fsm_state1;
    static const sc_lv<23> ap_ST_fsm_state2;
    static const sc_lv<23> ap_ST_fsm_state3;
    static const sc_lv<23> ap_ST_fsm_state4;
    static const sc_lv<23> ap_ST_fsm_state5;
    static const sc_lv<23> ap_ST_fsm_state6;
    static const sc_lv<23> ap_ST_fsm_state7;
    static const sc_lv<23> ap_ST_fsm_state8;
    static const sc_lv<23> ap_ST_fsm_state9;
    static const sc_lv<23> ap_ST_fsm_state10;
    static const sc_lv<23> ap_ST_fsm_state11;
    static const sc_lv<23> ap_ST_fsm_state12;
    static const sc_lv<23> ap_ST_fsm_state13;
    static const sc_lv<23> ap_ST_fsm_state14;
    static const sc_lv<23> ap_ST_fsm_state15;
    static const sc_lv<23> ap_ST_fsm_state16;
    static const sc_lv<23> ap_ST_fsm_state17;
    static const sc_lv<23> ap_ST_fsm_state18;
    static const sc_lv<23> ap_ST_fsm_state19;
    static const sc_lv<23> ap_ST_fsm_state20;
    static const sc_lv<23> ap_ST_fsm_state21;
    static const sc_lv<23> ap_ST_fsm_state22;
    static const sc_lv<23> ap_ST_fsm_state23;
    static const sc_lv<32> ap_const_lv32_0;
    static const sc_lv<32> ap_const_lv32_1;
    static const sc_lv<1> ap_const_lv1_0;
    static const sc_lv<32> ap_const_lv32_2;
    static const sc_lv<1> ap_const_lv1_1;
    static const sc_lv<32> ap_const_lv32_3;
    static const sc_lv<32> ap_const_lv32_4;
    static const sc_lv<32> ap_const_lv32_5;
    static const sc_lv<32> ap_const_lv32_6;
    static const sc_lv<32> ap_const_lv32_A;
    static const sc_lv<32> ap_const_lv32_F;
    static const sc_lv<32> ap_const_lv32_10;
    static const sc_lv<32> ap_const_lv32_15;
    static const sc_lv<7> ap_const_lv7_0;
    static const sc_lv<32> ap_const_lv32_16;
    static const sc_lv<3> ap_const_lv3_0;
    static const sc_lv<5> ap_const_lv5_0;
    static const sc_lv<32> ap_const_lv32_B;
    static const sc_lv<32> ap_const_lv32_11;
    static const sc_lv<32> ap_const_lv32_7;
    static const sc_lv<7> ap_const_lv7_78;
    static const sc_lv<7> ap_const_lv7_1;
    static const sc_lv<4> ap_const_lv4_0;
    static const sc_lv<3> ap_const_lv3_5;
    static const sc_lv<3> ap_const_lv3_1;
    static const sc_lv<5> ap_const_lv5_10;
    static const sc_lv<5> ap_const_lv5_1;
    static const sc_lv<2> ap_const_lv2_0;
    static const bool ap_const_boolean_1;
    // Thread declarations
    void thread_ap_var_for_const0();
    void thread_ap_clk_no_reset_();
    void thread_ap_CS_fsm_state1();
    void thread_ap_CS_fsm_state11();
    void thread_ap_CS_fsm_state12();
    void thread_ap_CS_fsm_state16();
    void thread_ap_CS_fsm_state17();
    void thread_ap_CS_fsm_state18();
    void thread_ap_CS_fsm_state2();
    void thread_ap_CS_fsm_state22();
    void thread_ap_CS_fsm_state23();
    void thread_ap_CS_fsm_state3();
    void thread_ap_CS_fsm_state4();
    void thread_ap_CS_fsm_state5();
    void thread_ap_CS_fsm_state6();
    void thread_ap_CS_fsm_state7();
    void thread_ap_CS_fsm_state8();
    void thread_ap_done();
    void thread_ap_idle();
    void thread_ap_ready();
    void thread_bias_address0();
    void thread_bias_ce0();
    void thread_ci_1_fu_268_p2();
    void thread_co_2_fu_200_p2();
    void thread_exitcond1_fu_242_p2();
    void thread_exitcond2_fu_222_p2();
    void thread_exitcond3_fu_194_p2();
    void thread_exitcond_fu_262_p2();
    void thread_grp_fu_184_p0();
    void thread_grp_fu_184_p1();
    void thread_input_r_address0();
    void thread_input_r_ce0();
    void thread_m_fu_228_p2();
    void thread_n_fu_248_p2();
    void thread_output_0_0_address0();
    void thread_output_0_0_ce0();
    void thread_output_0_0_d0();
    void thread_output_0_0_we0();
    void thread_p_shl1_fu_345_p1();
    void thread_p_shl2_cast_fu_309_p3();
    void thread_p_shl3_cast_fu_290_p1();
    void thread_p_shl_cast_fu_372_p3();
    void thread_tmp_10_cast1_fu_274_p1();
    void thread_tmp_10_cast_fu_278_p1();
    void thread_tmp_136_fu_337_p3();
    void thread_tmp_137_fu_210_p3();
    void thread_tmp_138_fu_282_p3();
    void thread_tmp_139_fu_294_p2();
    void thread_tmp_140_fu_300_p2();
    void thread_tmp_141_fu_317_p2();
    void thread_tmp_142_fu_323_p2();
    void thread_tmp_143_fu_328_p2();
    void thread_tmp_144_fu_349_p2();
    void thread_tmp_145_fu_355_p2();
    void thread_tmp_146_fu_360_p1();
    void thread_tmp_147_fu_364_p1();
    void thread_tmp_148_fu_379_p2();
    void thread_tmp_149_fu_384_p2();
    void thread_tmp_165_cast_fu_218_p1();
    void thread_tmp_168_cast_fu_305_p1();
    void thread_tmp_171_cast_fu_368_p1();
    void thread_tmp_172_cast_fu_333_p1();
    void thread_tmp_178_cast_fu_389_p1();
    void thread_tmp_8_cast_fu_238_p1();
    void thread_tmp_8_fu_234_p1();
    void thread_tmp_9_cast1_fu_254_p1();
    void thread_tmp_9_cast_fu_258_p1();
    void thread_tmp_fu_206_p1();
    void thread_weights_address0();
    void thread_weights_ce0();
    void thread_ap_NS_fsm();
};

}

using namespace ap_rtl;

#endif
