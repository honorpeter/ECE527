// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2018.2
// Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#ifndef _relu_2_HH_
#define _relu_2_HH_

#include "systemc.h"
#include "AESL_pkg.h"

#include "conv1_fcmp_32ns_3dEe.h"

namespace ap_rtl {

struct relu_2 : public sc_module {
    // Port declarations 11
    sc_in_clk ap_clk;
    sc_in< sc_logic > ap_rst;
    sc_in< sc_logic > ap_start;
    sc_out< sc_logic > ap_done;
    sc_out< sc_logic > ap_idle;
    sc_out< sc_logic > ap_ready;
    sc_out< sc_lv<11> > output_r_address0;
    sc_out< sc_logic > output_r_ce0;
    sc_out< sc_logic > output_r_we0;
    sc_out< sc_lv<32> > output_r_d0;
    sc_in< sc_lv<32> > output_r_q0;
    sc_signal< sc_lv<32> > ap_var_for_const0;
    sc_signal< sc_lv<5> > ap_var_for_const1;


    // Module declarations
    relu_2(sc_module_name name);
    SC_HAS_PROCESS(relu_2);

    ~relu_2();

    sc_trace_file* mVcdFile;

    conv1_fcmp_32ns_3dEe<1,1,32,32,1>* conv1_fcmp_32ns_3dEe_U38;
    sc_signal< sc_lv<6> > ap_CS_fsm;
    sc_signal< sc_logic > ap_CS_fsm_state1;
    sc_signal< sc_lv<3> > i_11_fu_102_p2;
    sc_signal< sc_lv<3> > i_11_reg_263;
    sc_signal< sc_logic > ap_CS_fsm_state2;
    sc_signal< sc_lv<9> > tmp_43_cast_fu_138_p1;
    sc_signal< sc_lv<9> > tmp_43_cast_reg_268;
    sc_signal< sc_lv<1> > exitcond2_fu_96_p2;
    sc_signal< sc_lv<4> > j_7_fu_148_p2;
    sc_signal< sc_lv<4> > j_7_reg_276;
    sc_signal< sc_logic > ap_CS_fsm_state3;
    sc_signal< sc_lv<12> > tmp_31_fu_187_p2;
    sc_signal< sc_lv<12> > tmp_31_reg_281;
    sc_signal< sc_lv<1> > exitcond1_fu_142_p2;
    sc_signal< sc_lv<4> > k_6_fu_199_p2;
    sc_signal< sc_lv<4> > k_6_reg_289;
    sc_signal< sc_logic > ap_CS_fsm_state4;
    sc_signal< sc_lv<11> > output_addr_reg_294;
    sc_signal< sc_lv<1> > exitcond_fu_193_p2;
    sc_signal< sc_lv<32> > output_load_reg_299;
    sc_signal< sc_logic > ap_CS_fsm_state5;
    sc_signal< sc_lv<3> > i_reg_58;
    sc_signal< sc_lv<4> > j_reg_69;
    sc_signal< sc_lv<4> > k_reg_80;
    sc_signal< sc_logic > ap_CS_fsm_state6;
    sc_signal< sc_lv<64> > tmp_48_cast_fu_214_p1;
    sc_signal< sc_lv<1> > tmp_15_fu_254_p2;
    sc_signal< sc_lv<7> > tmp_fu_108_p3;
    sc_signal< sc_lv<4> > tmp_s_fu_120_p3;
    sc_signal< sc_lv<8> > p_shl_cast_fu_116_p1;
    sc_signal< sc_lv<8> > p_shl1_cast_fu_128_p1;
    sc_signal< sc_lv<8> > tmp_29_fu_132_p2;
    sc_signal< sc_lv<9> > tmp_cast_fu_154_p1;
    sc_signal< sc_lv<9> > tmp_30_fu_158_p2;
    sc_signal< sc_lv<8> > tmp_16_fu_163_p1;
    sc_signal< sc_lv<10> > tmp_17_fu_175_p3;
    sc_signal< sc_lv<12> > p_shl2_cast_fu_167_p3;
    sc_signal< sc_lv<12> > p_shl3_cast_fu_183_p1;
    sc_signal< sc_lv<12> > tmp_9_cast_fu_205_p1;
    sc_signal< sc_lv<12> > tmp_32_fu_209_p2;
    sc_signal< sc_lv<32> > output_load_to_int_fu_219_p1;
    sc_signal< sc_lv<8> > tmp_11_fu_222_p4;
    sc_signal< sc_lv<23> > tmp_18_fu_232_p1;
    sc_signal< sc_lv<1> > notrhs_fu_242_p2;
    sc_signal< sc_lv<1> > notlhs_fu_236_p2;
    sc_signal< sc_lv<1> > tmp_13_fu_248_p2;
    sc_signal< sc_lv<1> > tmp_14_fu_91_p2;
    sc_signal< sc_lv<6> > ap_NS_fsm;
    static const sc_logic ap_const_logic_1;
    static const sc_logic ap_const_logic_0;
    static const sc_lv<6> ap_ST_fsm_state1;
    static const sc_lv<6> ap_ST_fsm_state2;
    static const sc_lv<6> ap_ST_fsm_state3;
    static const sc_lv<6> ap_ST_fsm_state4;
    static const sc_lv<6> ap_ST_fsm_state5;
    static const sc_lv<6> ap_ST_fsm_state6;
    static const sc_lv<32> ap_const_lv32_0;
    static const sc_lv<32> ap_const_lv32_1;
    static const sc_lv<1> ap_const_lv1_0;
    static const sc_lv<32> ap_const_lv32_2;
    static const sc_lv<32> ap_const_lv32_3;
    static const sc_lv<32> ap_const_lv32_4;
    static const sc_lv<3> ap_const_lv3_0;
    static const sc_lv<1> ap_const_lv1_1;
    static const sc_lv<4> ap_const_lv4_0;
    static const sc_lv<32> ap_const_lv32_5;
    static const sc_lv<3> ap_const_lv3_6;
    static const sc_lv<3> ap_const_lv3_1;
    static const sc_lv<4> ap_const_lv4_E;
    static const sc_lv<4> ap_const_lv4_1;
    static const sc_lv<32> ap_const_lv32_17;
    static const sc_lv<32> ap_const_lv32_1E;
    static const sc_lv<8> ap_const_lv8_FF;
    static const sc_lv<23> ap_const_lv23_0;
    static const sc_lv<5> ap_const_lv5_4;
    static const bool ap_const_boolean_1;
    // Thread declarations
    void thread_ap_var_for_const0();
    void thread_ap_var_for_const1();
    void thread_ap_clk_no_reset_();
    void thread_ap_CS_fsm_state1();
    void thread_ap_CS_fsm_state2();
    void thread_ap_CS_fsm_state3();
    void thread_ap_CS_fsm_state4();
    void thread_ap_CS_fsm_state5();
    void thread_ap_CS_fsm_state6();
    void thread_ap_done();
    void thread_ap_idle();
    void thread_ap_ready();
    void thread_exitcond1_fu_142_p2();
    void thread_exitcond2_fu_96_p2();
    void thread_exitcond_fu_193_p2();
    void thread_i_11_fu_102_p2();
    void thread_j_7_fu_148_p2();
    void thread_k_6_fu_199_p2();
    void thread_notlhs_fu_236_p2();
    void thread_notrhs_fu_242_p2();
    void thread_output_load_to_int_fu_219_p1();
    void thread_output_r_address0();
    void thread_output_r_ce0();
    void thread_output_r_d0();
    void thread_output_r_we0();
    void thread_p_shl1_cast_fu_128_p1();
    void thread_p_shl2_cast_fu_167_p3();
    void thread_p_shl3_cast_fu_183_p1();
    void thread_p_shl_cast_fu_116_p1();
    void thread_tmp_11_fu_222_p4();
    void thread_tmp_13_fu_248_p2();
    void thread_tmp_15_fu_254_p2();
    void thread_tmp_16_fu_163_p1();
    void thread_tmp_17_fu_175_p3();
    void thread_tmp_18_fu_232_p1();
    void thread_tmp_29_fu_132_p2();
    void thread_tmp_30_fu_158_p2();
    void thread_tmp_31_fu_187_p2();
    void thread_tmp_32_fu_209_p2();
    void thread_tmp_43_cast_fu_138_p1();
    void thread_tmp_48_cast_fu_214_p1();
    void thread_tmp_9_cast_fu_205_p1();
    void thread_tmp_cast_fu_154_p1();
    void thread_tmp_fu_108_p3();
    void thread_tmp_s_fu_120_p3();
    void thread_ap_NS_fsm();
};

}

using namespace ap_rtl;

#endif
