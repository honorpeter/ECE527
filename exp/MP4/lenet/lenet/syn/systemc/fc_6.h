// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2018.2
// Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#ifndef _fc_6_HH_
#define _fc_6_HH_

#include "systemc.h"
#include "AESL_pkg.h"

#include "conv1_fadd_32ns_3bkb.h"
#include "conv1_fmul_32ns_3cud.h"

namespace ap_rtl {

struct fc_6 : public sc_module {
    // Port declarations 105
    sc_in_clk ap_clk;
    sc_in< sc_logic > ap_rst;
    sc_in< sc_logic > ap_start;
    sc_out< sc_logic > ap_done;
    sc_out< sc_logic > ap_idle;
    sc_out< sc_logic > ap_ready;
    sc_out< sc_lv<7> > input_0_0_address0;
    sc_out< sc_logic > input_0_0_ce0;
    sc_in< sc_lv<32> > input_0_0_q0;
    sc_out< sc_logic > m_axi_weights_AWVALID;
    sc_in< sc_logic > m_axi_weights_AWREADY;
    sc_out< sc_lv<32> > m_axi_weights_AWADDR;
    sc_out< sc_lv<1> > m_axi_weights_AWID;
    sc_out< sc_lv<32> > m_axi_weights_AWLEN;
    sc_out< sc_lv<3> > m_axi_weights_AWSIZE;
    sc_out< sc_lv<2> > m_axi_weights_AWBURST;
    sc_out< sc_lv<2> > m_axi_weights_AWLOCK;
    sc_out< sc_lv<4> > m_axi_weights_AWCACHE;
    sc_out< sc_lv<3> > m_axi_weights_AWPROT;
    sc_out< sc_lv<4> > m_axi_weights_AWQOS;
    sc_out< sc_lv<4> > m_axi_weights_AWREGION;
    sc_out< sc_lv<1> > m_axi_weights_AWUSER;
    sc_out< sc_logic > m_axi_weights_WVALID;
    sc_in< sc_logic > m_axi_weights_WREADY;
    sc_out< sc_lv<32> > m_axi_weights_WDATA;
    sc_out< sc_lv<4> > m_axi_weights_WSTRB;
    sc_out< sc_logic > m_axi_weights_WLAST;
    sc_out< sc_lv<1> > m_axi_weights_WID;
    sc_out< sc_lv<1> > m_axi_weights_WUSER;
    sc_out< sc_logic > m_axi_weights_ARVALID;
    sc_in< sc_logic > m_axi_weights_ARREADY;
    sc_out< sc_lv<32> > m_axi_weights_ARADDR;
    sc_out< sc_lv<1> > m_axi_weights_ARID;
    sc_out< sc_lv<32> > m_axi_weights_ARLEN;
    sc_out< sc_lv<3> > m_axi_weights_ARSIZE;
    sc_out< sc_lv<2> > m_axi_weights_ARBURST;
    sc_out< sc_lv<2> > m_axi_weights_ARLOCK;
    sc_out< sc_lv<4> > m_axi_weights_ARCACHE;
    sc_out< sc_lv<3> > m_axi_weights_ARPROT;
    sc_out< sc_lv<4> > m_axi_weights_ARQOS;
    sc_out< sc_lv<4> > m_axi_weights_ARREGION;
    sc_out< sc_lv<1> > m_axi_weights_ARUSER;
    sc_in< sc_logic > m_axi_weights_RVALID;
    sc_out< sc_logic > m_axi_weights_RREADY;
    sc_in< sc_lv<32> > m_axi_weights_RDATA;
    sc_in< sc_logic > m_axi_weights_RLAST;
    sc_in< sc_lv<1> > m_axi_weights_RID;
    sc_in< sc_lv<1> > m_axi_weights_RUSER;
    sc_in< sc_lv<2> > m_axi_weights_RRESP;
    sc_in< sc_logic > m_axi_weights_BVALID;
    sc_out< sc_logic > m_axi_weights_BREADY;
    sc_in< sc_lv<2> > m_axi_weights_BRESP;
    sc_in< sc_lv<1> > m_axi_weights_BID;
    sc_in< sc_lv<1> > m_axi_weights_BUSER;
    sc_in< sc_lv<30> > weights_offset;
    sc_out< sc_logic > m_axi_bias_AWVALID;
    sc_in< sc_logic > m_axi_bias_AWREADY;
    sc_out< sc_lv<32> > m_axi_bias_AWADDR;
    sc_out< sc_lv<1> > m_axi_bias_AWID;
    sc_out< sc_lv<32> > m_axi_bias_AWLEN;
    sc_out< sc_lv<3> > m_axi_bias_AWSIZE;
    sc_out< sc_lv<2> > m_axi_bias_AWBURST;
    sc_out< sc_lv<2> > m_axi_bias_AWLOCK;
    sc_out< sc_lv<4> > m_axi_bias_AWCACHE;
    sc_out< sc_lv<3> > m_axi_bias_AWPROT;
    sc_out< sc_lv<4> > m_axi_bias_AWQOS;
    sc_out< sc_lv<4> > m_axi_bias_AWREGION;
    sc_out< sc_lv<1> > m_axi_bias_AWUSER;
    sc_out< sc_logic > m_axi_bias_WVALID;
    sc_in< sc_logic > m_axi_bias_WREADY;
    sc_out< sc_lv<32> > m_axi_bias_WDATA;
    sc_out< sc_lv<4> > m_axi_bias_WSTRB;
    sc_out< sc_logic > m_axi_bias_WLAST;
    sc_out< sc_lv<1> > m_axi_bias_WID;
    sc_out< sc_lv<1> > m_axi_bias_WUSER;
    sc_out< sc_logic > m_axi_bias_ARVALID;
    sc_in< sc_logic > m_axi_bias_ARREADY;
    sc_out< sc_lv<32> > m_axi_bias_ARADDR;
    sc_out< sc_lv<1> > m_axi_bias_ARID;
    sc_out< sc_lv<32> > m_axi_bias_ARLEN;
    sc_out< sc_lv<3> > m_axi_bias_ARSIZE;
    sc_out< sc_lv<2> > m_axi_bias_ARBURST;
    sc_out< sc_lv<2> > m_axi_bias_ARLOCK;
    sc_out< sc_lv<4> > m_axi_bias_ARCACHE;
    sc_out< sc_lv<3> > m_axi_bias_ARPROT;
    sc_out< sc_lv<4> > m_axi_bias_ARQOS;
    sc_out< sc_lv<4> > m_axi_bias_ARREGION;
    sc_out< sc_lv<1> > m_axi_bias_ARUSER;
    sc_in< sc_logic > m_axi_bias_RVALID;
    sc_out< sc_logic > m_axi_bias_RREADY;
    sc_in< sc_lv<32> > m_axi_bias_RDATA;
    sc_in< sc_logic > m_axi_bias_RLAST;
    sc_in< sc_lv<1> > m_axi_bias_RID;
    sc_in< sc_lv<1> > m_axi_bias_RUSER;
    sc_in< sc_lv<2> > m_axi_bias_RRESP;
    sc_in< sc_logic > m_axi_bias_BVALID;
    sc_out< sc_logic > m_axi_bias_BREADY;
    sc_in< sc_lv<2> > m_axi_bias_BRESP;
    sc_in< sc_lv<1> > m_axi_bias_BID;
    sc_in< sc_lv<1> > m_axi_bias_BUSER;
    sc_in< sc_lv<30> > bias_offset;
    sc_out< sc_lv<4> > output_r_address0;
    sc_out< sc_logic > output_r_ce0;
    sc_out< sc_logic > output_r_we0;
    sc_out< sc_lv<32> > output_r_d0;


    // Module declarations
    fc_6(sc_module_name name);
    SC_HAS_PROCESS(fc_6);

    ~fc_6();

    sc_trace_file* mVcdFile;

    conv1_fadd_32ns_3bkb<1,5,32,32,32>* conv1_fadd_32ns_3bkb_U84;
    conv1_fmul_32ns_3cud<1,4,32,32,32>* conv1_fmul_32ns_3cud_U85;
    sc_signal< sc_lv<13> > ap_CS_fsm;
    sc_signal< sc_logic > ap_CS_fsm_state1;
    sc_signal< sc_logic > weights_blk_n_AR;
    sc_signal< sc_logic > ap_CS_fsm_pp0_stage1;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter0;
    sc_signal< bool > ap_block_pp0_stage1;
    sc_signal< sc_lv<1> > exitcond_flatten_reg_352;
    sc_signal< sc_logic > weights_blk_n_R;
    sc_signal< sc_logic > ap_CS_fsm_pp0_stage3;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter1;
    sc_signal< bool > ap_block_pp0_stage3;
    sc_signal< sc_lv<1> > exitcond_flatten_reg_352_pp0_iter1_reg;
    sc_signal< sc_logic > bias_blk_n_AR;
    sc_signal< sc_logic > bias_blk_n_R;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter3;
    sc_signal< sc_lv<1> > ifzero_reg_395;
    sc_signal< sc_lv<1> > ifzero_reg_395_pp0_iter3_reg;
    sc_signal< sc_lv<11> > indvar_flatten_reg_144;
    sc_signal< sc_lv<4> > n_reg_155;
    sc_signal< sc_lv<32> > tmp_s_reg_166;
    sc_signal< sc_lv<7> > c_reg_178;
    sc_signal< sc_logic > ap_sig_ioackin_m_axi_bias_ARREADY;
    sc_signal< sc_lv<32> > weights_offset_cast_fu_208_p1;
    sc_signal< sc_lv<32> > weights_offset_cast_reg_347;
    sc_signal< sc_logic > ap_CS_fsm_state7;
    sc_signal< sc_lv<1> > exitcond_flatten_fu_212_p2;
    sc_signal< sc_logic > ap_CS_fsm_pp0_stage0;
    sc_signal< bool > ap_block_state8_pp0_stage0_iter0;
    sc_signal< bool > ap_block_state13_pp0_stage0_iter1;
    sc_signal< bool > ap_block_state18_pp0_stage0_iter2;
    sc_signal< bool > ap_block_state23_pp0_stage0_iter3;
    sc_signal< bool > ap_block_state28_pp0_stage0_iter4;
    sc_signal< bool > ap_block_pp0_stage0_11001;
    sc_signal< sc_lv<1> > exitcond_flatten_reg_352_pp0_iter2_reg;
    sc_signal< sc_lv<1> > exitcond_flatten_reg_352_pp0_iter3_reg;
    sc_signal< sc_lv<11> > indvar_flatten_next_fu_218_p2;
    sc_signal< sc_lv<11> > indvar_flatten_next_reg_356;
    sc_signal< sc_lv<1> > exitcond_fu_230_p2;
    sc_signal< sc_lv<1> > exitcond_reg_361;
    sc_signal< sc_lv<1> > exitcond_reg_361_pp0_iter1_reg;
    sc_signal< sc_lv<1> > exitcond_reg_361_pp0_iter2_reg;
    sc_signal< sc_lv<7> > c_mid2_fu_236_p3;
    sc_signal< sc_lv<7> > c_mid2_reg_366;
    sc_signal< sc_lv<7> > c_mid2_reg_366_pp0_iter1_reg;
    sc_signal< sc_lv<4> > tmp_mid2_v_fu_244_p3;
    sc_signal< sc_lv<4> > tmp_mid2_v_reg_372;
    sc_signal< sc_lv<4> > tmp_mid2_v_reg_372_pp0_iter1_reg;
    sc_signal< sc_lv<4> > tmp_mid2_v_reg_372_pp0_iter2_reg;
    sc_signal< sc_lv<4> > tmp_mid2_v_reg_372_pp0_iter3_reg;
    sc_signal< sc_lv<4> > tmp_mid2_v_reg_372_pp0_iter4_reg;
    sc_signal< sc_lv<32> > sum_fu_300_p2;
    sc_signal< sc_lv<32> > sum_reg_378;
    sc_signal< bool > ap_block_state9_pp0_stage1_iter0;
    sc_signal< sc_logic > ap_sig_ioackin_m_axi_weights_ARREADY;
    sc_signal< bool > ap_block_state9_io;
    sc_signal< bool > ap_block_state14_pp0_stage1_iter1;
    sc_signal< bool > ap_block_state19_pp0_stage1_iter2;
    sc_signal< bool > ap_block_state24_pp0_stage1_iter3;
    sc_signal< bool > ap_block_state29_pp0_stage1_iter4;
    sc_signal< bool > ap_block_pp0_stage1_11001;
    sc_signal< sc_lv<7> > c_3_fu_315_p2;
    sc_signal< sc_lv<7> > c_3_reg_389;
    sc_signal< sc_logic > ap_CS_fsm_pp0_stage4;
    sc_signal< bool > ap_block_state12_pp0_stage4_iter0;
    sc_signal< bool > ap_block_state17_pp0_stage4_iter1;
    sc_signal< bool > ap_block_state22_pp0_stage4_iter2;
    sc_signal< bool > ap_block_state27_pp0_stage4_iter3;
    sc_signal< bool > ap_block_state32_pp0_stage4_iter4;
    sc_signal< bool > ap_block_pp0_stage4_11001;
    sc_signal< sc_lv<1> > ifzero_fu_320_p2;
    sc_signal< sc_lv<1> > ifzero_reg_395_pp0_iter2_reg;
    sc_signal< sc_lv<1> > ifzero_reg_395_pp0_iter4_reg;
    sc_signal< sc_logic > ap_CS_fsm_pp0_stage2;
    sc_signal< bool > ap_block_state10_pp0_stage2_iter0;
    sc_signal< bool > ap_block_state15_pp0_stage2_iter1;
    sc_signal< bool > ap_block_state20_pp0_stage2_iter2;
    sc_signal< bool > ap_block_state25_pp0_stage2_iter3;
    sc_signal< bool > ap_block_state30_pp0_stage2_iter4;
    sc_signal< bool > ap_block_pp0_stage2_11001;
    sc_signal< sc_lv<32> > weights_addr_read_reg_404;
    sc_signal< bool > ap_block_state11_pp0_stage3_iter0;
    sc_signal< bool > ap_block_state16_pp0_stage3_iter1;
    sc_signal< bool > ap_block_state21_pp0_stage3_iter2;
    sc_signal< bool > ap_block_state26_pp0_stage3_iter3;
    sc_signal< bool > ap_block_state31_pp0_stage3_iter4;
    sc_signal< bool > ap_block_pp0_stage3_11001;
    sc_signal< sc_lv<32> > input_0_0_load_reg_409;
    sc_signal< sc_lv<32> > grp_fu_193_p2;
    sc_signal< sc_lv<32> > tmp_8_reg_414;
    sc_signal< sc_lv<32> > tmp_mid2_fu_329_p3;
    sc_signal< sc_lv<32> > grp_fu_189_p2;
    sc_signal< sc_lv<32> > tmp_9_reg_424;
    sc_signal< sc_lv<32> > bias_addr_read_reg_430;
    sc_signal< sc_lv<32> > tmp_6_reg_435;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter4;
    sc_signal< bool > ap_block_pp0_stage0_subdone;
    sc_signal< sc_logic > ap_condition_pp0_exit_iter0_state8;
    sc_signal< bool > ap_block_pp0_stage4_subdone;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter2;
    sc_signal< sc_lv<11> > ap_phi_mux_indvar_flatten_phi_fu_148_p4;
    sc_signal< bool > ap_block_pp0_stage0;
    sc_signal< sc_lv<4> > ap_phi_mux_n_phi_fu_159_p4;
    sc_signal< sc_lv<32> > ap_phi_mux_tmp_s_phi_fu_170_p4;
    sc_signal< sc_lv<7> > ap_phi_mux_c_phi_fu_182_p4;
    sc_signal< sc_lv<64> > tmp_7_fu_325_p1;
    sc_signal< bool > ap_block_pp0_stage2;
    sc_signal< sc_lv<64> > tmp_mid2_26_fu_337_p1;
    sc_signal< bool > ap_block_pp0_stage4;
    sc_signal< sc_lv<64> > sext2_fu_197_p1;
    sc_signal< sc_lv<64> > sum_cast_fu_305_p1;
    sc_signal< sc_logic > ap_reg_ioackin_m_axi_bias_ARREADY;
    sc_signal< sc_logic > ap_reg_ioackin_m_axi_weights_ARREADY;
    sc_signal< bool > ap_block_pp0_stage1_01001;
    sc_signal< sc_lv<32> > grp_fu_189_p0;
    sc_signal< sc_lv<32> > grp_fu_189_p1;
    sc_signal< sc_lv<4> > n_1_fu_224_p2;
    sc_signal< sc_lv<11> > tmp_fu_252_p3;
    sc_signal< sc_lv<7> > tmp_61_fu_264_p3;
    sc_signal< sc_lv<12> > p_shl_cast_fu_260_p1;
    sc_signal< sc_lv<12> > p_shl6_cast_fu_272_p1;
    sc_signal< sc_lv<12> > tmp_62_fu_276_p2;
    sc_signal< sc_lv<13> > tmp_87_cast_fu_282_p1;
    sc_signal< sc_lv<13> > tmp_7_cast_fu_286_p1;
    sc_signal< sc_lv<13> > tmp_63_fu_290_p2;
    sc_signal< sc_lv<32> > tmp_88_cast_fu_296_p1;
    sc_signal< sc_logic > grp_fu_189_ce;
    sc_signal< sc_logic > grp_fu_193_ce;
    sc_signal< sc_logic > ap_CS_fsm_state33;
    sc_signal< sc_lv<13> > ap_NS_fsm;
    sc_signal< bool > ap_block_pp0_stage1_subdone;
    sc_signal< bool > ap_block_pp0_stage2_subdone;
    sc_signal< bool > ap_block_pp0_stage3_subdone;
    sc_signal< sc_logic > ap_idle_pp0;
    sc_signal< sc_logic > ap_enable_pp0;
    sc_signal< bool > ap_condition_641;
    static const sc_logic ap_const_logic_1;
    static const sc_logic ap_const_logic_0;
    static const sc_lv<13> ap_ST_fsm_state1;
    static const sc_lv<13> ap_ST_fsm_state2;
    static const sc_lv<13> ap_ST_fsm_state3;
    static const sc_lv<13> ap_ST_fsm_state4;
    static const sc_lv<13> ap_ST_fsm_state5;
    static const sc_lv<13> ap_ST_fsm_state6;
    static const sc_lv<13> ap_ST_fsm_state7;
    static const sc_lv<13> ap_ST_fsm_pp0_stage0;
    static const sc_lv<13> ap_ST_fsm_pp0_stage1;
    static const sc_lv<13> ap_ST_fsm_pp0_stage2;
    static const sc_lv<13> ap_ST_fsm_pp0_stage3;
    static const sc_lv<13> ap_ST_fsm_pp0_stage4;
    static const sc_lv<13> ap_ST_fsm_state33;
    static const bool ap_const_boolean_1;
    static const sc_lv<32> ap_const_lv32_0;
    static const sc_lv<1> ap_const_lv1_0;
    static const sc_lv<3> ap_const_lv3_0;
    static const sc_lv<2> ap_const_lv2_0;
    static const sc_lv<4> ap_const_lv4_0;
    static const sc_lv<32> ap_const_lv32_8;
    static const bool ap_const_boolean_0;
    static const sc_lv<32> ap_const_lv32_A;
    static const sc_lv<1> ap_const_lv1_1;
    static const sc_lv<32> ap_const_lv32_6;
    static const sc_lv<32> ap_const_lv32_7;
    static const sc_lv<32> ap_const_lv32_B;
    static const sc_lv<32> ap_const_lv32_9;
    static const sc_lv<11> ap_const_lv11_0;
    static const sc_lv<7> ap_const_lv7_0;
    static const sc_lv<32> ap_const_lv32_1;
    static const sc_lv<11> ap_const_lv11_4B0;
    static const sc_lv<11> ap_const_lv11_1;
    static const sc_lv<4> ap_const_lv4_1;
    static const sc_lv<7> ap_const_lv7_78;
    static const sc_lv<7> ap_const_lv7_1;
    static const sc_lv<32> ap_const_lv32_C;
    // Thread declarations
    void thread_ap_clk_no_reset_();
    void thread_ap_CS_fsm_pp0_stage0();
    void thread_ap_CS_fsm_pp0_stage1();
    void thread_ap_CS_fsm_pp0_stage2();
    void thread_ap_CS_fsm_pp0_stage3();
    void thread_ap_CS_fsm_pp0_stage4();
    void thread_ap_CS_fsm_state1();
    void thread_ap_CS_fsm_state33();
    void thread_ap_CS_fsm_state7();
    void thread_ap_block_pp0_stage0();
    void thread_ap_block_pp0_stage0_11001();
    void thread_ap_block_pp0_stage0_subdone();
    void thread_ap_block_pp0_stage1();
    void thread_ap_block_pp0_stage1_01001();
    void thread_ap_block_pp0_stage1_11001();
    void thread_ap_block_pp0_stage1_subdone();
    void thread_ap_block_pp0_stage2();
    void thread_ap_block_pp0_stage2_11001();
    void thread_ap_block_pp0_stage2_subdone();
    void thread_ap_block_pp0_stage3();
    void thread_ap_block_pp0_stage3_11001();
    void thread_ap_block_pp0_stage3_subdone();
    void thread_ap_block_pp0_stage4();
    void thread_ap_block_pp0_stage4_11001();
    void thread_ap_block_pp0_stage4_subdone();
    void thread_ap_block_state10_pp0_stage2_iter0();
    void thread_ap_block_state11_pp0_stage3_iter0();
    void thread_ap_block_state12_pp0_stage4_iter0();
    void thread_ap_block_state13_pp0_stage0_iter1();
    void thread_ap_block_state14_pp0_stage1_iter1();
    void thread_ap_block_state15_pp0_stage2_iter1();
    void thread_ap_block_state16_pp0_stage3_iter1();
    void thread_ap_block_state17_pp0_stage4_iter1();
    void thread_ap_block_state18_pp0_stage0_iter2();
    void thread_ap_block_state19_pp0_stage1_iter2();
    void thread_ap_block_state20_pp0_stage2_iter2();
    void thread_ap_block_state21_pp0_stage3_iter2();
    void thread_ap_block_state22_pp0_stage4_iter2();
    void thread_ap_block_state23_pp0_stage0_iter3();
    void thread_ap_block_state24_pp0_stage1_iter3();
    void thread_ap_block_state25_pp0_stage2_iter3();
    void thread_ap_block_state26_pp0_stage3_iter3();
    void thread_ap_block_state27_pp0_stage4_iter3();
    void thread_ap_block_state28_pp0_stage0_iter4();
    void thread_ap_block_state29_pp0_stage1_iter4();
    void thread_ap_block_state30_pp0_stage2_iter4();
    void thread_ap_block_state31_pp0_stage3_iter4();
    void thread_ap_block_state32_pp0_stage4_iter4();
    void thread_ap_block_state8_pp0_stage0_iter0();
    void thread_ap_block_state9_io();
    void thread_ap_block_state9_pp0_stage1_iter0();
    void thread_ap_condition_641();
    void thread_ap_condition_pp0_exit_iter0_state8();
    void thread_ap_done();
    void thread_ap_enable_pp0();
    void thread_ap_idle();
    void thread_ap_idle_pp0();
    void thread_ap_phi_mux_c_phi_fu_182_p4();
    void thread_ap_phi_mux_indvar_flatten_phi_fu_148_p4();
    void thread_ap_phi_mux_n_phi_fu_159_p4();
    void thread_ap_phi_mux_tmp_s_phi_fu_170_p4();
    void thread_ap_ready();
    void thread_ap_sig_ioackin_m_axi_bias_ARREADY();
    void thread_ap_sig_ioackin_m_axi_weights_ARREADY();
    void thread_bias_blk_n_AR();
    void thread_bias_blk_n_R();
    void thread_c_3_fu_315_p2();
    void thread_c_mid2_fu_236_p3();
    void thread_exitcond_flatten_fu_212_p2();
    void thread_exitcond_fu_230_p2();
    void thread_grp_fu_189_ce();
    void thread_grp_fu_189_p0();
    void thread_grp_fu_189_p1();
    void thread_grp_fu_193_ce();
    void thread_ifzero_fu_320_p2();
    void thread_indvar_flatten_next_fu_218_p2();
    void thread_input_0_0_address0();
    void thread_input_0_0_ce0();
    void thread_m_axi_bias_ARADDR();
    void thread_m_axi_bias_ARBURST();
    void thread_m_axi_bias_ARCACHE();
    void thread_m_axi_bias_ARID();
    void thread_m_axi_bias_ARLEN();
    void thread_m_axi_bias_ARLOCK();
    void thread_m_axi_bias_ARPROT();
    void thread_m_axi_bias_ARQOS();
    void thread_m_axi_bias_ARREGION();
    void thread_m_axi_bias_ARSIZE();
    void thread_m_axi_bias_ARUSER();
    void thread_m_axi_bias_ARVALID();
    void thread_m_axi_bias_AWADDR();
    void thread_m_axi_bias_AWBURST();
    void thread_m_axi_bias_AWCACHE();
    void thread_m_axi_bias_AWID();
    void thread_m_axi_bias_AWLEN();
    void thread_m_axi_bias_AWLOCK();
    void thread_m_axi_bias_AWPROT();
    void thread_m_axi_bias_AWQOS();
    void thread_m_axi_bias_AWREGION();
    void thread_m_axi_bias_AWSIZE();
    void thread_m_axi_bias_AWUSER();
    void thread_m_axi_bias_AWVALID();
    void thread_m_axi_bias_BREADY();
    void thread_m_axi_bias_RREADY();
    void thread_m_axi_bias_WDATA();
    void thread_m_axi_bias_WID();
    void thread_m_axi_bias_WLAST();
    void thread_m_axi_bias_WSTRB();
    void thread_m_axi_bias_WUSER();
    void thread_m_axi_bias_WVALID();
    void thread_m_axi_weights_ARADDR();
    void thread_m_axi_weights_ARBURST();
    void thread_m_axi_weights_ARCACHE();
    void thread_m_axi_weights_ARID();
    void thread_m_axi_weights_ARLEN();
    void thread_m_axi_weights_ARLOCK();
    void thread_m_axi_weights_ARPROT();
    void thread_m_axi_weights_ARQOS();
    void thread_m_axi_weights_ARREGION();
    void thread_m_axi_weights_ARSIZE();
    void thread_m_axi_weights_ARUSER();
    void thread_m_axi_weights_ARVALID();
    void thread_m_axi_weights_AWADDR();
    void thread_m_axi_weights_AWBURST();
    void thread_m_axi_weights_AWCACHE();
    void thread_m_axi_weights_AWID();
    void thread_m_axi_weights_AWLEN();
    void thread_m_axi_weights_AWLOCK();
    void thread_m_axi_weights_AWPROT();
    void thread_m_axi_weights_AWQOS();
    void thread_m_axi_weights_AWREGION();
    void thread_m_axi_weights_AWSIZE();
    void thread_m_axi_weights_AWUSER();
    void thread_m_axi_weights_AWVALID();
    void thread_m_axi_weights_BREADY();
    void thread_m_axi_weights_RREADY();
    void thread_m_axi_weights_WDATA();
    void thread_m_axi_weights_WID();
    void thread_m_axi_weights_WLAST();
    void thread_m_axi_weights_WSTRB();
    void thread_m_axi_weights_WUSER();
    void thread_m_axi_weights_WVALID();
    void thread_n_1_fu_224_p2();
    void thread_output_r_address0();
    void thread_output_r_ce0();
    void thread_output_r_d0();
    void thread_output_r_we0();
    void thread_p_shl6_cast_fu_272_p1();
    void thread_p_shl_cast_fu_260_p1();
    void thread_sext2_fu_197_p1();
    void thread_sum_cast_fu_305_p1();
    void thread_sum_fu_300_p2();
    void thread_tmp_61_fu_264_p3();
    void thread_tmp_62_fu_276_p2();
    void thread_tmp_63_fu_290_p2();
    void thread_tmp_7_cast_fu_286_p1();
    void thread_tmp_7_fu_325_p1();
    void thread_tmp_87_cast_fu_282_p1();
    void thread_tmp_88_cast_fu_296_p1();
    void thread_tmp_fu_252_p3();
    void thread_tmp_mid2_26_fu_337_p1();
    void thread_tmp_mid2_fu_329_p3();
    void thread_tmp_mid2_v_fu_244_p3();
    void thread_weights_blk_n_AR();
    void thread_weights_blk_n_R();
    void thread_weights_offset_cast_fu_208_p1();
    void thread_ap_NS_fsm();
};

}

using namespace ap_rtl;

#endif
