// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2018.2
// Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#ifndef _store_weights_5_HH_
#define _store_weights_5_HH_

#include "systemc.h"
#include "AESL_pkg.h"


namespace ap_rtl {

struct store_weights_5 : public sc_module {
    // Port declarations 56
    sc_in_clk ap_clk;
    sc_in< sc_logic > ap_rst;
    sc_in< sc_logic > ap_start;
    sc_out< sc_logic > ap_done;
    sc_out< sc_logic > ap_idle;
    sc_out< sc_logic > ap_ready;
    sc_out< sc_logic > m_axi_weights_AWVALID;
    sc_in< sc_logic > m_axi_weights_AWREADY;
    sc_out< sc_lv<32> > m_axi_weights_AWADDR;
    sc_out< sc_lv<1> > m_axi_weights_AWID;
    sc_out< sc_lv<32> > m_axi_weights_AWLEN;
    sc_out< sc_lv<3> > m_axi_weights_AWSIZE;
    sc_out< sc_lv<2> > m_axi_weights_AWBURST;
    sc_out< sc_lv<2> > m_axi_weights_AWLOCK;
    sc_out< sc_lv<4> > m_axi_weights_AWCACHE;
    sc_out< sc_lv<3> > m_axi_weights_AWPROT;
    sc_out< sc_lv<4> > m_axi_weights_AWQOS;
    sc_out< sc_lv<4> > m_axi_weights_AWREGION;
    sc_out< sc_lv<1> > m_axi_weights_AWUSER;
    sc_out< sc_logic > m_axi_weights_WVALID;
    sc_in< sc_logic > m_axi_weights_WREADY;
    sc_out< sc_lv<32> > m_axi_weights_WDATA;
    sc_out< sc_lv<4> > m_axi_weights_WSTRB;
    sc_out< sc_logic > m_axi_weights_WLAST;
    sc_out< sc_lv<1> > m_axi_weights_WID;
    sc_out< sc_lv<1> > m_axi_weights_WUSER;
    sc_out< sc_logic > m_axi_weights_ARVALID;
    sc_in< sc_logic > m_axi_weights_ARREADY;
    sc_out< sc_lv<32> > m_axi_weights_ARADDR;
    sc_out< sc_lv<1> > m_axi_weights_ARID;
    sc_out< sc_lv<32> > m_axi_weights_ARLEN;
    sc_out< sc_lv<3> > m_axi_weights_ARSIZE;
    sc_out< sc_lv<2> > m_axi_weights_ARBURST;
    sc_out< sc_lv<2> > m_axi_weights_ARLOCK;
    sc_out< sc_lv<4> > m_axi_weights_ARCACHE;
    sc_out< sc_lv<3> > m_axi_weights_ARPROT;
    sc_out< sc_lv<4> > m_axi_weights_ARQOS;
    sc_out< sc_lv<4> > m_axi_weights_ARREGION;
    sc_out< sc_lv<1> > m_axi_weights_ARUSER;
    sc_in< sc_logic > m_axi_weights_RVALID;
    sc_out< sc_logic > m_axi_weights_RREADY;
    sc_in< sc_lv<32> > m_axi_weights_RDATA;
    sc_in< sc_logic > m_axi_weights_RLAST;
    sc_in< sc_lv<1> > m_axi_weights_RID;
    sc_in< sc_lv<1> > m_axi_weights_RUSER;
    sc_in< sc_lv<2> > m_axi_weights_RRESP;
    sc_in< sc_logic > m_axi_weights_BVALID;
    sc_out< sc_logic > m_axi_weights_BREADY;
    sc_in< sc_lv<2> > m_axi_weights_BRESP;
    sc_in< sc_lv<1> > m_axi_weights_BID;
    sc_in< sc_lv<1> > m_axi_weights_BUSER;
    sc_in< sc_lv<30> > weights_offset;
    sc_out< sc_lv<16> > weights_oc_address0;
    sc_out< sc_logic > weights_oc_ce0;
    sc_out< sc_logic > weights_oc_we0;
    sc_out< sc_lv<32> > weights_oc_d0;


    // Module declarations
    store_weights_5(sc_module_name name);
    SC_HAS_PROCESS(store_weights_5);

    ~store_weights_5();

    sc_trace_file* mVcdFile;

    sc_signal< sc_lv<3> > ap_CS_fsm;
    sc_signal< sc_logic > ap_CS_fsm_state1;
    sc_signal< sc_logic > weights_blk_n_AR;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter3;
    sc_signal< bool > ap_block_pp0_stage0;
    sc_signal< sc_lv<1> > exitcond_flatten2_reg_470;
    sc_signal< sc_lv<1> > exitcond_flatten2_reg_470_pp0_iter2_reg;
    sc_signal< sc_logic > weights_blk_n_R;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter10;
    sc_signal< sc_lv<1> > exitcond_flatten2_reg_470_pp0_iter9_reg;
    sc_signal< sc_lv<16> > indvar_flatten1_reg_119;
    sc_signal< sc_lv<7> > i_reg_130;
    sc_signal< sc_lv<10> > indvar_flatten2_reg_141;
    sc_signal< sc_lv<5> > l_reg_152;
    sc_signal< sc_lv<6> > indvar_flatten_reg_163;
    sc_signal< sc_lv<3> > j_reg_174;
    sc_signal< sc_lv<3> > k_reg_185;
    sc_signal< sc_lv<64> > sext_fu_196_p1;
    sc_signal< sc_lv<64> > sext_reg_465;
    sc_signal< sc_lv<1> > exitcond_flatten2_fu_200_p2;
    sc_signal< sc_logic > ap_CS_fsm_pp0_stage0;
    sc_signal< bool > ap_block_state2_pp0_stage0_iter0;
    sc_signal< bool > ap_block_state3_pp0_stage0_iter1;
    sc_signal< bool > ap_block_state4_pp0_stage0_iter2;
    sc_signal< bool > ap_block_state5_pp0_stage0_iter3;
    sc_signal< sc_logic > ap_sig_ioackin_m_axi_weights_ARREADY;
    sc_signal< bool > ap_block_state5_io;
    sc_signal< bool > ap_block_state6_pp0_stage0_iter4;
    sc_signal< bool > ap_block_state7_pp0_stage0_iter5;
    sc_signal< bool > ap_block_state8_pp0_stage0_iter6;
    sc_signal< bool > ap_block_state9_pp0_stage0_iter7;
    sc_signal< bool > ap_block_state10_pp0_stage0_iter8;
    sc_signal< bool > ap_block_state11_pp0_stage0_iter9;
    sc_signal< bool > ap_block_state12_pp0_stage0_iter10;
    sc_signal< bool > ap_block_state13_pp0_stage0_iter11;
    sc_signal< bool > ap_block_pp0_stage0_11001;
    sc_signal< sc_lv<1> > exitcond_flatten2_reg_470_pp0_iter1_reg;
    sc_signal< sc_lv<1> > exitcond_flatten2_reg_470_pp0_iter3_reg;
    sc_signal< sc_lv<1> > exitcond_flatten2_reg_470_pp0_iter4_reg;
    sc_signal< sc_lv<1> > exitcond_flatten2_reg_470_pp0_iter5_reg;
    sc_signal< sc_lv<1> > exitcond_flatten2_reg_470_pp0_iter6_reg;
    sc_signal< sc_lv<1> > exitcond_flatten2_reg_470_pp0_iter7_reg;
    sc_signal< sc_lv<1> > exitcond_flatten2_reg_470_pp0_iter8_reg;
    sc_signal< sc_lv<1> > exitcond_flatten2_reg_470_pp0_iter10_reg;
    sc_signal< sc_lv<16> > indvar_flatten_next2_fu_206_p2;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter0;
    sc_signal< sc_lv<7> > tmp_mid2_v_fu_232_p3;
    sc_signal< sc_lv<7> > tmp_mid2_v_reg_479;
    sc_signal< sc_lv<5> > tmp_2_mid2_fu_290_p3;
    sc_signal< sc_lv<5> > tmp_2_mid2_reg_485;
    sc_signal< sc_lv<3> > k_mid2_fu_334_p3;
    sc_signal< sc_lv<3> > k_mid2_reg_491;
    sc_signal< sc_lv<3> > k_mid2_reg_491_pp0_iter1_reg;
    sc_signal< sc_lv<3> > tmp_4_mid2_fu_342_p3;
    sc_signal< sc_lv<3> > tmp_4_mid2_reg_496;
    sc_signal< sc_lv<3> > k_1_fu_350_p2;
    sc_signal< sc_lv<6> > indvar_flatten_next_fu_362_p3;
    sc_signal< sc_lv<10> > indvar_flatten_next1_fu_376_p3;
    sc_signal< sc_lv<64> > tmp_4_fu_429_p2;
    sc_signal< sc_lv<64> > tmp_4_reg_517;
    sc_signal< sc_lv<64> > tmp_11_fu_448_p2;
    sc_signal< sc_lv<64> > tmp_11_reg_523;
    sc_signal< sc_lv<64> > tmp_11_reg_523_pp0_iter3_reg;
    sc_signal< sc_lv<64> > tmp_11_reg_523_pp0_iter4_reg;
    sc_signal< sc_lv<64> > tmp_11_reg_523_pp0_iter5_reg;
    sc_signal< sc_lv<64> > tmp_11_reg_523_pp0_iter6_reg;
    sc_signal< sc_lv<64> > tmp_11_reg_523_pp0_iter7_reg;
    sc_signal< sc_lv<64> > tmp_11_reg_523_pp0_iter8_reg;
    sc_signal< sc_lv<64> > tmp_11_reg_523_pp0_iter9_reg;
    sc_signal< sc_lv<64> > tmp_11_reg_523_pp0_iter10_reg;
    sc_signal< sc_lv<32> > weights_addr_reg_528;
    sc_signal< sc_lv<32> > weights_addr_read_reg_534;
    sc_signal< bool > ap_block_pp0_stage0_subdone;
    sc_signal< sc_logic > ap_condition_pp0_exit_iter0_state2;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter1;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter2;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter4;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter5;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter6;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter7;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter8;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter9;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter11;
    sc_signal< sc_lv<7> > ap_phi_mux_i_phi_fu_134_p4;
    sc_signal< sc_lv<5> > ap_phi_mux_l_phi_fu_156_p4;
    sc_signal< sc_lv<3> > ap_phi_mux_j_phi_fu_178_p4;
    sc_signal< sc_lv<64> > sum_fu_454_p2;
    sc_signal< sc_logic > ap_reg_ioackin_m_axi_weights_ARREADY;
    sc_signal< bool > ap_block_pp0_stage0_01001;
    sc_signal< sc_lv<1> > exitcond_flatten_fu_218_p2;
    sc_signal< sc_lv<7> > i_1_fu_212_p2;
    sc_signal< sc_lv<1> > exitcond_fu_246_p2;
    sc_signal< sc_lv<1> > not_exitcond_flatten_fu_240_p2;
    sc_signal< sc_lv<1> > exitcond_flatten1_fu_258_p2;
    sc_signal< sc_lv<5> > l_mid_fu_224_p3;
    sc_signal< sc_lv<1> > exitcond_flatten_mid_fu_264_p2;
    sc_signal< sc_lv<1> > tmp_5_fu_276_p2;
    sc_signal< sc_lv<5> > l_1_fu_270_p2;
    sc_signal< sc_lv<1> > exitcond_flatten_not_fu_298_p2;
    sc_signal< sc_lv<1> > exitcond_mid_fu_252_p2;
    sc_signal< sc_lv<1> > not_exitcond_flatten_1_fu_304_p2;
    sc_signal< sc_lv<3> > j_mid_fu_282_p3;
    sc_signal< sc_lv<1> > exitcond_mid1_fu_310_p2;
    sc_signal< sc_lv<1> > tmp_s_fu_322_p2;
    sc_signal< sc_lv<1> > tmp_3_fu_328_p2;
    sc_signal< sc_lv<3> > j_1_fu_316_p2;
    sc_signal< sc_lv<6> > indvar_flatten_op_fu_356_p2;
    sc_signal< sc_lv<10> > indvar_flatten13_op_fu_370_p2;
    sc_signal< sc_lv<11> > tmp_fu_384_p3;
    sc_signal< sc_lv<12> > tmp_3_cast_fu_391_p1;
    sc_signal< sc_lv<12> > tmp_2_mid2_cast_fu_395_p1;
    sc_signal< sc_lv<12> > tmp_7_fu_398_p2;
    sc_signal< sc_lv<14> > tmp_2_fu_408_p3;
    sc_signal< sc_lv<64> > tmp_7_cast_fu_404_p1;
    sc_signal< sc_lv<64> > p_shl1_fu_416_p1;
    sc_signal< sc_lv<64> > tmp_9_fu_420_p2;
    sc_signal< sc_lv<64> > tmp_4_mid2_cast_fu_426_p1;
    sc_signal< sc_lv<64> > tmp_8_fu_435_p2;
    sc_signal< sc_lv<64> > tmp_10_fu_440_p2;
    sc_signal< sc_lv<64> > tmp_6_fu_445_p1;
    sc_signal< sc_logic > ap_CS_fsm_state14;
    sc_signal< sc_lv<3> > ap_NS_fsm;
    sc_signal< sc_logic > ap_idle_pp0;
    sc_signal< sc_logic > ap_enable_pp0;
    static const sc_logic ap_const_logic_1;
    static const sc_logic ap_const_logic_0;
    static const sc_lv<3> ap_ST_fsm_state1;
    static const sc_lv<3> ap_ST_fsm_pp0_stage0;
    static const sc_lv<3> ap_ST_fsm_state14;
    static const bool ap_const_boolean_1;
    static const sc_lv<32> ap_const_lv32_0;
    static const sc_lv<1> ap_const_lv1_0;
    static const sc_lv<3> ap_const_lv3_0;
    static const sc_lv<2> ap_const_lv2_0;
    static const sc_lv<4> ap_const_lv4_0;
    static const bool ap_const_boolean_0;
    static const sc_lv<32> ap_const_lv32_1;
    static const sc_lv<1> ap_const_lv1_1;
    static const sc_lv<16> ap_const_lv16_0;
    static const sc_lv<7> ap_const_lv7_0;
    static const sc_lv<10> ap_const_lv10_0;
    static const sc_lv<5> ap_const_lv5_0;
    static const sc_lv<6> ap_const_lv6_0;
    static const sc_lv<16> ap_const_lv16_BB80;
    static const sc_lv<16> ap_const_lv16_1;
    static const sc_lv<7> ap_const_lv7_1;
    static const sc_lv<10> ap_const_lv10_190;
    static const sc_lv<3> ap_const_lv3_5;
    static const sc_lv<6> ap_const_lv6_19;
    static const sc_lv<5> ap_const_lv5_1;
    static const sc_lv<3> ap_const_lv3_1;
    static const sc_lv<6> ap_const_lv6_1;
    static const sc_lv<10> ap_const_lv10_1;
    static const sc_lv<64> ap_const_lv64_2;
    static const sc_lv<32> ap_const_lv32_2;
    // Thread declarations
    void thread_ap_clk_no_reset_();
    void thread_ap_CS_fsm_pp0_stage0();
    void thread_ap_CS_fsm_state1();
    void thread_ap_CS_fsm_state14();
    void thread_ap_block_pp0_stage0();
    void thread_ap_block_pp0_stage0_01001();
    void thread_ap_block_pp0_stage0_11001();
    void thread_ap_block_pp0_stage0_subdone();
    void thread_ap_block_state10_pp0_stage0_iter8();
    void thread_ap_block_state11_pp0_stage0_iter9();
    void thread_ap_block_state12_pp0_stage0_iter10();
    void thread_ap_block_state13_pp0_stage0_iter11();
    void thread_ap_block_state2_pp0_stage0_iter0();
    void thread_ap_block_state3_pp0_stage0_iter1();
    void thread_ap_block_state4_pp0_stage0_iter2();
    void thread_ap_block_state5_io();
    void thread_ap_block_state5_pp0_stage0_iter3();
    void thread_ap_block_state6_pp0_stage0_iter4();
    void thread_ap_block_state7_pp0_stage0_iter5();
    void thread_ap_block_state8_pp0_stage0_iter6();
    void thread_ap_block_state9_pp0_stage0_iter7();
    void thread_ap_condition_pp0_exit_iter0_state2();
    void thread_ap_done();
    void thread_ap_enable_pp0();
    void thread_ap_idle();
    void thread_ap_idle_pp0();
    void thread_ap_phi_mux_i_phi_fu_134_p4();
    void thread_ap_phi_mux_j_phi_fu_178_p4();
    void thread_ap_phi_mux_l_phi_fu_156_p4();
    void thread_ap_ready();
    void thread_ap_sig_ioackin_m_axi_weights_ARREADY();
    void thread_exitcond_flatten1_fu_258_p2();
    void thread_exitcond_flatten2_fu_200_p2();
    void thread_exitcond_flatten_fu_218_p2();
    void thread_exitcond_flatten_mid_fu_264_p2();
    void thread_exitcond_flatten_not_fu_298_p2();
    void thread_exitcond_fu_246_p2();
    void thread_exitcond_mid1_fu_310_p2();
    void thread_exitcond_mid_fu_252_p2();
    void thread_i_1_fu_212_p2();
    void thread_indvar_flatten13_op_fu_370_p2();
    void thread_indvar_flatten_next1_fu_376_p3();
    void thread_indvar_flatten_next2_fu_206_p2();
    void thread_indvar_flatten_next_fu_362_p3();
    void thread_indvar_flatten_op_fu_356_p2();
    void thread_j_1_fu_316_p2();
    void thread_j_mid_fu_282_p3();
    void thread_k_1_fu_350_p2();
    void thread_k_mid2_fu_334_p3();
    void thread_l_1_fu_270_p2();
    void thread_l_mid_fu_224_p3();
    void thread_m_axi_weights_ARADDR();
    void thread_m_axi_weights_ARBURST();
    void thread_m_axi_weights_ARCACHE();
    void thread_m_axi_weights_ARID();
    void thread_m_axi_weights_ARLEN();
    void thread_m_axi_weights_ARLOCK();
    void thread_m_axi_weights_ARPROT();
    void thread_m_axi_weights_ARQOS();
    void thread_m_axi_weights_ARREGION();
    void thread_m_axi_weights_ARSIZE();
    void thread_m_axi_weights_ARUSER();
    void thread_m_axi_weights_ARVALID();
    void thread_m_axi_weights_AWADDR();
    void thread_m_axi_weights_AWBURST();
    void thread_m_axi_weights_AWCACHE();
    void thread_m_axi_weights_AWID();
    void thread_m_axi_weights_AWLEN();
    void thread_m_axi_weights_AWLOCK();
    void thread_m_axi_weights_AWPROT();
    void thread_m_axi_weights_AWQOS();
    void thread_m_axi_weights_AWREGION();
    void thread_m_axi_weights_AWSIZE();
    void thread_m_axi_weights_AWUSER();
    void thread_m_axi_weights_AWVALID();
    void thread_m_axi_weights_BREADY();
    void thread_m_axi_weights_RREADY();
    void thread_m_axi_weights_WDATA();
    void thread_m_axi_weights_WID();
    void thread_m_axi_weights_WLAST();
    void thread_m_axi_weights_WSTRB();
    void thread_m_axi_weights_WUSER();
    void thread_m_axi_weights_WVALID();
    void thread_not_exitcond_flatten_1_fu_304_p2();
    void thread_not_exitcond_flatten_fu_240_p2();
    void thread_p_shl1_fu_416_p1();
    void thread_sext_fu_196_p1();
    void thread_sum_fu_454_p2();
    void thread_tmp_10_fu_440_p2();
    void thread_tmp_11_fu_448_p2();
    void thread_tmp_2_fu_408_p3();
    void thread_tmp_2_mid2_cast_fu_395_p1();
    void thread_tmp_2_mid2_fu_290_p3();
    void thread_tmp_3_cast_fu_391_p1();
    void thread_tmp_3_fu_328_p2();
    void thread_tmp_4_fu_429_p2();
    void thread_tmp_4_mid2_cast_fu_426_p1();
    void thread_tmp_4_mid2_fu_342_p3();
    void thread_tmp_5_fu_276_p2();
    void thread_tmp_6_fu_445_p1();
    void thread_tmp_7_cast_fu_404_p1();
    void thread_tmp_7_fu_398_p2();
    void thread_tmp_8_fu_435_p2();
    void thread_tmp_9_fu_420_p2();
    void thread_tmp_fu_384_p3();
    void thread_tmp_mid2_v_fu_232_p3();
    void thread_tmp_s_fu_322_p2();
    void thread_weights_blk_n_AR();
    void thread_weights_blk_n_R();
    void thread_weights_oc_address0();
    void thread_weights_oc_ce0();
    void thread_weights_oc_d0();
    void thread_weights_oc_we0();
    void thread_ap_NS_fsm();
};

}

using namespace ap_rtl;

#endif
