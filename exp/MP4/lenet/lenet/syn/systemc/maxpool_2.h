// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2018.2
// Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#ifndef _maxpool_2_HH_
#define _maxpool_2_HH_

#include "systemc.h"
#include "AESL_pkg.h"

#include "conv1_fcmp_32ns_3dEe.h"

namespace ap_rtl {

struct maxpool_2 : public sc_module {
    // Port declarations 13
    sc_in_clk ap_clk;
    sc_in< sc_logic > ap_rst;
    sc_in< sc_logic > ap_start;
    sc_out< sc_logic > ap_done;
    sc_out< sc_logic > ap_idle;
    sc_out< sc_logic > ap_ready;
    sc_out< sc_lv<13> > input_r_address0;
    sc_out< sc_logic > input_r_ce0;
    sc_in< sc_lv<32> > input_r_q0;
    sc_out< sc_lv<11> > output_r_address0;
    sc_out< sc_logic > output_r_ce0;
    sc_out< sc_logic > output_r_we0;
    sc_out< sc_lv<32> > output_r_d0;
    sc_signal< sc_lv<5> > ap_var_for_const0;


    // Module declarations
    maxpool_2(sc_module_name name);
    SC_HAS_PROCESS(maxpool_2);

    ~maxpool_2();

    sc_trace_file* mVcdFile;

    conv1_fcmp_32ns_3dEe<1,1,32,32,1>* conv1_fcmp_32ns_3dEe_U34;
    sc_signal< sc_lv<8> > ap_CS_fsm;
    sc_signal< sc_logic > ap_CS_fsm_state1;
    sc_signal< sc_lv<3> > c_2_fu_184_p2;
    sc_signal< sc_lv<3> > c_2_reg_539;
    sc_signal< sc_logic > ap_CS_fsm_state2;
    sc_signal< sc_lv<10> > tmp_72_cast_fu_220_p1;
    sc_signal< sc_lv<10> > tmp_72_cast_reg_544;
    sc_signal< sc_lv<1> > exitcond4_fu_178_p2;
    sc_signal< sc_lv<9> > tmp_75_cast_fu_254_p1;
    sc_signal< sc_lv<9> > tmp_75_cast_reg_549;
    sc_signal< sc_lv<4> > h_2_fu_264_p2;
    sc_signal< sc_lv<4> > h_2_reg_557;
    sc_signal< sc_logic > ap_CS_fsm_state3;
    sc_signal< sc_lv<5> > tmp_s_fu_270_p3;
    sc_signal< sc_lv<5> > tmp_s_reg_562;
    sc_signal< sc_lv<1> > exitcond3_fu_258_p2;
    sc_signal< sc_lv<12> > tmp_56_fu_311_p2;
    sc_signal< sc_lv<12> > tmp_56_reg_567;
    sc_signal< sc_lv<4> > w_2_fu_323_p2;
    sc_signal< sc_lv<4> > w_2_reg_575;
    sc_signal< sc_logic > ap_CS_fsm_state4;
    sc_signal< sc_lv<5> > tmp_8_fu_329_p3;
    sc_signal< sc_lv<5> > tmp_8_reg_580;
    sc_signal< sc_lv<1> > exitcond2_fu_317_p2;
    sc_signal< sc_lv<2> > i_12_fu_347_p2;
    sc_signal< sc_lv<2> > i_12_reg_588;
    sc_signal< sc_logic > ap_CS_fsm_state5;
    sc_signal< sc_lv<14> > tmp_59_fu_391_p2;
    sc_signal< sc_lv<14> > tmp_59_reg_593;
    sc_signal< sc_lv<1> > exitcond1_fu_341_p2;
    sc_signal< sc_lv<2> > j_8_fu_421_p2;
    sc_signal< sc_lv<2> > j_8_reg_601;
    sc_signal< sc_logic > ap_CS_fsm_state6;
    sc_signal< sc_lv<1> > exitcond_fu_415_p2;
    sc_signal< sc_lv<32> > input_load_reg_611;
    sc_signal< sc_logic > ap_CS_fsm_state7;
    sc_signal< sc_lv<32> > max_value_3_fu_529_p3;
    sc_signal< sc_logic > ap_CS_fsm_state8;
    sc_signal< sc_lv<3> > c_reg_92;
    sc_signal< sc_lv<4> > h_reg_103;
    sc_signal< sc_lv<4> > w_reg_114;
    sc_signal< sc_lv<32> > max_value_reg_126;
    sc_signal< sc_lv<2> > i_reg_139;
    sc_signal< sc_lv<32> > max_value_1_reg_150;
    sc_signal< sc_lv<2> > j_reg_162;
    sc_signal< sc_lv<64> > tmp_80_cast_fu_406_p1;
    sc_signal< sc_lv<64> > tmp_85_cast_fu_441_p1;
    sc_signal< sc_lv<8> > tmp_fu_190_p3;
    sc_signal< sc_lv<5> > tmp_50_fu_202_p3;
    sc_signal< sc_lv<9> > p_shl2_cast_fu_198_p1;
    sc_signal< sc_lv<9> > p_shl3_cast_fu_210_p1;
    sc_signal< sc_lv<9> > tmp_51_fu_214_p2;
    sc_signal< sc_lv<7> > tmp_52_fu_224_p3;
    sc_signal< sc_lv<4> > tmp_53_fu_236_p3;
    sc_signal< sc_lv<8> > p_shl_cast_fu_232_p1;
    sc_signal< sc_lv<8> > p_shl1_cast_fu_244_p1;
    sc_signal< sc_lv<8> > tmp_54_fu_248_p2;
    sc_signal< sc_lv<9> > tmp_7_cast_fu_278_p1;
    sc_signal< sc_lv<9> > tmp_55_fu_282_p2;
    sc_signal< sc_lv<8> > tmp_24_fu_287_p1;
    sc_signal< sc_lv<10> > tmp_30_fu_299_p3;
    sc_signal< sc_lv<12> > p_shl4_cast_fu_291_p3;
    sc_signal< sc_lv<12> > p_shl5_cast_fu_307_p1;
    sc_signal< sc_lv<5> > i_cast2_fu_337_p1;
    sc_signal< sc_lv<5> > tmp_1_fu_353_p2;
    sc_signal< sc_lv<10> > tmp_2_cast_fu_358_p1;
    sc_signal< sc_lv<10> > tmp_58_fu_362_p2;
    sc_signal< sc_lv<9> > tmp_31_fu_367_p1;
    sc_signal< sc_lv<12> > tmp_32_fu_379_p3;
    sc_signal< sc_lv<14> > p_shl6_cast_fu_371_p3;
    sc_signal< sc_lv<14> > p_shl7_cast_fu_387_p1;
    sc_signal< sc_lv<12> > tmp_9_cast_fu_397_p1;
    sc_signal< sc_lv<12> > tmp_57_fu_401_p2;
    sc_signal< sc_lv<5> > j_cast1_fu_411_p1;
    sc_signal< sc_lv<5> > tmp_3_fu_427_p2;
    sc_signal< sc_lv<14> > tmp_4_cast_fu_432_p1;
    sc_signal< sc_lv<14> > tmp_60_fu_436_p2;
    sc_signal< sc_lv<32> > max_value_1_to_int_fu_446_p1;
    sc_signal< sc_lv<32> > input_load_to_int_fu_464_p1;
    sc_signal< sc_lv<8> > tmp_21_fu_450_p4;
    sc_signal< sc_lv<23> > tmp_33_fu_460_p1;
    sc_signal< sc_lv<1> > notrhs_fu_487_p2;
    sc_signal< sc_lv<1> > notlhs_fu_481_p2;
    sc_signal< sc_lv<8> > tmp_23_fu_467_p4;
    sc_signal< sc_lv<23> > tmp_34_fu_477_p1;
    sc_signal< sc_lv<1> > notrhs7_fu_505_p2;
    sc_signal< sc_lv<1> > notlhs6_fu_499_p2;
    sc_signal< sc_lv<1> > tmp_25_fu_493_p2;
    sc_signal< sc_lv<1> > tmp_26_fu_511_p2;
    sc_signal< sc_lv<1> > tmp_27_fu_517_p2;
    sc_signal< sc_lv<1> > tmp_28_fu_173_p2;
    sc_signal< sc_lv<1> > tmp_29_fu_523_p2;
    sc_signal< sc_lv<8> > ap_NS_fsm;
    static const sc_logic ap_const_logic_1;
    static const sc_logic ap_const_logic_0;
    static const sc_lv<8> ap_ST_fsm_state1;
    static const sc_lv<8> ap_ST_fsm_state2;
    static const sc_lv<8> ap_ST_fsm_state3;
    static const sc_lv<8> ap_ST_fsm_state4;
    static const sc_lv<8> ap_ST_fsm_state5;
    static const sc_lv<8> ap_ST_fsm_state6;
    static const sc_lv<8> ap_ST_fsm_state7;
    static const sc_lv<8> ap_ST_fsm_state8;
    static const sc_lv<32> ap_const_lv32_0;
    static const sc_lv<32> ap_const_lv32_1;
    static const sc_lv<1> ap_const_lv1_0;
    static const sc_lv<32> ap_const_lv32_2;
    static const sc_lv<32> ap_const_lv32_3;
    static const sc_lv<32> ap_const_lv32_4;
    static const sc_lv<32> ap_const_lv32_5;
    static const sc_lv<32> ap_const_lv32_6;
    static const sc_lv<32> ap_const_lv32_7;
    static const sc_lv<3> ap_const_lv3_0;
    static const sc_lv<1> ap_const_lv1_1;
    static const sc_lv<4> ap_const_lv4_0;
    static const sc_lv<32> ap_const_lv32_D368D4A5;
    static const sc_lv<2> ap_const_lv2_0;
    static const sc_lv<3> ap_const_lv3_6;
    static const sc_lv<3> ap_const_lv3_1;
    static const sc_lv<5> ap_const_lv5_0;
    static const sc_lv<4> ap_const_lv4_E;
    static const sc_lv<4> ap_const_lv4_1;
    static const sc_lv<2> ap_const_lv2_2;
    static const sc_lv<2> ap_const_lv2_1;
    static const sc_lv<32> ap_const_lv32_17;
    static const sc_lv<32> ap_const_lv32_1E;
    static const sc_lv<8> ap_const_lv8_FF;
    static const sc_lv<23> ap_const_lv23_0;
    static const sc_lv<5> ap_const_lv5_2;
    static const bool ap_const_boolean_1;
    // Thread declarations
    void thread_ap_var_for_const0();
    void thread_ap_clk_no_reset_();
    void thread_ap_CS_fsm_state1();
    void thread_ap_CS_fsm_state2();
    void thread_ap_CS_fsm_state3();
    void thread_ap_CS_fsm_state4();
    void thread_ap_CS_fsm_state5();
    void thread_ap_CS_fsm_state6();
    void thread_ap_CS_fsm_state7();
    void thread_ap_CS_fsm_state8();
    void thread_ap_done();
    void thread_ap_idle();
    void thread_ap_ready();
    void thread_c_2_fu_184_p2();
    void thread_exitcond1_fu_341_p2();
    void thread_exitcond2_fu_317_p2();
    void thread_exitcond3_fu_258_p2();
    void thread_exitcond4_fu_178_p2();
    void thread_exitcond_fu_415_p2();
    void thread_h_2_fu_264_p2();
    void thread_i_12_fu_347_p2();
    void thread_i_cast2_fu_337_p1();
    void thread_input_load_to_int_fu_464_p1();
    void thread_input_r_address0();
    void thread_input_r_ce0();
    void thread_j_8_fu_421_p2();
    void thread_j_cast1_fu_411_p1();
    void thread_max_value_1_to_int_fu_446_p1();
    void thread_max_value_3_fu_529_p3();
    void thread_notlhs6_fu_499_p2();
    void thread_notlhs_fu_481_p2();
    void thread_notrhs7_fu_505_p2();
    void thread_notrhs_fu_487_p2();
    void thread_output_r_address0();
    void thread_output_r_ce0();
    void thread_output_r_d0();
    void thread_output_r_we0();
    void thread_p_shl1_cast_fu_244_p1();
    void thread_p_shl2_cast_fu_198_p1();
    void thread_p_shl3_cast_fu_210_p1();
    void thread_p_shl4_cast_fu_291_p3();
    void thread_p_shl5_cast_fu_307_p1();
    void thread_p_shl6_cast_fu_371_p3();
    void thread_p_shl7_cast_fu_387_p1();
    void thread_p_shl_cast_fu_232_p1();
    void thread_tmp_1_fu_353_p2();
    void thread_tmp_21_fu_450_p4();
    void thread_tmp_23_fu_467_p4();
    void thread_tmp_24_fu_287_p1();
    void thread_tmp_25_fu_493_p2();
    void thread_tmp_26_fu_511_p2();
    void thread_tmp_27_fu_517_p2();
    void thread_tmp_29_fu_523_p2();
    void thread_tmp_2_cast_fu_358_p1();
    void thread_tmp_30_fu_299_p3();
    void thread_tmp_31_fu_367_p1();
    void thread_tmp_32_fu_379_p3();
    void thread_tmp_33_fu_460_p1();
    void thread_tmp_34_fu_477_p1();
    void thread_tmp_3_fu_427_p2();
    void thread_tmp_4_cast_fu_432_p1();
    void thread_tmp_50_fu_202_p3();
    void thread_tmp_51_fu_214_p2();
    void thread_tmp_52_fu_224_p3();
    void thread_tmp_53_fu_236_p3();
    void thread_tmp_54_fu_248_p2();
    void thread_tmp_55_fu_282_p2();
    void thread_tmp_56_fu_311_p2();
    void thread_tmp_57_fu_401_p2();
    void thread_tmp_58_fu_362_p2();
    void thread_tmp_59_fu_391_p2();
    void thread_tmp_60_fu_436_p2();
    void thread_tmp_72_cast_fu_220_p1();
    void thread_tmp_75_cast_fu_254_p1();
    void thread_tmp_7_cast_fu_278_p1();
    void thread_tmp_80_cast_fu_406_p1();
    void thread_tmp_85_cast_fu_441_p1();
    void thread_tmp_8_fu_329_p3();
    void thread_tmp_9_cast_fu_397_p1();
    void thread_tmp_fu_190_p3();
    void thread_tmp_s_fu_270_p3();
    void thread_w_2_fu_323_p2();
    void thread_ap_NS_fsm();
};

}

using namespace ap_rtl;

#endif
