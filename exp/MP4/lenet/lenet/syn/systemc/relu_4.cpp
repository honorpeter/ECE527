// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2018.2
// Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#include "relu_4.h"
#include "AESL_pkg.h"

using namespace std;

namespace ap_rtl {

const sc_logic relu_4::ap_const_logic_1 = sc_dt::Log_1;
const sc_logic relu_4::ap_const_logic_0 = sc_dt::Log_0;
const sc_lv<6> relu_4::ap_ST_fsm_state1 = "1";
const sc_lv<6> relu_4::ap_ST_fsm_state2 = "10";
const sc_lv<6> relu_4::ap_ST_fsm_state3 = "100";
const sc_lv<6> relu_4::ap_ST_fsm_state4 = "1000";
const sc_lv<6> relu_4::ap_ST_fsm_state5 = "10000";
const sc_lv<6> relu_4::ap_ST_fsm_state6 = "100000";
const sc_lv<32> relu_4::ap_const_lv32_0 = "00000000000000000000000000000000";
const sc_lv<32> relu_4::ap_const_lv32_1 = "1";
const sc_lv<1> relu_4::ap_const_lv1_0 = "0";
const sc_lv<32> relu_4::ap_const_lv32_2 = "10";
const sc_lv<32> relu_4::ap_const_lv32_3 = "11";
const sc_lv<32> relu_4::ap_const_lv32_4 = "100";
const sc_lv<5> relu_4::ap_const_lv5_0 = "00000";
const sc_lv<1> relu_4::ap_const_lv1_1 = "1";
const sc_lv<3> relu_4::ap_const_lv3_0 = "000";
const sc_lv<32> relu_4::ap_const_lv32_5 = "101";
const sc_lv<5> relu_4::ap_const_lv5_10 = "10000";
const sc_lv<5> relu_4::ap_const_lv5_1 = "1";
const sc_lv<2> relu_4::ap_const_lv2_0 = "00";
const sc_lv<3> relu_4::ap_const_lv3_5 = "101";
const sc_lv<3> relu_4::ap_const_lv3_1 = "1";
const sc_lv<32> relu_4::ap_const_lv32_17 = "10111";
const sc_lv<32> relu_4::ap_const_lv32_1E = "11110";
const sc_lv<8> relu_4::ap_const_lv8_FF = "11111111";
const sc_lv<23> relu_4::ap_const_lv23_0 = "00000000000000000000000";
const sc_lv<5> relu_4::ap_const_lv5_4 = "100";
const bool relu_4::ap_const_boolean_1 = true;

relu_4::relu_4(sc_module_name name) : sc_module(name), mVcdFile(0) {
    conv1_fcmp_32ns_3dEe_U57 = new conv1_fcmp_32ns_3dEe<1,1,32,32,1>("conv1_fcmp_32ns_3dEe_U57");
    conv1_fcmp_32ns_3dEe_U57->din0(output_load_reg_271);
    conv1_fcmp_32ns_3dEe_U57->din1(ap_var_for_const0);
    conv1_fcmp_32ns_3dEe_U57->opcode(ap_var_for_const1);
    conv1_fcmp_32ns_3dEe_U57->dout(tmp_3_fu_87_p2);

    SC_METHOD(thread_ap_clk_no_reset_);
    dont_initialize();
    sensitive << ( ap_clk.pos() );

    SC_METHOD(thread_ap_CS_fsm_state1);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state2);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state3);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state4);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state5);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state6);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_done);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( exitcond2_fu_92_p2 );

    SC_METHOD(thread_ap_idle);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );

    SC_METHOD(thread_ap_ready);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( exitcond2_fu_92_p2 );

    SC_METHOD(thread_exitcond1_fu_126_p2);
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( j_reg_65 );

    SC_METHOD(thread_exitcond2_fu_92_p2);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( i_reg_54 );

    SC_METHOD(thread_exitcond_fu_165_p2);
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( k_reg_76 );

    SC_METHOD(thread_i_9_fu_98_p2);
    sensitive << ( i_reg_54 );

    SC_METHOD(thread_j_5_fu_132_p2);
    sensitive << ( j_reg_65 );

    SC_METHOD(thread_k_4_fu_171_p2);
    sensitive << ( k_reg_76 );

    SC_METHOD(thread_notlhs_fu_208_p2);
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( tmp_9_fu_194_p4 );

    SC_METHOD(thread_notrhs_fu_214_p2);
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( tmp_fu_204_p1 );

    SC_METHOD(thread_output_load_to_int_fu_191_p1);
    sensitive << ( output_load_reg_271 );

    SC_METHOD(thread_output_r_address0);
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( output_addr_reg_266 );
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( tmp_49_cast_fu_186_p1 );

    SC_METHOD(thread_output_r_ce0);
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( ap_CS_fsm_state6 );

    SC_METHOD(thread_output_r_d0);
    sensitive << ( ap_CS_fsm_state6 );

    SC_METHOD(thread_output_r_we0);
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( tmp_5_fu_226_p2 );

    SC_METHOD(thread_p_shl1_cast_fu_151_p3);
    sensitive << ( tmp_32_fu_142_p2 );

    SC_METHOD(thread_p_shl_cast_fu_116_p1);
    sensitive << ( tmp_s_fu_108_p3 );

    SC_METHOD(thread_tmp_2_fu_220_p2);
    sensitive << ( notrhs_fu_214_p2 );
    sensitive << ( notlhs_fu_208_p2 );

    SC_METHOD(thread_tmp_31_fu_120_p2);
    sensitive << ( tmp_cast_fu_104_p1 );
    sensitive << ( p_shl_cast_fu_116_p1 );

    SC_METHOD(thread_tmp_32_fu_142_p2);
    sensitive << ( tmp_31_reg_240 );
    sensitive << ( tmp_cast_14_fu_138_p1 );

    SC_METHOD(thread_tmp_33_fu_159_p2);
    sensitive << ( tmp_46_cast4_fu_147_p1 );
    sensitive << ( p_shl1_cast_fu_151_p3 );

    SC_METHOD(thread_tmp_34_fu_181_p2);
    sensitive << ( tmp_33_reg_253 );
    sensitive << ( tmp_4_cast_fu_177_p1 );

    SC_METHOD(thread_tmp_46_cast4_fu_147_p1);
    sensitive << ( tmp_32_fu_142_p2 );

    SC_METHOD(thread_tmp_49_cast_fu_186_p1);
    sensitive << ( tmp_34_fu_181_p2 );

    SC_METHOD(thread_tmp_4_cast_fu_177_p1);
    sensitive << ( k_reg_76 );

    SC_METHOD(thread_tmp_5_fu_226_p2);
    sensitive << ( tmp_2_fu_220_p2 );
    sensitive << ( tmp_3_fu_87_p2 );

    SC_METHOD(thread_tmp_9_fu_194_p4);
    sensitive << ( output_load_to_int_fu_191_p1 );

    SC_METHOD(thread_tmp_cast_14_fu_138_p1);
    sensitive << ( j_reg_65 );

    SC_METHOD(thread_tmp_cast_fu_104_p1);
    sensitive << ( i_reg_54 );

    SC_METHOD(thread_tmp_fu_204_p1);
    sensitive << ( output_load_to_int_fu_191_p1 );

    SC_METHOD(thread_tmp_s_fu_108_p3);
    sensitive << ( i_reg_54 );

    SC_METHOD(thread_ap_NS_fsm);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( exitcond2_fu_92_p2 );
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( exitcond1_fu_126_p2 );
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( exitcond_fu_165_p2 );

    SC_THREAD(thread_ap_var_for_const0);

    SC_THREAD(thread_ap_var_for_const1);

    ap_CS_fsm = "000001";
    static int apTFileNum = 0;
    stringstream apTFilenSS;
    apTFilenSS << "relu_4_sc_trace_" << apTFileNum ++;
    string apTFn = apTFilenSS.str();
    mVcdFile = sc_create_vcd_trace_file(apTFn.c_str());
    mVcdFile->set_time_unit(1, SC_PS);
    if (1) {
#ifdef __HLS_TRACE_LEVEL_PORT_HIER__
    sc_trace(mVcdFile, ap_clk, "(port)ap_clk");
    sc_trace(mVcdFile, ap_rst, "(port)ap_rst");
    sc_trace(mVcdFile, ap_start, "(port)ap_start");
    sc_trace(mVcdFile, ap_done, "(port)ap_done");
    sc_trace(mVcdFile, ap_idle, "(port)ap_idle");
    sc_trace(mVcdFile, ap_ready, "(port)ap_ready");
    sc_trace(mVcdFile, output_r_address0, "(port)output_r_address0");
    sc_trace(mVcdFile, output_r_ce0, "(port)output_r_ce0");
    sc_trace(mVcdFile, output_r_we0, "(port)output_r_we0");
    sc_trace(mVcdFile, output_r_d0, "(port)output_r_d0");
    sc_trace(mVcdFile, output_r_q0, "(port)output_r_q0");
#endif
#ifdef __HLS_TRACE_LEVEL_INT__
    sc_trace(mVcdFile, ap_CS_fsm, "ap_CS_fsm");
    sc_trace(mVcdFile, ap_CS_fsm_state1, "ap_CS_fsm_state1");
    sc_trace(mVcdFile, i_9_fu_98_p2, "i_9_fu_98_p2");
    sc_trace(mVcdFile, i_9_reg_235, "i_9_reg_235");
    sc_trace(mVcdFile, ap_CS_fsm_state2, "ap_CS_fsm_state2");
    sc_trace(mVcdFile, tmp_31_fu_120_p2, "tmp_31_fu_120_p2");
    sc_trace(mVcdFile, tmp_31_reg_240, "tmp_31_reg_240");
    sc_trace(mVcdFile, exitcond2_fu_92_p2, "exitcond2_fu_92_p2");
    sc_trace(mVcdFile, j_5_fu_132_p2, "j_5_fu_132_p2");
    sc_trace(mVcdFile, j_5_reg_248, "j_5_reg_248");
    sc_trace(mVcdFile, ap_CS_fsm_state3, "ap_CS_fsm_state3");
    sc_trace(mVcdFile, tmp_33_fu_159_p2, "tmp_33_fu_159_p2");
    sc_trace(mVcdFile, tmp_33_reg_253, "tmp_33_reg_253");
    sc_trace(mVcdFile, exitcond1_fu_126_p2, "exitcond1_fu_126_p2");
    sc_trace(mVcdFile, k_4_fu_171_p2, "k_4_fu_171_p2");
    sc_trace(mVcdFile, k_4_reg_261, "k_4_reg_261");
    sc_trace(mVcdFile, ap_CS_fsm_state4, "ap_CS_fsm_state4");
    sc_trace(mVcdFile, output_addr_reg_266, "output_addr_reg_266");
    sc_trace(mVcdFile, exitcond_fu_165_p2, "exitcond_fu_165_p2");
    sc_trace(mVcdFile, output_load_reg_271, "output_load_reg_271");
    sc_trace(mVcdFile, ap_CS_fsm_state5, "ap_CS_fsm_state5");
    sc_trace(mVcdFile, i_reg_54, "i_reg_54");
    sc_trace(mVcdFile, j_reg_65, "j_reg_65");
    sc_trace(mVcdFile, k_reg_76, "k_reg_76");
    sc_trace(mVcdFile, ap_CS_fsm_state6, "ap_CS_fsm_state6");
    sc_trace(mVcdFile, tmp_49_cast_fu_186_p1, "tmp_49_cast_fu_186_p1");
    sc_trace(mVcdFile, tmp_5_fu_226_p2, "tmp_5_fu_226_p2");
    sc_trace(mVcdFile, tmp_s_fu_108_p3, "tmp_s_fu_108_p3");
    sc_trace(mVcdFile, tmp_cast_fu_104_p1, "tmp_cast_fu_104_p1");
    sc_trace(mVcdFile, p_shl_cast_fu_116_p1, "p_shl_cast_fu_116_p1");
    sc_trace(mVcdFile, tmp_cast_14_fu_138_p1, "tmp_cast_14_fu_138_p1");
    sc_trace(mVcdFile, tmp_32_fu_142_p2, "tmp_32_fu_142_p2");
    sc_trace(mVcdFile, tmp_46_cast4_fu_147_p1, "tmp_46_cast4_fu_147_p1");
    sc_trace(mVcdFile, p_shl1_cast_fu_151_p3, "p_shl1_cast_fu_151_p3");
    sc_trace(mVcdFile, tmp_4_cast_fu_177_p1, "tmp_4_cast_fu_177_p1");
    sc_trace(mVcdFile, tmp_34_fu_181_p2, "tmp_34_fu_181_p2");
    sc_trace(mVcdFile, output_load_to_int_fu_191_p1, "output_load_to_int_fu_191_p1");
    sc_trace(mVcdFile, tmp_9_fu_194_p4, "tmp_9_fu_194_p4");
    sc_trace(mVcdFile, tmp_fu_204_p1, "tmp_fu_204_p1");
    sc_trace(mVcdFile, notrhs_fu_214_p2, "notrhs_fu_214_p2");
    sc_trace(mVcdFile, notlhs_fu_208_p2, "notlhs_fu_208_p2");
    sc_trace(mVcdFile, tmp_2_fu_220_p2, "tmp_2_fu_220_p2");
    sc_trace(mVcdFile, tmp_3_fu_87_p2, "tmp_3_fu_87_p2");
    sc_trace(mVcdFile, ap_NS_fsm, "ap_NS_fsm");
#endif

    }
}

relu_4::~relu_4() {
    if (mVcdFile) 
        sc_close_vcd_trace_file(mVcdFile);

    delete conv1_fcmp_32ns_3dEe_U57;
}

void relu_4::thread_ap_var_for_const0() {
    ap_var_for_const0 = ap_const_lv32_0;
}

void relu_4::thread_ap_var_for_const1() {
    ap_var_for_const1 = ap_const_lv5_4;
}

void relu_4::thread_ap_clk_no_reset_() {
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_CS_fsm = ap_ST_fsm_state1;
    } else {
        ap_CS_fsm = ap_NS_fsm.read();
    }
    if ((esl_seteq<1,1,1>(exitcond1_fu_126_p2.read(), ap_const_lv1_1) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()))) {
        i_reg_54 = i_9_reg_235.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
                esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
        i_reg_54 = ap_const_lv5_0;
    }
    if ((esl_seteq<1,1,1>(exitcond_fu_165_p2.read(), ap_const_lv1_1) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()))) {
        j_reg_65 = j_5_reg_248.read();
    } else if ((esl_seteq<1,1,1>(exitcond2_fu_92_p2.read(), ap_const_lv1_0) && 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()))) {
        j_reg_65 = ap_const_lv3_0;
    }
    if ((esl_seteq<1,1,1>(exitcond1_fu_126_p2.read(), ap_const_lv1_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()))) {
        k_reg_76 = ap_const_lv3_0;
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read())) {
        k_reg_76 = k_4_reg_261.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read())) {
        i_9_reg_235 = i_9_fu_98_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read())) {
        j_5_reg_248 = j_5_fu_132_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read())) {
        k_4_reg_261 = k_4_fu_171_p2.read();
    }
    if ((esl_seteq<1,1,1>(exitcond_fu_165_p2.read(), ap_const_lv1_0) && esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()))) {
        output_addr_reg_266 =  (sc_lv<9>) (tmp_49_cast_fu_186_p1.read());
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read())) {
        output_load_reg_271 = output_r_q0.read();
    }
    if ((esl_seteq<1,1,1>(exitcond2_fu_92_p2.read(), ap_const_lv1_0) && esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()))) {
        tmp_31_reg_240 = tmp_31_fu_120_p2.read();
    }
    if ((esl_seteq<1,1,1>(exitcond1_fu_126_p2.read(), ap_const_lv1_0) && esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()))) {
        tmp_33_reg_253 = tmp_33_fu_159_p2.read();
    }
}

void relu_4::thread_ap_CS_fsm_state1() {
    ap_CS_fsm_state1 = ap_CS_fsm.read()[0];
}

void relu_4::thread_ap_CS_fsm_state2() {
    ap_CS_fsm_state2 = ap_CS_fsm.read()[1];
}

void relu_4::thread_ap_CS_fsm_state3() {
    ap_CS_fsm_state3 = ap_CS_fsm.read()[2];
}

void relu_4::thread_ap_CS_fsm_state4() {
    ap_CS_fsm_state4 = ap_CS_fsm.read()[3];
}

void relu_4::thread_ap_CS_fsm_state5() {
    ap_CS_fsm_state5 = ap_CS_fsm.read()[4];
}

void relu_4::thread_ap_CS_fsm_state6() {
    ap_CS_fsm_state6 = ap_CS_fsm.read()[5];
}

void relu_4::thread_ap_done() {
    if (((esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read())) || 
         (esl_seteq<1,1,1>(exitcond2_fu_92_p2.read(), ap_const_lv1_1) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read())))) {
        ap_done = ap_const_logic_1;
    } else {
        ap_done = ap_const_logic_0;
    }
}

void relu_4::thread_ap_idle() {
    if ((esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()))) {
        ap_idle = ap_const_logic_1;
    } else {
        ap_idle = ap_const_logic_0;
    }
}

void relu_4::thread_ap_ready() {
    if ((esl_seteq<1,1,1>(exitcond2_fu_92_p2.read(), ap_const_lv1_1) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()))) {
        ap_ready = ap_const_logic_1;
    } else {
        ap_ready = ap_const_logic_0;
    }
}

void relu_4::thread_exitcond1_fu_126_p2() {
    exitcond1_fu_126_p2 = (!j_reg_65.read().is_01() || !ap_const_lv3_5.is_01())? sc_lv<1>(): sc_lv<1>(j_reg_65.read() == ap_const_lv3_5);
}

void relu_4::thread_exitcond2_fu_92_p2() {
    exitcond2_fu_92_p2 = (!i_reg_54.read().is_01() || !ap_const_lv5_10.is_01())? sc_lv<1>(): sc_lv<1>(i_reg_54.read() == ap_const_lv5_10);
}

void relu_4::thread_exitcond_fu_165_p2() {
    exitcond_fu_165_p2 = (!k_reg_76.read().is_01() || !ap_const_lv3_5.is_01())? sc_lv<1>(): sc_lv<1>(k_reg_76.read() == ap_const_lv3_5);
}

void relu_4::thread_i_9_fu_98_p2() {
    i_9_fu_98_p2 = (!i_reg_54.read().is_01() || !ap_const_lv5_1.is_01())? sc_lv<5>(): (sc_biguint<5>(i_reg_54.read()) + sc_biguint<5>(ap_const_lv5_1));
}

void relu_4::thread_j_5_fu_132_p2() {
    j_5_fu_132_p2 = (!j_reg_65.read().is_01() || !ap_const_lv3_1.is_01())? sc_lv<3>(): (sc_biguint<3>(j_reg_65.read()) + sc_biguint<3>(ap_const_lv3_1));
}

void relu_4::thread_k_4_fu_171_p2() {
    k_4_fu_171_p2 = (!k_reg_76.read().is_01() || !ap_const_lv3_1.is_01())? sc_lv<3>(): (sc_biguint<3>(k_reg_76.read()) + sc_biguint<3>(ap_const_lv3_1));
}

void relu_4::thread_notlhs_fu_208_p2() {
    notlhs_fu_208_p2 = (!tmp_9_fu_194_p4.read().is_01() || !ap_const_lv8_FF.is_01())? sc_lv<1>(): sc_lv<1>(tmp_9_fu_194_p4.read() != ap_const_lv8_FF);
}

void relu_4::thread_notrhs_fu_214_p2() {
    notrhs_fu_214_p2 = (!tmp_fu_204_p1.read().is_01() || !ap_const_lv23_0.is_01())? sc_lv<1>(): sc_lv<1>(tmp_fu_204_p1.read() == ap_const_lv23_0);
}

void relu_4::thread_output_load_to_int_fu_191_p1() {
    output_load_to_int_fu_191_p1 = output_load_reg_271.read();
}

void relu_4::thread_output_r_address0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read())) {
        output_r_address0 = output_addr_reg_266.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read())) {
        output_r_address0 =  (sc_lv<9>) (tmp_49_cast_fu_186_p1.read());
    } else {
        output_r_address0 = "XXXXXXXXX";
    }
}

void relu_4::thread_output_r_ce0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read()))) {
        output_r_ce0 = ap_const_logic_1;
    } else {
        output_r_ce0 = ap_const_logic_0;
    }
}

void relu_4::thread_output_r_d0() {
    output_r_d0 = ap_const_lv32_0;
}

void relu_4::thread_output_r_we0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_1, tmp_5_fu_226_p2.read()))) {
        output_r_we0 = ap_const_logic_1;
    } else {
        output_r_we0 = ap_const_logic_0;
    }
}

void relu_4::thread_p_shl1_cast_fu_151_p3() {
    p_shl1_cast_fu_151_p3 = esl_concat<8,2>(tmp_32_fu_142_p2.read(), ap_const_lv2_0);
}

void relu_4::thread_p_shl_cast_fu_116_p1() {
    p_shl_cast_fu_116_p1 = esl_zext<8,7>(tmp_s_fu_108_p3.read());
}

void relu_4::thread_tmp_2_fu_220_p2() {
    tmp_2_fu_220_p2 = (notrhs_fu_214_p2.read() | notlhs_fu_208_p2.read());
}

void relu_4::thread_tmp_31_fu_120_p2() {
    tmp_31_fu_120_p2 = (!tmp_cast_fu_104_p1.read().is_01() || !p_shl_cast_fu_116_p1.read().is_01())? sc_lv<8>(): (sc_biguint<8>(tmp_cast_fu_104_p1.read()) + sc_biguint<8>(p_shl_cast_fu_116_p1.read()));
}

void relu_4::thread_tmp_32_fu_142_p2() {
    tmp_32_fu_142_p2 = (!tmp_31_reg_240.read().is_01() || !tmp_cast_14_fu_138_p1.read().is_01())? sc_lv<8>(): (sc_biguint<8>(tmp_31_reg_240.read()) + sc_biguint<8>(tmp_cast_14_fu_138_p1.read()));
}

void relu_4::thread_tmp_33_fu_159_p2() {
    tmp_33_fu_159_p2 = (!tmp_46_cast4_fu_147_p1.read().is_01() || !p_shl1_cast_fu_151_p3.read().is_01())? sc_lv<10>(): (sc_biguint<10>(tmp_46_cast4_fu_147_p1.read()) + sc_biguint<10>(p_shl1_cast_fu_151_p3.read()));
}

void relu_4::thread_tmp_34_fu_181_p2() {
    tmp_34_fu_181_p2 = (!tmp_33_reg_253.read().is_01() || !tmp_4_cast_fu_177_p1.read().is_01())? sc_lv<10>(): (sc_biguint<10>(tmp_33_reg_253.read()) + sc_biguint<10>(tmp_4_cast_fu_177_p1.read()));
}

void relu_4::thread_tmp_46_cast4_fu_147_p1() {
    tmp_46_cast4_fu_147_p1 = esl_zext<10,8>(tmp_32_fu_142_p2.read());
}

void relu_4::thread_tmp_49_cast_fu_186_p1() {
    tmp_49_cast_fu_186_p1 = esl_zext<64,10>(tmp_34_fu_181_p2.read());
}

void relu_4::thread_tmp_4_cast_fu_177_p1() {
    tmp_4_cast_fu_177_p1 = esl_zext<10,3>(k_reg_76.read());
}

void relu_4::thread_tmp_5_fu_226_p2() {
    tmp_5_fu_226_p2 = (tmp_2_fu_220_p2.read() & tmp_3_fu_87_p2.read());
}

void relu_4::thread_tmp_9_fu_194_p4() {
    tmp_9_fu_194_p4 = output_load_to_int_fu_191_p1.read().range(30, 23);
}

void relu_4::thread_tmp_cast_14_fu_138_p1() {
    tmp_cast_14_fu_138_p1 = esl_zext<8,3>(j_reg_65.read());
}

void relu_4::thread_tmp_cast_fu_104_p1() {
    tmp_cast_fu_104_p1 = esl_zext<8,5>(i_reg_54.read());
}

void relu_4::thread_tmp_fu_204_p1() {
    tmp_fu_204_p1 = output_load_to_int_fu_191_p1.read().range(23-1, 0);
}

void relu_4::thread_tmp_s_fu_108_p3() {
    tmp_s_fu_108_p3 = esl_concat<5,2>(i_reg_54.read(), ap_const_lv2_0);
}

void relu_4::thread_ap_NS_fsm() {
    switch (ap_CS_fsm.read().to_uint64()) {
        case 1 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
                ap_NS_fsm = ap_ST_fsm_state2;
            } else {
                ap_NS_fsm = ap_ST_fsm_state1;
            }
            break;
        case 2 : 
            if ((esl_seteq<1,1,1>(exitcond2_fu_92_p2.read(), ap_const_lv1_1) && esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()))) {
                ap_NS_fsm = ap_ST_fsm_state1;
            } else {
                ap_NS_fsm = ap_ST_fsm_state3;
            }
            break;
        case 4 : 
            if ((esl_seteq<1,1,1>(exitcond1_fu_126_p2.read(), ap_const_lv1_1) && esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()))) {
                ap_NS_fsm = ap_ST_fsm_state2;
            } else {
                ap_NS_fsm = ap_ST_fsm_state4;
            }
            break;
        case 8 : 
            if ((esl_seteq<1,1,1>(exitcond_fu_165_p2.read(), ap_const_lv1_1) && esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()))) {
                ap_NS_fsm = ap_ST_fsm_state3;
            } else {
                ap_NS_fsm = ap_ST_fsm_state5;
            }
            break;
        case 16 : 
            ap_NS_fsm = ap_ST_fsm_state6;
            break;
        case 32 : 
            ap_NS_fsm = ap_ST_fsm_state4;
            break;
        default : 
            ap_NS_fsm =  (sc_lv<6>) ("XXXXXX");
            break;
    }
}

}

