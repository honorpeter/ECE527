// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2018.2
// Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#include "store_weights_5.h"
#include "AESL_pkg.h"

using namespace std;

namespace ap_rtl {

const sc_logic store_weights_5::ap_const_logic_1 = sc_dt::Log_1;
const sc_logic store_weights_5::ap_const_logic_0 = sc_dt::Log_0;
const sc_lv<3> store_weights_5::ap_ST_fsm_state1 = "1";
const sc_lv<3> store_weights_5::ap_ST_fsm_pp0_stage0 = "10";
const sc_lv<3> store_weights_5::ap_ST_fsm_state14 = "100";
const bool store_weights_5::ap_const_boolean_1 = true;
const sc_lv<32> store_weights_5::ap_const_lv32_0 = "00000000000000000000000000000000";
const sc_lv<1> store_weights_5::ap_const_lv1_0 = "0";
const sc_lv<3> store_weights_5::ap_const_lv3_0 = "000";
const sc_lv<2> store_weights_5::ap_const_lv2_0 = "00";
const sc_lv<4> store_weights_5::ap_const_lv4_0 = "0000";
const bool store_weights_5::ap_const_boolean_0 = false;
const sc_lv<32> store_weights_5::ap_const_lv32_1 = "1";
const sc_lv<1> store_weights_5::ap_const_lv1_1 = "1";
const sc_lv<16> store_weights_5::ap_const_lv16_0 = "0000000000000000";
const sc_lv<7> store_weights_5::ap_const_lv7_0 = "0000000";
const sc_lv<10> store_weights_5::ap_const_lv10_0 = "0000000000";
const sc_lv<5> store_weights_5::ap_const_lv5_0 = "00000";
const sc_lv<6> store_weights_5::ap_const_lv6_0 = "000000";
const sc_lv<16> store_weights_5::ap_const_lv16_BB80 = "1011101110000000";
const sc_lv<16> store_weights_5::ap_const_lv16_1 = "1";
const sc_lv<7> store_weights_5::ap_const_lv7_1 = "1";
const sc_lv<10> store_weights_5::ap_const_lv10_190 = "110010000";
const sc_lv<3> store_weights_5::ap_const_lv3_5 = "101";
const sc_lv<6> store_weights_5::ap_const_lv6_19 = "11001";
const sc_lv<5> store_weights_5::ap_const_lv5_1 = "1";
const sc_lv<3> store_weights_5::ap_const_lv3_1 = "1";
const sc_lv<6> store_weights_5::ap_const_lv6_1 = "1";
const sc_lv<10> store_weights_5::ap_const_lv10_1 = "1";
const sc_lv<64> store_weights_5::ap_const_lv64_2 = "10";
const sc_lv<32> store_weights_5::ap_const_lv32_2 = "10";

store_weights_5::store_weights_5(sc_module_name name) : sc_module(name), mVcdFile(0) {

    SC_METHOD(thread_ap_clk_no_reset_);
    dont_initialize();
    sensitive << ( ap_clk.pos() );

    SC_METHOD(thread_ap_CS_fsm_pp0_stage0);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state1);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state14);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_block_pp0_stage0);

    SC_METHOD(thread_ap_block_pp0_stage0_01001);
    sensitive << ( m_axi_weights_RVALID );
    sensitive << ( ap_enable_reg_pp0_iter10 );
    sensitive << ( exitcond_flatten2_reg_470_pp0_iter9_reg );

    SC_METHOD(thread_ap_block_pp0_stage0_11001);
    sensitive << ( m_axi_weights_RVALID );
    sensitive << ( ap_enable_reg_pp0_iter3 );
    sensitive << ( ap_enable_reg_pp0_iter10 );
    sensitive << ( exitcond_flatten2_reg_470_pp0_iter9_reg );
    sensitive << ( ap_block_state5_io );

    SC_METHOD(thread_ap_block_pp0_stage0_subdone);
    sensitive << ( m_axi_weights_RVALID );
    sensitive << ( ap_enable_reg_pp0_iter3 );
    sensitive << ( ap_enable_reg_pp0_iter10 );
    sensitive << ( exitcond_flatten2_reg_470_pp0_iter9_reg );
    sensitive << ( ap_block_state5_io );

    SC_METHOD(thread_ap_block_state10_pp0_stage0_iter8);

    SC_METHOD(thread_ap_block_state11_pp0_stage0_iter9);

    SC_METHOD(thread_ap_block_state12_pp0_stage0_iter10);
    sensitive << ( m_axi_weights_RVALID );
    sensitive << ( exitcond_flatten2_reg_470_pp0_iter9_reg );

    SC_METHOD(thread_ap_block_state13_pp0_stage0_iter11);

    SC_METHOD(thread_ap_block_state2_pp0_stage0_iter0);

    SC_METHOD(thread_ap_block_state3_pp0_stage0_iter1);

    SC_METHOD(thread_ap_block_state4_pp0_stage0_iter2);

    SC_METHOD(thread_ap_block_state5_io);
    sensitive << ( exitcond_flatten2_reg_470_pp0_iter2_reg );
    sensitive << ( ap_sig_ioackin_m_axi_weights_ARREADY );

    SC_METHOD(thread_ap_block_state5_pp0_stage0_iter3);

    SC_METHOD(thread_ap_block_state6_pp0_stage0_iter4);

    SC_METHOD(thread_ap_block_state7_pp0_stage0_iter5);

    SC_METHOD(thread_ap_block_state8_pp0_stage0_iter6);

    SC_METHOD(thread_ap_block_state9_pp0_stage0_iter7);

    SC_METHOD(thread_ap_condition_pp0_exit_iter0_state2);
    sensitive << ( exitcond_flatten2_fu_200_p2 );

    SC_METHOD(thread_ap_done);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( ap_CS_fsm_state14 );

    SC_METHOD(thread_ap_enable_pp0);
    sensitive << ( ap_idle_pp0 );

    SC_METHOD(thread_ap_idle);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );

    SC_METHOD(thread_ap_idle_pp0);
    sensitive << ( ap_enable_reg_pp0_iter3 );
    sensitive << ( ap_enable_reg_pp0_iter10 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_enable_reg_pp0_iter2 );
    sensitive << ( ap_enable_reg_pp0_iter4 );
    sensitive << ( ap_enable_reg_pp0_iter5 );
    sensitive << ( ap_enable_reg_pp0_iter6 );
    sensitive << ( ap_enable_reg_pp0_iter7 );
    sensitive << ( ap_enable_reg_pp0_iter8 );
    sensitive << ( ap_enable_reg_pp0_iter9 );
    sensitive << ( ap_enable_reg_pp0_iter11 );

    SC_METHOD(thread_ap_phi_mux_i_phi_fu_134_p4);
    sensitive << ( ap_block_pp0_stage0 );
    sensitive << ( exitcond_flatten2_reg_470 );
    sensitive << ( i_reg_130 );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( tmp_mid2_v_reg_479 );
    sensitive << ( ap_enable_reg_pp0_iter1 );

    SC_METHOD(thread_ap_phi_mux_j_phi_fu_178_p4);
    sensitive << ( ap_block_pp0_stage0 );
    sensitive << ( exitcond_flatten2_reg_470 );
    sensitive << ( j_reg_174 );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( tmp_4_mid2_reg_496 );
    sensitive << ( ap_enable_reg_pp0_iter1 );

    SC_METHOD(thread_ap_phi_mux_l_phi_fu_156_p4);
    sensitive << ( ap_block_pp0_stage0 );
    sensitive << ( exitcond_flatten2_reg_470 );
    sensitive << ( l_reg_152 );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( tmp_2_mid2_reg_485 );
    sensitive << ( ap_enable_reg_pp0_iter1 );

    SC_METHOD(thread_ap_ready);
    sensitive << ( ap_CS_fsm_state14 );

    SC_METHOD(thread_ap_sig_ioackin_m_axi_weights_ARREADY);
    sensitive << ( m_axi_weights_ARREADY );
    sensitive << ( ap_reg_ioackin_m_axi_weights_ARREADY );

    SC_METHOD(thread_exitcond_flatten1_fu_258_p2);
    sensitive << ( indvar_flatten_reg_163 );
    sensitive << ( exitcond_flatten2_fu_200_p2 );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( ap_enable_reg_pp0_iter0 );

    SC_METHOD(thread_exitcond_flatten2_fu_200_p2);
    sensitive << ( indvar_flatten1_reg_119 );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( ap_enable_reg_pp0_iter0 );

    SC_METHOD(thread_exitcond_flatten_fu_218_p2);
    sensitive << ( indvar_flatten2_reg_141 );
    sensitive << ( exitcond_flatten2_fu_200_p2 );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( ap_enable_reg_pp0_iter0 );

    SC_METHOD(thread_exitcond_flatten_mid_fu_264_p2);
    sensitive << ( not_exitcond_flatten_fu_240_p2 );
    sensitive << ( exitcond_flatten1_fu_258_p2 );

    SC_METHOD(thread_exitcond_flatten_not_fu_298_p2);
    sensitive << ( exitcond_flatten1_fu_258_p2 );

    SC_METHOD(thread_exitcond_fu_246_p2);
    sensitive << ( k_reg_185 );
    sensitive << ( exitcond_flatten2_fu_200_p2 );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( ap_enable_reg_pp0_iter0 );

    SC_METHOD(thread_exitcond_mid1_fu_310_p2);
    sensitive << ( exitcond_mid_fu_252_p2 );
    sensitive << ( not_exitcond_flatten_1_fu_304_p2 );

    SC_METHOD(thread_exitcond_mid_fu_252_p2);
    sensitive << ( exitcond_fu_246_p2 );
    sensitive << ( not_exitcond_flatten_fu_240_p2 );

    SC_METHOD(thread_i_1_fu_212_p2);
    sensitive << ( ap_phi_mux_i_phi_fu_134_p4 );

    SC_METHOD(thread_indvar_flatten13_op_fu_370_p2);
    sensitive << ( indvar_flatten2_reg_141 );

    SC_METHOD(thread_indvar_flatten_next1_fu_376_p3);
    sensitive << ( exitcond_flatten_fu_218_p2 );
    sensitive << ( indvar_flatten13_op_fu_370_p2 );

    SC_METHOD(thread_indvar_flatten_next2_fu_206_p2);
    sensitive << ( indvar_flatten1_reg_119 );

    SC_METHOD(thread_indvar_flatten_next_fu_362_p3);
    sensitive << ( tmp_5_fu_276_p2 );
    sensitive << ( indvar_flatten_op_fu_356_p2 );

    SC_METHOD(thread_indvar_flatten_op_fu_356_p2);
    sensitive << ( indvar_flatten_reg_163 );

    SC_METHOD(thread_j_1_fu_316_p2);
    sensitive << ( j_mid_fu_282_p3 );

    SC_METHOD(thread_j_mid_fu_282_p3);
    sensitive << ( ap_phi_mux_j_phi_fu_178_p4 );
    sensitive << ( tmp_5_fu_276_p2 );

    SC_METHOD(thread_k_1_fu_350_p2);
    sensitive << ( k_mid2_fu_334_p3 );

    SC_METHOD(thread_k_mid2_fu_334_p3);
    sensitive << ( k_reg_185 );
    sensitive << ( tmp_3_fu_328_p2 );

    SC_METHOD(thread_l_1_fu_270_p2);
    sensitive << ( l_mid_fu_224_p3 );

    SC_METHOD(thread_l_mid_fu_224_p3);
    sensitive << ( ap_phi_mux_l_phi_fu_156_p4 );
    sensitive << ( exitcond_flatten_fu_218_p2 );

    SC_METHOD(thread_m_axi_weights_ARADDR);
    sensitive << ( ap_enable_reg_pp0_iter3 );
    sensitive << ( exitcond_flatten2_reg_470_pp0_iter2_reg );
    sensitive << ( weights_addr_reg_528 );
    sensitive << ( ap_reg_ioackin_m_axi_weights_ARREADY );
    sensitive << ( ap_block_pp0_stage0_01001 );

    SC_METHOD(thread_m_axi_weights_ARBURST);

    SC_METHOD(thread_m_axi_weights_ARCACHE);

    SC_METHOD(thread_m_axi_weights_ARID);

    SC_METHOD(thread_m_axi_weights_ARLEN);
    sensitive << ( ap_enable_reg_pp0_iter3 );
    sensitive << ( exitcond_flatten2_reg_470_pp0_iter2_reg );
    sensitive << ( ap_reg_ioackin_m_axi_weights_ARREADY );
    sensitive << ( ap_block_pp0_stage0_01001 );

    SC_METHOD(thread_m_axi_weights_ARLOCK);

    SC_METHOD(thread_m_axi_weights_ARPROT);

    SC_METHOD(thread_m_axi_weights_ARQOS);

    SC_METHOD(thread_m_axi_weights_ARREGION);

    SC_METHOD(thread_m_axi_weights_ARSIZE);

    SC_METHOD(thread_m_axi_weights_ARUSER);

    SC_METHOD(thread_m_axi_weights_ARVALID);
    sensitive << ( ap_enable_reg_pp0_iter3 );
    sensitive << ( exitcond_flatten2_reg_470_pp0_iter2_reg );
    sensitive << ( ap_reg_ioackin_m_axi_weights_ARREADY );
    sensitive << ( ap_block_pp0_stage0_01001 );

    SC_METHOD(thread_m_axi_weights_AWADDR);

    SC_METHOD(thread_m_axi_weights_AWBURST);

    SC_METHOD(thread_m_axi_weights_AWCACHE);

    SC_METHOD(thread_m_axi_weights_AWID);

    SC_METHOD(thread_m_axi_weights_AWLEN);

    SC_METHOD(thread_m_axi_weights_AWLOCK);

    SC_METHOD(thread_m_axi_weights_AWPROT);

    SC_METHOD(thread_m_axi_weights_AWQOS);

    SC_METHOD(thread_m_axi_weights_AWREGION);

    SC_METHOD(thread_m_axi_weights_AWSIZE);

    SC_METHOD(thread_m_axi_weights_AWUSER);

    SC_METHOD(thread_m_axi_weights_AWVALID);

    SC_METHOD(thread_m_axi_weights_BREADY);

    SC_METHOD(thread_m_axi_weights_RREADY);
    sensitive << ( ap_enable_reg_pp0_iter10 );
    sensitive << ( exitcond_flatten2_reg_470_pp0_iter9_reg );
    sensitive << ( ap_block_pp0_stage0_11001 );

    SC_METHOD(thread_m_axi_weights_WDATA);

    SC_METHOD(thread_m_axi_weights_WID);

    SC_METHOD(thread_m_axi_weights_WLAST);

    SC_METHOD(thread_m_axi_weights_WSTRB);

    SC_METHOD(thread_m_axi_weights_WUSER);

    SC_METHOD(thread_m_axi_weights_WVALID);

    SC_METHOD(thread_not_exitcond_flatten_1_fu_304_p2);
    sensitive << ( exitcond_flatten_fu_218_p2 );
    sensitive << ( exitcond_flatten_not_fu_298_p2 );

    SC_METHOD(thread_not_exitcond_flatten_fu_240_p2);
    sensitive << ( exitcond_flatten_fu_218_p2 );

    SC_METHOD(thread_p_shl1_fu_416_p1);
    sensitive << ( tmp_2_fu_408_p3 );

    SC_METHOD(thread_sext_fu_196_p1);
    sensitive << ( weights_offset );

    SC_METHOD(thread_sum_fu_454_p2);
    sensitive << ( sext_reg_465 );
    sensitive << ( tmp_11_fu_448_p2 );

    SC_METHOD(thread_tmp_10_fu_440_p2);
    sensitive << ( tmp_4_reg_517 );
    sensitive << ( tmp_8_fu_435_p2 );

    SC_METHOD(thread_tmp_11_fu_448_p2);
    sensitive << ( tmp_10_fu_440_p2 );
    sensitive << ( tmp_6_fu_445_p1 );

    SC_METHOD(thread_tmp_2_fu_408_p3);
    sensitive << ( tmp_7_fu_398_p2 );

    SC_METHOD(thread_tmp_2_mid2_cast_fu_395_p1);
    sensitive << ( tmp_2_mid2_reg_485 );

    SC_METHOD(thread_tmp_2_mid2_fu_290_p3);
    sensitive << ( l_mid_fu_224_p3 );
    sensitive << ( exitcond_flatten_mid_fu_264_p2 );
    sensitive << ( l_1_fu_270_p2 );

    SC_METHOD(thread_tmp_3_cast_fu_391_p1);
    sensitive << ( tmp_fu_384_p3 );

    SC_METHOD(thread_tmp_3_fu_328_p2);
    sensitive << ( exitcond_flatten_fu_218_p2 );
    sensitive << ( tmp_s_fu_322_p2 );

    SC_METHOD(thread_tmp_4_fu_429_p2);
    sensitive << ( tmp_9_fu_420_p2 );
    sensitive << ( tmp_4_mid2_cast_fu_426_p1 );

    SC_METHOD(thread_tmp_4_mid2_cast_fu_426_p1);
    sensitive << ( tmp_4_mid2_reg_496 );

    SC_METHOD(thread_tmp_4_mid2_fu_342_p3);
    sensitive << ( j_mid_fu_282_p3 );
    sensitive << ( exitcond_mid1_fu_310_p2 );
    sensitive << ( j_1_fu_316_p2 );

    SC_METHOD(thread_tmp_5_fu_276_p2);
    sensitive << ( exitcond_flatten_fu_218_p2 );
    sensitive << ( exitcond_flatten_mid_fu_264_p2 );

    SC_METHOD(thread_tmp_6_fu_445_p1);
    sensitive << ( k_mid2_reg_491_pp0_iter1_reg );

    SC_METHOD(thread_tmp_7_cast_fu_404_p1);
    sensitive << ( tmp_7_fu_398_p2 );

    SC_METHOD(thread_tmp_7_fu_398_p2);
    sensitive << ( tmp_3_cast_fu_391_p1 );
    sensitive << ( tmp_2_mid2_cast_fu_395_p1 );

    SC_METHOD(thread_tmp_8_fu_435_p2);
    sensitive << ( tmp_4_reg_517 );

    SC_METHOD(thread_tmp_9_fu_420_p2);
    sensitive << ( tmp_7_cast_fu_404_p1 );
    sensitive << ( p_shl1_fu_416_p1 );

    SC_METHOD(thread_tmp_fu_384_p3);
    sensitive << ( tmp_mid2_v_reg_479 );

    SC_METHOD(thread_tmp_mid2_v_fu_232_p3);
    sensitive << ( ap_phi_mux_i_phi_fu_134_p4 );
    sensitive << ( exitcond_flatten_fu_218_p2 );
    sensitive << ( i_1_fu_212_p2 );

    SC_METHOD(thread_tmp_s_fu_322_p2);
    sensitive << ( exitcond_flatten_mid_fu_264_p2 );
    sensitive << ( exitcond_mid1_fu_310_p2 );

    SC_METHOD(thread_weights_blk_n_AR);
    sensitive << ( m_axi_weights_ARREADY );
    sensitive << ( ap_enable_reg_pp0_iter3 );
    sensitive << ( ap_block_pp0_stage0 );
    sensitive << ( exitcond_flatten2_reg_470_pp0_iter2_reg );

    SC_METHOD(thread_weights_blk_n_R);
    sensitive << ( m_axi_weights_RVALID );
    sensitive << ( ap_block_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter10 );
    sensitive << ( exitcond_flatten2_reg_470_pp0_iter9_reg );

    SC_METHOD(thread_weights_oc_address0);
    sensitive << ( ap_block_pp0_stage0 );
    sensitive << ( tmp_11_reg_523_pp0_iter10_reg );
    sensitive << ( ap_enable_reg_pp0_iter11 );

    SC_METHOD(thread_weights_oc_ce0);
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( ap_enable_reg_pp0_iter11 );

    SC_METHOD(thread_weights_oc_d0);
    sensitive << ( ap_block_pp0_stage0 );
    sensitive << ( weights_addr_read_reg_534 );
    sensitive << ( ap_enable_reg_pp0_iter11 );

    SC_METHOD(thread_weights_oc_we0);
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( exitcond_flatten2_reg_470_pp0_iter10_reg );
    sensitive << ( ap_enable_reg_pp0_iter11 );

    SC_METHOD(thread_ap_NS_fsm);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( ap_enable_reg_pp0_iter10 );
    sensitive << ( exitcond_flatten2_fu_200_p2 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_block_pp0_stage0_subdone );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_enable_reg_pp0_iter11 );

    ap_CS_fsm = "001";
    ap_enable_reg_pp0_iter3 = SC_LOGIC_0;
    ap_enable_reg_pp0_iter10 = SC_LOGIC_0;
    ap_enable_reg_pp0_iter0 = SC_LOGIC_0;
    ap_enable_reg_pp0_iter1 = SC_LOGIC_0;
    ap_enable_reg_pp0_iter2 = SC_LOGIC_0;
    ap_enable_reg_pp0_iter4 = SC_LOGIC_0;
    ap_enable_reg_pp0_iter5 = SC_LOGIC_0;
    ap_enable_reg_pp0_iter6 = SC_LOGIC_0;
    ap_enable_reg_pp0_iter7 = SC_LOGIC_0;
    ap_enable_reg_pp0_iter8 = SC_LOGIC_0;
    ap_enable_reg_pp0_iter9 = SC_LOGIC_0;
    ap_enable_reg_pp0_iter11 = SC_LOGIC_0;
    ap_reg_ioackin_m_axi_weights_ARREADY = SC_LOGIC_0;
    static int apTFileNum = 0;
    stringstream apTFilenSS;
    apTFilenSS << "store_weights_5_sc_trace_" << apTFileNum ++;
    string apTFn = apTFilenSS.str();
    mVcdFile = sc_create_vcd_trace_file(apTFn.c_str());
    mVcdFile->set_time_unit(1, SC_PS);
    if (1) {
#ifdef __HLS_TRACE_LEVEL_PORT_HIER__
    sc_trace(mVcdFile, ap_clk, "(port)ap_clk");
    sc_trace(mVcdFile, ap_rst, "(port)ap_rst");
    sc_trace(mVcdFile, ap_start, "(port)ap_start");
    sc_trace(mVcdFile, ap_done, "(port)ap_done");
    sc_trace(mVcdFile, ap_idle, "(port)ap_idle");
    sc_trace(mVcdFile, ap_ready, "(port)ap_ready");
    sc_trace(mVcdFile, m_axi_weights_AWVALID, "(port)m_axi_weights_AWVALID");
    sc_trace(mVcdFile, m_axi_weights_AWREADY, "(port)m_axi_weights_AWREADY");
    sc_trace(mVcdFile, m_axi_weights_AWADDR, "(port)m_axi_weights_AWADDR");
    sc_trace(mVcdFile, m_axi_weights_AWID, "(port)m_axi_weights_AWID");
    sc_trace(mVcdFile, m_axi_weights_AWLEN, "(port)m_axi_weights_AWLEN");
    sc_trace(mVcdFile, m_axi_weights_AWSIZE, "(port)m_axi_weights_AWSIZE");
    sc_trace(mVcdFile, m_axi_weights_AWBURST, "(port)m_axi_weights_AWBURST");
    sc_trace(mVcdFile, m_axi_weights_AWLOCK, "(port)m_axi_weights_AWLOCK");
    sc_trace(mVcdFile, m_axi_weights_AWCACHE, "(port)m_axi_weights_AWCACHE");
    sc_trace(mVcdFile, m_axi_weights_AWPROT, "(port)m_axi_weights_AWPROT");
    sc_trace(mVcdFile, m_axi_weights_AWQOS, "(port)m_axi_weights_AWQOS");
    sc_trace(mVcdFile, m_axi_weights_AWREGION, "(port)m_axi_weights_AWREGION");
    sc_trace(mVcdFile, m_axi_weights_AWUSER, "(port)m_axi_weights_AWUSER");
    sc_trace(mVcdFile, m_axi_weights_WVALID, "(port)m_axi_weights_WVALID");
    sc_trace(mVcdFile, m_axi_weights_WREADY, "(port)m_axi_weights_WREADY");
    sc_trace(mVcdFile, m_axi_weights_WDATA, "(port)m_axi_weights_WDATA");
    sc_trace(mVcdFile, m_axi_weights_WSTRB, "(port)m_axi_weights_WSTRB");
    sc_trace(mVcdFile, m_axi_weights_WLAST, "(port)m_axi_weights_WLAST");
    sc_trace(mVcdFile, m_axi_weights_WID, "(port)m_axi_weights_WID");
    sc_trace(mVcdFile, m_axi_weights_WUSER, "(port)m_axi_weights_WUSER");
    sc_trace(mVcdFile, m_axi_weights_ARVALID, "(port)m_axi_weights_ARVALID");
    sc_trace(mVcdFile, m_axi_weights_ARREADY, "(port)m_axi_weights_ARREADY");
    sc_trace(mVcdFile, m_axi_weights_ARADDR, "(port)m_axi_weights_ARADDR");
    sc_trace(mVcdFile, m_axi_weights_ARID, "(port)m_axi_weights_ARID");
    sc_trace(mVcdFile, m_axi_weights_ARLEN, "(port)m_axi_weights_ARLEN");
    sc_trace(mVcdFile, m_axi_weights_ARSIZE, "(port)m_axi_weights_ARSIZE");
    sc_trace(mVcdFile, m_axi_weights_ARBURST, "(port)m_axi_weights_ARBURST");
    sc_trace(mVcdFile, m_axi_weights_ARLOCK, "(port)m_axi_weights_ARLOCK");
    sc_trace(mVcdFile, m_axi_weights_ARCACHE, "(port)m_axi_weights_ARCACHE");
    sc_trace(mVcdFile, m_axi_weights_ARPROT, "(port)m_axi_weights_ARPROT");
    sc_trace(mVcdFile, m_axi_weights_ARQOS, "(port)m_axi_weights_ARQOS");
    sc_trace(mVcdFile, m_axi_weights_ARREGION, "(port)m_axi_weights_ARREGION");
    sc_trace(mVcdFile, m_axi_weights_ARUSER, "(port)m_axi_weights_ARUSER");
    sc_trace(mVcdFile, m_axi_weights_RVALID, "(port)m_axi_weights_RVALID");
    sc_trace(mVcdFile, m_axi_weights_RREADY, "(port)m_axi_weights_RREADY");
    sc_trace(mVcdFile, m_axi_weights_RDATA, "(port)m_axi_weights_RDATA");
    sc_trace(mVcdFile, m_axi_weights_RLAST, "(port)m_axi_weights_RLAST");
    sc_trace(mVcdFile, m_axi_weights_RID, "(port)m_axi_weights_RID");
    sc_trace(mVcdFile, m_axi_weights_RUSER, "(port)m_axi_weights_RUSER");
    sc_trace(mVcdFile, m_axi_weights_RRESP, "(port)m_axi_weights_RRESP");
    sc_trace(mVcdFile, m_axi_weights_BVALID, "(port)m_axi_weights_BVALID");
    sc_trace(mVcdFile, m_axi_weights_BREADY, "(port)m_axi_weights_BREADY");
    sc_trace(mVcdFile, m_axi_weights_BRESP, "(port)m_axi_weights_BRESP");
    sc_trace(mVcdFile, m_axi_weights_BID, "(port)m_axi_weights_BID");
    sc_trace(mVcdFile, m_axi_weights_BUSER, "(port)m_axi_weights_BUSER");
    sc_trace(mVcdFile, weights_offset, "(port)weights_offset");
    sc_trace(mVcdFile, weights_oc_address0, "(port)weights_oc_address0");
    sc_trace(mVcdFile, weights_oc_ce0, "(port)weights_oc_ce0");
    sc_trace(mVcdFile, weights_oc_we0, "(port)weights_oc_we0");
    sc_trace(mVcdFile, weights_oc_d0, "(port)weights_oc_d0");
#endif
#ifdef __HLS_TRACE_LEVEL_INT__
    sc_trace(mVcdFile, ap_CS_fsm, "ap_CS_fsm");
    sc_trace(mVcdFile, ap_CS_fsm_state1, "ap_CS_fsm_state1");
    sc_trace(mVcdFile, weights_blk_n_AR, "weights_blk_n_AR");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter3, "ap_enable_reg_pp0_iter3");
    sc_trace(mVcdFile, ap_block_pp0_stage0, "ap_block_pp0_stage0");
    sc_trace(mVcdFile, exitcond_flatten2_reg_470, "exitcond_flatten2_reg_470");
    sc_trace(mVcdFile, exitcond_flatten2_reg_470_pp0_iter2_reg, "exitcond_flatten2_reg_470_pp0_iter2_reg");
    sc_trace(mVcdFile, weights_blk_n_R, "weights_blk_n_R");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter10, "ap_enable_reg_pp0_iter10");
    sc_trace(mVcdFile, exitcond_flatten2_reg_470_pp0_iter9_reg, "exitcond_flatten2_reg_470_pp0_iter9_reg");
    sc_trace(mVcdFile, indvar_flatten1_reg_119, "indvar_flatten1_reg_119");
    sc_trace(mVcdFile, i_reg_130, "i_reg_130");
    sc_trace(mVcdFile, indvar_flatten2_reg_141, "indvar_flatten2_reg_141");
    sc_trace(mVcdFile, l_reg_152, "l_reg_152");
    sc_trace(mVcdFile, indvar_flatten_reg_163, "indvar_flatten_reg_163");
    sc_trace(mVcdFile, j_reg_174, "j_reg_174");
    sc_trace(mVcdFile, k_reg_185, "k_reg_185");
    sc_trace(mVcdFile, sext_fu_196_p1, "sext_fu_196_p1");
    sc_trace(mVcdFile, sext_reg_465, "sext_reg_465");
    sc_trace(mVcdFile, exitcond_flatten2_fu_200_p2, "exitcond_flatten2_fu_200_p2");
    sc_trace(mVcdFile, ap_CS_fsm_pp0_stage0, "ap_CS_fsm_pp0_stage0");
    sc_trace(mVcdFile, ap_block_state2_pp0_stage0_iter0, "ap_block_state2_pp0_stage0_iter0");
    sc_trace(mVcdFile, ap_block_state3_pp0_stage0_iter1, "ap_block_state3_pp0_stage0_iter1");
    sc_trace(mVcdFile, ap_block_state4_pp0_stage0_iter2, "ap_block_state4_pp0_stage0_iter2");
    sc_trace(mVcdFile, ap_block_state5_pp0_stage0_iter3, "ap_block_state5_pp0_stage0_iter3");
    sc_trace(mVcdFile, ap_sig_ioackin_m_axi_weights_ARREADY, "ap_sig_ioackin_m_axi_weights_ARREADY");
    sc_trace(mVcdFile, ap_block_state5_io, "ap_block_state5_io");
    sc_trace(mVcdFile, ap_block_state6_pp0_stage0_iter4, "ap_block_state6_pp0_stage0_iter4");
    sc_trace(mVcdFile, ap_block_state7_pp0_stage0_iter5, "ap_block_state7_pp0_stage0_iter5");
    sc_trace(mVcdFile, ap_block_state8_pp0_stage0_iter6, "ap_block_state8_pp0_stage0_iter6");
    sc_trace(mVcdFile, ap_block_state9_pp0_stage0_iter7, "ap_block_state9_pp0_stage0_iter7");
    sc_trace(mVcdFile, ap_block_state10_pp0_stage0_iter8, "ap_block_state10_pp0_stage0_iter8");
    sc_trace(mVcdFile, ap_block_state11_pp0_stage0_iter9, "ap_block_state11_pp0_stage0_iter9");
    sc_trace(mVcdFile, ap_block_state12_pp0_stage0_iter10, "ap_block_state12_pp0_stage0_iter10");
    sc_trace(mVcdFile, ap_block_state13_pp0_stage0_iter11, "ap_block_state13_pp0_stage0_iter11");
    sc_trace(mVcdFile, ap_block_pp0_stage0_11001, "ap_block_pp0_stage0_11001");
    sc_trace(mVcdFile, exitcond_flatten2_reg_470_pp0_iter1_reg, "exitcond_flatten2_reg_470_pp0_iter1_reg");
    sc_trace(mVcdFile, exitcond_flatten2_reg_470_pp0_iter3_reg, "exitcond_flatten2_reg_470_pp0_iter3_reg");
    sc_trace(mVcdFile, exitcond_flatten2_reg_470_pp0_iter4_reg, "exitcond_flatten2_reg_470_pp0_iter4_reg");
    sc_trace(mVcdFile, exitcond_flatten2_reg_470_pp0_iter5_reg, "exitcond_flatten2_reg_470_pp0_iter5_reg");
    sc_trace(mVcdFile, exitcond_flatten2_reg_470_pp0_iter6_reg, "exitcond_flatten2_reg_470_pp0_iter6_reg");
    sc_trace(mVcdFile, exitcond_flatten2_reg_470_pp0_iter7_reg, "exitcond_flatten2_reg_470_pp0_iter7_reg");
    sc_trace(mVcdFile, exitcond_flatten2_reg_470_pp0_iter8_reg, "exitcond_flatten2_reg_470_pp0_iter8_reg");
    sc_trace(mVcdFile, exitcond_flatten2_reg_470_pp0_iter10_reg, "exitcond_flatten2_reg_470_pp0_iter10_reg");
    sc_trace(mVcdFile, indvar_flatten_next2_fu_206_p2, "indvar_flatten_next2_fu_206_p2");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter0, "ap_enable_reg_pp0_iter0");
    sc_trace(mVcdFile, tmp_mid2_v_fu_232_p3, "tmp_mid2_v_fu_232_p3");
    sc_trace(mVcdFile, tmp_mid2_v_reg_479, "tmp_mid2_v_reg_479");
    sc_trace(mVcdFile, tmp_2_mid2_fu_290_p3, "tmp_2_mid2_fu_290_p3");
    sc_trace(mVcdFile, tmp_2_mid2_reg_485, "tmp_2_mid2_reg_485");
    sc_trace(mVcdFile, k_mid2_fu_334_p3, "k_mid2_fu_334_p3");
    sc_trace(mVcdFile, k_mid2_reg_491, "k_mid2_reg_491");
    sc_trace(mVcdFile, k_mid2_reg_491_pp0_iter1_reg, "k_mid2_reg_491_pp0_iter1_reg");
    sc_trace(mVcdFile, tmp_4_mid2_fu_342_p3, "tmp_4_mid2_fu_342_p3");
    sc_trace(mVcdFile, tmp_4_mid2_reg_496, "tmp_4_mid2_reg_496");
    sc_trace(mVcdFile, k_1_fu_350_p2, "k_1_fu_350_p2");
    sc_trace(mVcdFile, indvar_flatten_next_fu_362_p3, "indvar_flatten_next_fu_362_p3");
    sc_trace(mVcdFile, indvar_flatten_next1_fu_376_p3, "indvar_flatten_next1_fu_376_p3");
    sc_trace(mVcdFile, tmp_4_fu_429_p2, "tmp_4_fu_429_p2");
    sc_trace(mVcdFile, tmp_4_reg_517, "tmp_4_reg_517");
    sc_trace(mVcdFile, tmp_11_fu_448_p2, "tmp_11_fu_448_p2");
    sc_trace(mVcdFile, tmp_11_reg_523, "tmp_11_reg_523");
    sc_trace(mVcdFile, tmp_11_reg_523_pp0_iter3_reg, "tmp_11_reg_523_pp0_iter3_reg");
    sc_trace(mVcdFile, tmp_11_reg_523_pp0_iter4_reg, "tmp_11_reg_523_pp0_iter4_reg");
    sc_trace(mVcdFile, tmp_11_reg_523_pp0_iter5_reg, "tmp_11_reg_523_pp0_iter5_reg");
    sc_trace(mVcdFile, tmp_11_reg_523_pp0_iter6_reg, "tmp_11_reg_523_pp0_iter6_reg");
    sc_trace(mVcdFile, tmp_11_reg_523_pp0_iter7_reg, "tmp_11_reg_523_pp0_iter7_reg");
    sc_trace(mVcdFile, tmp_11_reg_523_pp0_iter8_reg, "tmp_11_reg_523_pp0_iter8_reg");
    sc_trace(mVcdFile, tmp_11_reg_523_pp0_iter9_reg, "tmp_11_reg_523_pp0_iter9_reg");
    sc_trace(mVcdFile, tmp_11_reg_523_pp0_iter10_reg, "tmp_11_reg_523_pp0_iter10_reg");
    sc_trace(mVcdFile, weights_addr_reg_528, "weights_addr_reg_528");
    sc_trace(mVcdFile, weights_addr_read_reg_534, "weights_addr_read_reg_534");
    sc_trace(mVcdFile, ap_block_pp0_stage0_subdone, "ap_block_pp0_stage0_subdone");
    sc_trace(mVcdFile, ap_condition_pp0_exit_iter0_state2, "ap_condition_pp0_exit_iter0_state2");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter1, "ap_enable_reg_pp0_iter1");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter2, "ap_enable_reg_pp0_iter2");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter4, "ap_enable_reg_pp0_iter4");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter5, "ap_enable_reg_pp0_iter5");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter6, "ap_enable_reg_pp0_iter6");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter7, "ap_enable_reg_pp0_iter7");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter8, "ap_enable_reg_pp0_iter8");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter9, "ap_enable_reg_pp0_iter9");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter11, "ap_enable_reg_pp0_iter11");
    sc_trace(mVcdFile, ap_phi_mux_i_phi_fu_134_p4, "ap_phi_mux_i_phi_fu_134_p4");
    sc_trace(mVcdFile, ap_phi_mux_l_phi_fu_156_p4, "ap_phi_mux_l_phi_fu_156_p4");
    sc_trace(mVcdFile, ap_phi_mux_j_phi_fu_178_p4, "ap_phi_mux_j_phi_fu_178_p4");
    sc_trace(mVcdFile, sum_fu_454_p2, "sum_fu_454_p2");
    sc_trace(mVcdFile, ap_reg_ioackin_m_axi_weights_ARREADY, "ap_reg_ioackin_m_axi_weights_ARREADY");
    sc_trace(mVcdFile, ap_block_pp0_stage0_01001, "ap_block_pp0_stage0_01001");
    sc_trace(mVcdFile, exitcond_flatten_fu_218_p2, "exitcond_flatten_fu_218_p2");
    sc_trace(mVcdFile, i_1_fu_212_p2, "i_1_fu_212_p2");
    sc_trace(mVcdFile, exitcond_fu_246_p2, "exitcond_fu_246_p2");
    sc_trace(mVcdFile, not_exitcond_flatten_fu_240_p2, "not_exitcond_flatten_fu_240_p2");
    sc_trace(mVcdFile, exitcond_flatten1_fu_258_p2, "exitcond_flatten1_fu_258_p2");
    sc_trace(mVcdFile, l_mid_fu_224_p3, "l_mid_fu_224_p3");
    sc_trace(mVcdFile, exitcond_flatten_mid_fu_264_p2, "exitcond_flatten_mid_fu_264_p2");
    sc_trace(mVcdFile, tmp_5_fu_276_p2, "tmp_5_fu_276_p2");
    sc_trace(mVcdFile, l_1_fu_270_p2, "l_1_fu_270_p2");
    sc_trace(mVcdFile, exitcond_flatten_not_fu_298_p2, "exitcond_flatten_not_fu_298_p2");
    sc_trace(mVcdFile, exitcond_mid_fu_252_p2, "exitcond_mid_fu_252_p2");
    sc_trace(mVcdFile, not_exitcond_flatten_1_fu_304_p2, "not_exitcond_flatten_1_fu_304_p2");
    sc_trace(mVcdFile, j_mid_fu_282_p3, "j_mid_fu_282_p3");
    sc_trace(mVcdFile, exitcond_mid1_fu_310_p2, "exitcond_mid1_fu_310_p2");
    sc_trace(mVcdFile, tmp_s_fu_322_p2, "tmp_s_fu_322_p2");
    sc_trace(mVcdFile, tmp_3_fu_328_p2, "tmp_3_fu_328_p2");
    sc_trace(mVcdFile, j_1_fu_316_p2, "j_1_fu_316_p2");
    sc_trace(mVcdFile, indvar_flatten_op_fu_356_p2, "indvar_flatten_op_fu_356_p2");
    sc_trace(mVcdFile, indvar_flatten13_op_fu_370_p2, "indvar_flatten13_op_fu_370_p2");
    sc_trace(mVcdFile, tmp_fu_384_p3, "tmp_fu_384_p3");
    sc_trace(mVcdFile, tmp_3_cast_fu_391_p1, "tmp_3_cast_fu_391_p1");
    sc_trace(mVcdFile, tmp_2_mid2_cast_fu_395_p1, "tmp_2_mid2_cast_fu_395_p1");
    sc_trace(mVcdFile, tmp_7_fu_398_p2, "tmp_7_fu_398_p2");
    sc_trace(mVcdFile, tmp_2_fu_408_p3, "tmp_2_fu_408_p3");
    sc_trace(mVcdFile, tmp_7_cast_fu_404_p1, "tmp_7_cast_fu_404_p1");
    sc_trace(mVcdFile, p_shl1_fu_416_p1, "p_shl1_fu_416_p1");
    sc_trace(mVcdFile, tmp_9_fu_420_p2, "tmp_9_fu_420_p2");
    sc_trace(mVcdFile, tmp_4_mid2_cast_fu_426_p1, "tmp_4_mid2_cast_fu_426_p1");
    sc_trace(mVcdFile, tmp_8_fu_435_p2, "tmp_8_fu_435_p2");
    sc_trace(mVcdFile, tmp_10_fu_440_p2, "tmp_10_fu_440_p2");
    sc_trace(mVcdFile, tmp_6_fu_445_p1, "tmp_6_fu_445_p1");
    sc_trace(mVcdFile, ap_CS_fsm_state14, "ap_CS_fsm_state14");
    sc_trace(mVcdFile, ap_NS_fsm, "ap_NS_fsm");
    sc_trace(mVcdFile, ap_idle_pp0, "ap_idle_pp0");
    sc_trace(mVcdFile, ap_enable_pp0, "ap_enable_pp0");
#endif

    }
}

store_weights_5::~store_weights_5() {
    if (mVcdFile) 
        sc_close_vcd_trace_file(mVcdFile);

}

void store_weights_5::thread_ap_clk_no_reset_() {
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_CS_fsm = ap_ST_fsm_state1;
    } else {
        ap_CS_fsm = ap_NS_fsm.read();
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter0 = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_boolean_0, ap_block_pp0_stage0_subdone.read()) && 
             esl_seteq<1,1,1>(ap_const_logic_1, ap_condition_pp0_exit_iter0_state2.read()) && 
             esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()))) {
            ap_enable_reg_pp0_iter0 = ap_const_logic_0;
        } else if ((esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1) && 
                    esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()))) {
            ap_enable_reg_pp0_iter0 = ap_const_logic_1;
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter1 = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_const_boolean_0, ap_block_pp0_stage0_subdone.read())) {
            if (esl_seteq<1,1,1>(ap_const_logic_1, ap_condition_pp0_exit_iter0_state2.read())) {
                ap_enable_reg_pp0_iter1 = (ap_condition_pp0_exit_iter0_state2.read() ^ ap_const_logic_1);
            } else if (esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1)) {
                ap_enable_reg_pp0_iter1 = ap_enable_reg_pp0_iter0.read();
            }
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter10 = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_const_boolean_0, ap_block_pp0_stage0_subdone.read())) {
            ap_enable_reg_pp0_iter10 = ap_enable_reg_pp0_iter9.read();
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter11 = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_const_boolean_0, ap_block_pp0_stage0_subdone.read())) {
            ap_enable_reg_pp0_iter11 = ap_enable_reg_pp0_iter10.read();
        } else if ((esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1) && 
                    esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()))) {
            ap_enable_reg_pp0_iter11 = ap_const_logic_0;
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter2 = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_const_boolean_0, ap_block_pp0_stage0_subdone.read())) {
            ap_enable_reg_pp0_iter2 = ap_enable_reg_pp0_iter1.read();
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter3 = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_const_boolean_0, ap_block_pp0_stage0_subdone.read())) {
            ap_enable_reg_pp0_iter3 = ap_enable_reg_pp0_iter2.read();
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter4 = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_const_boolean_0, ap_block_pp0_stage0_subdone.read())) {
            ap_enable_reg_pp0_iter4 = ap_enable_reg_pp0_iter3.read();
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter5 = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_const_boolean_0, ap_block_pp0_stage0_subdone.read())) {
            ap_enable_reg_pp0_iter5 = ap_enable_reg_pp0_iter4.read();
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter6 = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_const_boolean_0, ap_block_pp0_stage0_subdone.read())) {
            ap_enable_reg_pp0_iter6 = ap_enable_reg_pp0_iter5.read();
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter7 = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_const_boolean_0, ap_block_pp0_stage0_subdone.read())) {
            ap_enable_reg_pp0_iter7 = ap_enable_reg_pp0_iter6.read();
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter8 = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_const_boolean_0, ap_block_pp0_stage0_subdone.read())) {
            ap_enable_reg_pp0_iter8 = ap_enable_reg_pp0_iter7.read();
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter9 = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_const_boolean_0, ap_block_pp0_stage0_subdone.read())) {
            ap_enable_reg_pp0_iter9 = ap_enable_reg_pp0_iter8.read();
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_reg_ioackin_m_axi_weights_ARREADY = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter3.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_flatten2_reg_470_pp0_iter2_reg.read()))) {
            if (esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0)) {
                ap_reg_ioackin_m_axi_weights_ARREADY = ap_const_logic_0;
            } else if ((esl_seteq<1,1,1>(ap_const_logic_1, m_axi_weights_ARREADY.read()) && 
                        esl_seteq<1,1,1>(ap_block_pp0_stage0_01001.read(), ap_const_boolean_0))) {
                ap_reg_ioackin_m_axi_weights_ARREADY = ap_const_logic_1;
            }
        }
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_flatten2_reg_470.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()))) {
        i_reg_130 = tmp_mid2_v_reg_479.read();
    } else if ((esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1) && 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()))) {
        i_reg_130 = ap_const_lv7_0;
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_enable_reg_pp0_iter0.read(), ap_const_logic_1) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_flatten2_fu_200_p2.read()))) {
        indvar_flatten1_reg_119 = indvar_flatten_next2_fu_206_p2.read();
    } else if ((esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1) && 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()))) {
        indvar_flatten1_reg_119 = ap_const_lv16_0;
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_enable_reg_pp0_iter0.read(), ap_const_logic_1) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_flatten2_fu_200_p2.read()))) {
        indvar_flatten2_reg_141 = indvar_flatten_next1_fu_376_p3.read();
    } else if ((esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1) && 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()))) {
        indvar_flatten2_reg_141 = ap_const_lv10_0;
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_enable_reg_pp0_iter0.read(), ap_const_logic_1) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_flatten2_fu_200_p2.read()))) {
        indvar_flatten_reg_163 = indvar_flatten_next_fu_362_p3.read();
    } else if ((esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1) && 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()))) {
        indvar_flatten_reg_163 = ap_const_lv6_0;
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_flatten2_reg_470.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()))) {
        j_reg_174 = tmp_4_mid2_reg_496.read();
    } else if ((esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1) && 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()))) {
        j_reg_174 = ap_const_lv3_0;
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_enable_reg_pp0_iter0.read(), ap_const_logic_1) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_flatten2_fu_200_p2.read()))) {
        k_reg_185 = k_1_fu_350_p2.read();
    } else if ((esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1) && 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()))) {
        k_reg_185 = ap_const_lv3_0;
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_flatten2_reg_470.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()))) {
        l_reg_152 = tmp_2_mid2_reg_485.read();
    } else if ((esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1) && 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()))) {
        l_reg_152 = ap_const_lv5_0;
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0))) {
        exitcond_flatten2_reg_470 = exitcond_flatten2_fu_200_p2.read();
        exitcond_flatten2_reg_470_pp0_iter1_reg = exitcond_flatten2_reg_470.read();
        k_mid2_reg_491_pp0_iter1_reg = k_mid2_reg_491.read();
    }
    if (esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0)) {
        exitcond_flatten2_reg_470_pp0_iter10_reg = exitcond_flatten2_reg_470_pp0_iter9_reg.read();
        exitcond_flatten2_reg_470_pp0_iter2_reg = exitcond_flatten2_reg_470_pp0_iter1_reg.read();
        exitcond_flatten2_reg_470_pp0_iter3_reg = exitcond_flatten2_reg_470_pp0_iter2_reg.read();
        exitcond_flatten2_reg_470_pp0_iter4_reg = exitcond_flatten2_reg_470_pp0_iter3_reg.read();
        exitcond_flatten2_reg_470_pp0_iter5_reg = exitcond_flatten2_reg_470_pp0_iter4_reg.read();
        exitcond_flatten2_reg_470_pp0_iter6_reg = exitcond_flatten2_reg_470_pp0_iter5_reg.read();
        exitcond_flatten2_reg_470_pp0_iter7_reg = exitcond_flatten2_reg_470_pp0_iter6_reg.read();
        exitcond_flatten2_reg_470_pp0_iter8_reg = exitcond_flatten2_reg_470_pp0_iter7_reg.read();
        exitcond_flatten2_reg_470_pp0_iter9_reg = exitcond_flatten2_reg_470_pp0_iter8_reg.read();
        tmp_11_reg_523_pp0_iter10_reg = tmp_11_reg_523_pp0_iter9_reg.read();
        tmp_11_reg_523_pp0_iter3_reg = tmp_11_reg_523.read();
        tmp_11_reg_523_pp0_iter4_reg = tmp_11_reg_523_pp0_iter3_reg.read();
        tmp_11_reg_523_pp0_iter5_reg = tmp_11_reg_523_pp0_iter4_reg.read();
        tmp_11_reg_523_pp0_iter6_reg = tmp_11_reg_523_pp0_iter5_reg.read();
        tmp_11_reg_523_pp0_iter7_reg = tmp_11_reg_523_pp0_iter6_reg.read();
        tmp_11_reg_523_pp0_iter8_reg = tmp_11_reg_523_pp0_iter7_reg.read();
        tmp_11_reg_523_pp0_iter9_reg = tmp_11_reg_523_pp0_iter8_reg.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_flatten2_fu_200_p2.read()))) {
        k_mid2_reg_491 = k_mid2_fu_334_p3.read();
    }
    if ((esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1) && esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()))) {
        sext_reg_465 = sext_fu_196_p1.read();
    }
    if ((esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_flatten2_reg_470_pp0_iter1_reg.read()))) {
        tmp_11_reg_523 = tmp_11_fu_448_p2.read();
        weights_addr_reg_528 =  (sc_lv<32>) (sum_fu_454_p2.read());
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(ap_enable_reg_pp0_iter0.read(), ap_const_logic_1) && esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_flatten2_fu_200_p2.read()))) {
        tmp_2_mid2_reg_485 = tmp_2_mid2_fu_290_p3.read();
        tmp_4_mid2_reg_496 = tmp_4_mid2_fu_342_p3.read();
        tmp_mid2_v_reg_479 = tmp_mid2_v_fu_232_p3.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_flatten2_reg_470.read()))) {
        tmp_4_reg_517 = tmp_4_fu_429_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_flatten2_reg_470_pp0_iter9_reg.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0))) {
        weights_addr_read_reg_534 = m_axi_weights_RDATA.read();
    }
}

void store_weights_5::thread_ap_CS_fsm_pp0_stage0() {
    ap_CS_fsm_pp0_stage0 = ap_CS_fsm.read()[1];
}

void store_weights_5::thread_ap_CS_fsm_state1() {
    ap_CS_fsm_state1 = ap_CS_fsm.read()[0];
}

void store_weights_5::thread_ap_CS_fsm_state14() {
    ap_CS_fsm_state14 = ap_CS_fsm.read()[2];
}

void store_weights_5::thread_ap_block_pp0_stage0() {
    ap_block_pp0_stage0 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void store_weights_5::thread_ap_block_pp0_stage0_01001() {
    ap_block_pp0_stage0_01001 = (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter10.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_flatten2_reg_470_pp0_iter9_reg.read()) && esl_seteq<1,1,1>(ap_const_logic_0, m_axi_weights_RVALID.read()));
}

void store_weights_5::thread_ap_block_pp0_stage0_11001() {
    ap_block_pp0_stage0_11001 = ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter3.read()) && 
  esl_seteq<1,1,1>(ap_const_boolean_1, ap_block_state5_io.read())) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter10.read()) && 
  esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_flatten2_reg_470_pp0_iter9_reg.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_0, m_axi_weights_RVALID.read())));
}

void store_weights_5::thread_ap_block_pp0_stage0_subdone() {
    ap_block_pp0_stage0_subdone = ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter3.read()) && 
  esl_seteq<1,1,1>(ap_const_boolean_1, ap_block_state5_io.read())) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter10.read()) && 
  esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_flatten2_reg_470_pp0_iter9_reg.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_0, m_axi_weights_RVALID.read())));
}

void store_weights_5::thread_ap_block_state10_pp0_stage0_iter8() {
    ap_block_state10_pp0_stage0_iter8 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void store_weights_5::thread_ap_block_state11_pp0_stage0_iter9() {
    ap_block_state11_pp0_stage0_iter9 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void store_weights_5::thread_ap_block_state12_pp0_stage0_iter10() {
    ap_block_state12_pp0_stage0_iter10 = (esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_flatten2_reg_470_pp0_iter9_reg.read()) && esl_seteq<1,1,1>(ap_const_logic_0, m_axi_weights_RVALID.read()));
}

void store_weights_5::thread_ap_block_state13_pp0_stage0_iter11() {
    ap_block_state13_pp0_stage0_iter11 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void store_weights_5::thread_ap_block_state2_pp0_stage0_iter0() {
    ap_block_state2_pp0_stage0_iter0 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void store_weights_5::thread_ap_block_state3_pp0_stage0_iter1() {
    ap_block_state3_pp0_stage0_iter1 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void store_weights_5::thread_ap_block_state4_pp0_stage0_iter2() {
    ap_block_state4_pp0_stage0_iter2 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void store_weights_5::thread_ap_block_state5_io() {
    ap_block_state5_io = (esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_flatten2_reg_470_pp0_iter2_reg.read()) && esl_seteq<1,1,1>(ap_const_logic_0, ap_sig_ioackin_m_axi_weights_ARREADY.read()));
}

void store_weights_5::thread_ap_block_state5_pp0_stage0_iter3() {
    ap_block_state5_pp0_stage0_iter3 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void store_weights_5::thread_ap_block_state6_pp0_stage0_iter4() {
    ap_block_state6_pp0_stage0_iter4 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void store_weights_5::thread_ap_block_state7_pp0_stage0_iter5() {
    ap_block_state7_pp0_stage0_iter5 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void store_weights_5::thread_ap_block_state8_pp0_stage0_iter6() {
    ap_block_state8_pp0_stage0_iter6 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void store_weights_5::thread_ap_block_state9_pp0_stage0_iter7() {
    ap_block_state9_pp0_stage0_iter7 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void store_weights_5::thread_ap_condition_pp0_exit_iter0_state2() {
    if (esl_seteq<1,1,1>(exitcond_flatten2_fu_200_p2.read(), ap_const_lv1_1)) {
        ap_condition_pp0_exit_iter0_state2 = ap_const_logic_1;
    } else {
        ap_condition_pp0_exit_iter0_state2 = ap_const_logic_0;
    }
}

void store_weights_5::thread_ap_done() {
    if (((esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read())) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state14.read()))) {
        ap_done = ap_const_logic_1;
    } else {
        ap_done = ap_const_logic_0;
    }
}

void store_weights_5::thread_ap_enable_pp0() {
    ap_enable_pp0 = (ap_idle_pp0.read() ^ ap_const_logic_1);
}

void store_weights_5::thread_ap_idle() {
    if ((esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()))) {
        ap_idle = ap_const_logic_1;
    } else {
        ap_idle = ap_const_logic_0;
    }
}

void store_weights_5::thread_ap_idle_pp0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter1.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter2.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter3.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter4.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter5.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter6.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter7.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter8.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter9.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter10.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter11.read()))) {
        ap_idle_pp0 = ap_const_logic_1;
    } else {
        ap_idle_pp0 = ap_const_logic_0;
    }
}

void store_weights_5::thread_ap_phi_mux_i_phi_fu_134_p4() {
    if ((esl_seteq<1,1,1>(ap_block_pp0_stage0.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_flatten2_reg_470.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()))) {
        ap_phi_mux_i_phi_fu_134_p4 = tmp_mid2_v_reg_479.read();
    } else {
        ap_phi_mux_i_phi_fu_134_p4 = i_reg_130.read();
    }
}

void store_weights_5::thread_ap_phi_mux_j_phi_fu_178_p4() {
    if ((esl_seteq<1,1,1>(ap_block_pp0_stage0.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_flatten2_reg_470.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()))) {
        ap_phi_mux_j_phi_fu_178_p4 = tmp_4_mid2_reg_496.read();
    } else {
        ap_phi_mux_j_phi_fu_178_p4 = j_reg_174.read();
    }
}

void store_weights_5::thread_ap_phi_mux_l_phi_fu_156_p4() {
    if ((esl_seteq<1,1,1>(ap_block_pp0_stage0.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_flatten2_reg_470.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()))) {
        ap_phi_mux_l_phi_fu_156_p4 = tmp_2_mid2_reg_485.read();
    } else {
        ap_phi_mux_l_phi_fu_156_p4 = l_reg_152.read();
    }
}

void store_weights_5::thread_ap_ready() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state14.read())) {
        ap_ready = ap_const_logic_1;
    } else {
        ap_ready = ap_const_logic_0;
    }
}

void store_weights_5::thread_ap_sig_ioackin_m_axi_weights_ARREADY() {
    if (esl_seteq<1,1,1>(ap_const_logic_0, ap_reg_ioackin_m_axi_weights_ARREADY.read())) {
        ap_sig_ioackin_m_axi_weights_ARREADY = m_axi_weights_ARREADY.read();
    } else {
        ap_sig_ioackin_m_axi_weights_ARREADY = ap_const_logic_1;
    }
}

void store_weights_5::thread_exitcond_flatten1_fu_258_p2() {
    exitcond_flatten1_fu_258_p2 = (!indvar_flatten_reg_163.read().is_01() || !ap_const_lv6_19.is_01())? sc_lv<1>(): sc_lv<1>(indvar_flatten_reg_163.read() == ap_const_lv6_19);
}

void store_weights_5::thread_exitcond_flatten2_fu_200_p2() {
    exitcond_flatten2_fu_200_p2 = (!indvar_flatten1_reg_119.read().is_01() || !ap_const_lv16_BB80.is_01())? sc_lv<1>(): sc_lv<1>(indvar_flatten1_reg_119.read() == ap_const_lv16_BB80);
}

void store_weights_5::thread_exitcond_flatten_fu_218_p2() {
    exitcond_flatten_fu_218_p2 = (!indvar_flatten2_reg_141.read().is_01() || !ap_const_lv10_190.is_01())? sc_lv<1>(): sc_lv<1>(indvar_flatten2_reg_141.read() == ap_const_lv10_190);
}

void store_weights_5::thread_exitcond_flatten_mid_fu_264_p2() {
    exitcond_flatten_mid_fu_264_p2 = (exitcond_flatten1_fu_258_p2.read() & not_exitcond_flatten_fu_240_p2.read());
}

void store_weights_5::thread_exitcond_flatten_not_fu_298_p2() {
    exitcond_flatten_not_fu_298_p2 = (exitcond_flatten1_fu_258_p2.read() ^ ap_const_lv1_1);
}

void store_weights_5::thread_exitcond_fu_246_p2() {
    exitcond_fu_246_p2 = (!k_reg_185.read().is_01() || !ap_const_lv3_5.is_01())? sc_lv<1>(): sc_lv<1>(k_reg_185.read() == ap_const_lv3_5);
}

void store_weights_5::thread_exitcond_mid1_fu_310_p2() {
    exitcond_mid1_fu_310_p2 = (exitcond_mid_fu_252_p2.read() & not_exitcond_flatten_1_fu_304_p2.read());
}

void store_weights_5::thread_exitcond_mid_fu_252_p2() {
    exitcond_mid_fu_252_p2 = (exitcond_fu_246_p2.read() & not_exitcond_flatten_fu_240_p2.read());
}

void store_weights_5::thread_i_1_fu_212_p2() {
    i_1_fu_212_p2 = (!ap_const_lv7_1.is_01() || !ap_phi_mux_i_phi_fu_134_p4.read().is_01())? sc_lv<7>(): (sc_biguint<7>(ap_const_lv7_1) + sc_biguint<7>(ap_phi_mux_i_phi_fu_134_p4.read()));
}

void store_weights_5::thread_indvar_flatten13_op_fu_370_p2() {
    indvar_flatten13_op_fu_370_p2 = (!ap_const_lv10_1.is_01() || !indvar_flatten2_reg_141.read().is_01())? sc_lv<10>(): (sc_biguint<10>(ap_const_lv10_1) + sc_biguint<10>(indvar_flatten2_reg_141.read()));
}

void store_weights_5::thread_indvar_flatten_next1_fu_376_p3() {
    indvar_flatten_next1_fu_376_p3 = (!exitcond_flatten_fu_218_p2.read()[0].is_01())? sc_lv<10>(): ((exitcond_flatten_fu_218_p2.read()[0].to_bool())? ap_const_lv10_1: indvar_flatten13_op_fu_370_p2.read());
}

void store_weights_5::thread_indvar_flatten_next2_fu_206_p2() {
    indvar_flatten_next2_fu_206_p2 = (!indvar_flatten1_reg_119.read().is_01() || !ap_const_lv16_1.is_01())? sc_lv<16>(): (sc_biguint<16>(indvar_flatten1_reg_119.read()) + sc_biguint<16>(ap_const_lv16_1));
}

void store_weights_5::thread_indvar_flatten_next_fu_362_p3() {
    indvar_flatten_next_fu_362_p3 = (!tmp_5_fu_276_p2.read()[0].is_01())? sc_lv<6>(): ((tmp_5_fu_276_p2.read()[0].to_bool())? ap_const_lv6_1: indvar_flatten_op_fu_356_p2.read());
}

void store_weights_5::thread_indvar_flatten_op_fu_356_p2() {
    indvar_flatten_op_fu_356_p2 = (!ap_const_lv6_1.is_01() || !indvar_flatten_reg_163.read().is_01())? sc_lv<6>(): (sc_biguint<6>(ap_const_lv6_1) + sc_biguint<6>(indvar_flatten_reg_163.read()));
}

void store_weights_5::thread_j_1_fu_316_p2() {
    j_1_fu_316_p2 = (!ap_const_lv3_1.is_01() || !j_mid_fu_282_p3.read().is_01())? sc_lv<3>(): (sc_biguint<3>(ap_const_lv3_1) + sc_biguint<3>(j_mid_fu_282_p3.read()));
}

void store_weights_5::thread_j_mid_fu_282_p3() {
    j_mid_fu_282_p3 = (!tmp_5_fu_276_p2.read()[0].is_01())? sc_lv<3>(): ((tmp_5_fu_276_p2.read()[0].to_bool())? ap_const_lv3_0: ap_phi_mux_j_phi_fu_178_p4.read());
}

void store_weights_5::thread_k_1_fu_350_p2() {
    k_1_fu_350_p2 = (!ap_const_lv3_1.is_01() || !k_mid2_fu_334_p3.read().is_01())? sc_lv<3>(): (sc_biguint<3>(ap_const_lv3_1) + sc_biguint<3>(k_mid2_fu_334_p3.read()));
}

void store_weights_5::thread_k_mid2_fu_334_p3() {
    k_mid2_fu_334_p3 = (!tmp_3_fu_328_p2.read()[0].is_01())? sc_lv<3>(): ((tmp_3_fu_328_p2.read()[0].to_bool())? ap_const_lv3_0: k_reg_185.read());
}

void store_weights_5::thread_l_1_fu_270_p2() {
    l_1_fu_270_p2 = (!ap_const_lv5_1.is_01() || !l_mid_fu_224_p3.read().is_01())? sc_lv<5>(): (sc_biguint<5>(ap_const_lv5_1) + sc_biguint<5>(l_mid_fu_224_p3.read()));
}

void store_weights_5::thread_l_mid_fu_224_p3() {
    l_mid_fu_224_p3 = (!exitcond_flatten_fu_218_p2.read()[0].is_01())? sc_lv<5>(): ((exitcond_flatten_fu_218_p2.read()[0].to_bool())? ap_const_lv5_0: ap_phi_mux_l_phi_fu_156_p4.read());
}

void store_weights_5::thread_m_axi_weights_ARADDR() {
    m_axi_weights_ARADDR = weights_addr_reg_528.read();
}

void store_weights_5::thread_m_axi_weights_ARBURST() {
    m_axi_weights_ARBURST = ap_const_lv2_0;
}

void store_weights_5::thread_m_axi_weights_ARCACHE() {
    m_axi_weights_ARCACHE = ap_const_lv4_0;
}

void store_weights_5::thread_m_axi_weights_ARID() {
    m_axi_weights_ARID = ap_const_lv1_0;
}

void store_weights_5::thread_m_axi_weights_ARLEN() {
    m_axi_weights_ARLEN = ap_const_lv32_1;
}

void store_weights_5::thread_m_axi_weights_ARLOCK() {
    m_axi_weights_ARLOCK = ap_const_lv2_0;
}

void store_weights_5::thread_m_axi_weights_ARPROT() {
    m_axi_weights_ARPROT = ap_const_lv3_0;
}

void store_weights_5::thread_m_axi_weights_ARQOS() {
    m_axi_weights_ARQOS = ap_const_lv4_0;
}

void store_weights_5::thread_m_axi_weights_ARREGION() {
    m_axi_weights_ARREGION = ap_const_lv4_0;
}

void store_weights_5::thread_m_axi_weights_ARSIZE() {
    m_axi_weights_ARSIZE = ap_const_lv3_0;
}

void store_weights_5::thread_m_axi_weights_ARUSER() {
    m_axi_weights_ARUSER = ap_const_lv1_0;
}

void store_weights_5::thread_m_axi_weights_ARVALID() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter3.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_flatten2_reg_470_pp0_iter2_reg.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_01001.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_reg_ioackin_m_axi_weights_ARREADY.read()))) {
        m_axi_weights_ARVALID = ap_const_logic_1;
    } else {
        m_axi_weights_ARVALID = ap_const_logic_0;
    }
}

void store_weights_5::thread_m_axi_weights_AWADDR() {
    m_axi_weights_AWADDR = ap_const_lv32_0;
}

void store_weights_5::thread_m_axi_weights_AWBURST() {
    m_axi_weights_AWBURST = ap_const_lv2_0;
}

void store_weights_5::thread_m_axi_weights_AWCACHE() {
    m_axi_weights_AWCACHE = ap_const_lv4_0;
}

void store_weights_5::thread_m_axi_weights_AWID() {
    m_axi_weights_AWID = ap_const_lv1_0;
}

void store_weights_5::thread_m_axi_weights_AWLEN() {
    m_axi_weights_AWLEN = ap_const_lv32_0;
}

void store_weights_5::thread_m_axi_weights_AWLOCK() {
    m_axi_weights_AWLOCK = ap_const_lv2_0;
}

void store_weights_5::thread_m_axi_weights_AWPROT() {
    m_axi_weights_AWPROT = ap_const_lv3_0;
}

void store_weights_5::thread_m_axi_weights_AWQOS() {
    m_axi_weights_AWQOS = ap_const_lv4_0;
}

void store_weights_5::thread_m_axi_weights_AWREGION() {
    m_axi_weights_AWREGION = ap_const_lv4_0;
}

void store_weights_5::thread_m_axi_weights_AWSIZE() {
    m_axi_weights_AWSIZE = ap_const_lv3_0;
}

void store_weights_5::thread_m_axi_weights_AWUSER() {
    m_axi_weights_AWUSER = ap_const_lv1_0;
}

void store_weights_5::thread_m_axi_weights_AWVALID() {
    m_axi_weights_AWVALID = ap_const_logic_0;
}

void store_weights_5::thread_m_axi_weights_BREADY() {
    m_axi_weights_BREADY = ap_const_logic_0;
}

void store_weights_5::thread_m_axi_weights_RREADY() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter10.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_flatten2_reg_470_pp0_iter9_reg.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0))) {
        m_axi_weights_RREADY = ap_const_logic_1;
    } else {
        m_axi_weights_RREADY = ap_const_logic_0;
    }
}

void store_weights_5::thread_m_axi_weights_WDATA() {
    m_axi_weights_WDATA = ap_const_lv32_0;
}

void store_weights_5::thread_m_axi_weights_WID() {
    m_axi_weights_WID = ap_const_lv1_0;
}

void store_weights_5::thread_m_axi_weights_WLAST() {
    m_axi_weights_WLAST = ap_const_logic_0;
}

void store_weights_5::thread_m_axi_weights_WSTRB() {
    m_axi_weights_WSTRB = ap_const_lv4_0;
}

void store_weights_5::thread_m_axi_weights_WUSER() {
    m_axi_weights_WUSER = ap_const_lv1_0;
}

void store_weights_5::thread_m_axi_weights_WVALID() {
    m_axi_weights_WVALID = ap_const_logic_0;
}

void store_weights_5::thread_not_exitcond_flatten_1_fu_304_p2() {
    not_exitcond_flatten_1_fu_304_p2 = (exitcond_flatten_fu_218_p2.read() | exitcond_flatten_not_fu_298_p2.read());
}

void store_weights_5::thread_not_exitcond_flatten_fu_240_p2() {
    not_exitcond_flatten_fu_240_p2 = (exitcond_flatten_fu_218_p2.read() ^ ap_const_lv1_1);
}

void store_weights_5::thread_p_shl1_fu_416_p1() {
    p_shl1_fu_416_p1 = esl_zext<64,14>(tmp_2_fu_408_p3.read());
}

void store_weights_5::thread_sext_fu_196_p1() {
    sext_fu_196_p1 = esl_zext<64,30>(weights_offset.read());
}

void store_weights_5::thread_sum_fu_454_p2() {
    sum_fu_454_p2 = (!sext_reg_465.read().is_01() || !tmp_11_fu_448_p2.read().is_01())? sc_lv<64>(): (sc_biguint<64>(sext_reg_465.read()) + sc_biguint<64>(tmp_11_fu_448_p2.read()));
}

void store_weights_5::thread_tmp_10_fu_440_p2() {
    tmp_10_fu_440_p2 = (!tmp_4_reg_517.read().is_01() || !tmp_8_fu_435_p2.read().is_01())? sc_lv<64>(): (sc_biguint<64>(tmp_4_reg_517.read()) + sc_biguint<64>(tmp_8_fu_435_p2.read()));
}

void store_weights_5::thread_tmp_11_fu_448_p2() {
    tmp_11_fu_448_p2 = (!tmp_10_fu_440_p2.read().is_01() || !tmp_6_fu_445_p1.read().is_01())? sc_lv<64>(): (sc_biguint<64>(tmp_10_fu_440_p2.read()) + sc_biguint<64>(tmp_6_fu_445_p1.read()));
}

void store_weights_5::thread_tmp_2_fu_408_p3() {
    tmp_2_fu_408_p3 = esl_concat<12,2>(tmp_7_fu_398_p2.read(), ap_const_lv2_0);
}

void store_weights_5::thread_tmp_2_mid2_cast_fu_395_p1() {
    tmp_2_mid2_cast_fu_395_p1 = esl_zext<12,5>(tmp_2_mid2_reg_485.read());
}

void store_weights_5::thread_tmp_2_mid2_fu_290_p3() {
    tmp_2_mid2_fu_290_p3 = (!exitcond_flatten_mid_fu_264_p2.read()[0].is_01())? sc_lv<5>(): ((exitcond_flatten_mid_fu_264_p2.read()[0].to_bool())? l_1_fu_270_p2.read(): l_mid_fu_224_p3.read());
}

void store_weights_5::thread_tmp_3_cast_fu_391_p1() {
    tmp_3_cast_fu_391_p1 = esl_zext<12,11>(tmp_fu_384_p3.read());
}

void store_weights_5::thread_tmp_3_fu_328_p2() {
    tmp_3_fu_328_p2 = (tmp_s_fu_322_p2.read() | exitcond_flatten_fu_218_p2.read());
}

void store_weights_5::thread_tmp_4_fu_429_p2() {
    tmp_4_fu_429_p2 = (!tmp_9_fu_420_p2.read().is_01() || !tmp_4_mid2_cast_fu_426_p1.read().is_01())? sc_lv<64>(): (sc_biguint<64>(tmp_9_fu_420_p2.read()) + sc_biguint<64>(tmp_4_mid2_cast_fu_426_p1.read()));
}

void store_weights_5::thread_tmp_4_mid2_cast_fu_426_p1() {
    tmp_4_mid2_cast_fu_426_p1 = esl_zext<64,3>(tmp_4_mid2_reg_496.read());
}

void store_weights_5::thread_tmp_4_mid2_fu_342_p3() {
    tmp_4_mid2_fu_342_p3 = (!exitcond_mid1_fu_310_p2.read()[0].is_01())? sc_lv<3>(): ((exitcond_mid1_fu_310_p2.read()[0].to_bool())? j_1_fu_316_p2.read(): j_mid_fu_282_p3.read());
}

void store_weights_5::thread_tmp_5_fu_276_p2() {
    tmp_5_fu_276_p2 = (exitcond_flatten_mid_fu_264_p2.read() | exitcond_flatten_fu_218_p2.read());
}

void store_weights_5::thread_tmp_6_fu_445_p1() {
    tmp_6_fu_445_p1 = esl_zext<64,3>(k_mid2_reg_491_pp0_iter1_reg.read());
}

void store_weights_5::thread_tmp_7_cast_fu_404_p1() {
    tmp_7_cast_fu_404_p1 = esl_zext<64,12>(tmp_7_fu_398_p2.read());
}

void store_weights_5::thread_tmp_7_fu_398_p2() {
    tmp_7_fu_398_p2 = (!tmp_3_cast_fu_391_p1.read().is_01() || !tmp_2_mid2_cast_fu_395_p1.read().is_01())? sc_lv<12>(): (sc_biguint<12>(tmp_3_cast_fu_391_p1.read()) + sc_biguint<12>(tmp_2_mid2_cast_fu_395_p1.read()));
}

void store_weights_5::thread_tmp_8_fu_435_p2() {
    tmp_8_fu_435_p2 = (!ap_const_lv64_2.is_01())? sc_lv<64>(): tmp_4_reg_517.read() << (unsigned short)ap_const_lv64_2.to_uint();
}

void store_weights_5::thread_tmp_9_fu_420_p2() {
    tmp_9_fu_420_p2 = (!tmp_7_cast_fu_404_p1.read().is_01() || !p_shl1_fu_416_p1.read().is_01())? sc_lv<64>(): (sc_biguint<64>(tmp_7_cast_fu_404_p1.read()) + sc_biguint<64>(p_shl1_fu_416_p1.read()));
}

void store_weights_5::thread_tmp_fu_384_p3() {
    tmp_fu_384_p3 = esl_concat<7,4>(tmp_mid2_v_reg_479.read(), ap_const_lv4_0);
}

void store_weights_5::thread_tmp_mid2_v_fu_232_p3() {
    tmp_mid2_v_fu_232_p3 = (!exitcond_flatten_fu_218_p2.read()[0].is_01())? sc_lv<7>(): ((exitcond_flatten_fu_218_p2.read()[0].to_bool())? i_1_fu_212_p2.read(): ap_phi_mux_i_phi_fu_134_p4.read());
}

void store_weights_5::thread_tmp_s_fu_322_p2() {
    tmp_s_fu_322_p2 = (exitcond_mid1_fu_310_p2.read() | exitcond_flatten_mid_fu_264_p2.read());
}

void store_weights_5::thread_weights_blk_n_AR() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter3.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_flatten2_reg_470_pp0_iter2_reg.read()))) {
        weights_blk_n_AR = m_axi_weights_ARREADY.read();
    } else {
        weights_blk_n_AR = ap_const_logic_1;
    }
}

void store_weights_5::thread_weights_blk_n_R() {
    if ((esl_seteq<1,1,1>(ap_block_pp0_stage0.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter10.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_flatten2_reg_470_pp0_iter9_reg.read()))) {
        weights_blk_n_R = m_axi_weights_RVALID.read();
    } else {
        weights_blk_n_R = ap_const_logic_1;
    }
}

void store_weights_5::thread_weights_oc_address0() {
    weights_oc_address0 =  (sc_lv<16>) (tmp_11_reg_523_pp0_iter10_reg.read());
}

void store_weights_5::thread_weights_oc_ce0() {
    if ((esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_enable_reg_pp0_iter11.read(), ap_const_logic_1))) {
        weights_oc_ce0 = ap_const_logic_1;
    } else {
        weights_oc_ce0 = ap_const_logic_0;
    }
}

void store_weights_5::thread_weights_oc_d0() {
    weights_oc_d0 = weights_addr_read_reg_534.read();
}

void store_weights_5::thread_weights_oc_we0() {
    if ((esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_enable_reg_pp0_iter11.read(), ap_const_logic_1) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_flatten2_reg_470_pp0_iter10_reg.read()))) {
        weights_oc_we0 = ap_const_logic_1;
    } else {
        weights_oc_we0 = ap_const_logic_0;
    }
}

void store_weights_5::thread_ap_NS_fsm() {
    switch (ap_CS_fsm.read().to_uint64()) {
        case 1 : 
            if ((esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1) && esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()))) {
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            } else {
                ap_NS_fsm = ap_ST_fsm_state1;
            }
            break;
        case 2 : 
            if ((!(esl_seteq<1,1,1>(ap_enable_reg_pp0_iter1.read(), ap_const_logic_0) && esl_seteq<1,1,1>(ap_const_boolean_0, ap_block_pp0_stage0_subdone.read()) && esl_seteq<1,1,1>(ap_enable_reg_pp0_iter0.read(), ap_const_logic_1) && esl_seteq<1,1,1>(exitcond_flatten2_fu_200_p2.read(), ap_const_lv1_1)) && !(esl_seteq<1,1,1>(ap_enable_reg_pp0_iter10.read(), ap_const_logic_0) && esl_seteq<1,1,1>(ap_const_boolean_0, ap_block_pp0_stage0_subdone.read()) && esl_seteq<1,1,1>(ap_enable_reg_pp0_iter11.read(), ap_const_logic_1)))) {
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            } else if (((esl_seteq<1,1,1>(ap_enable_reg_pp0_iter10.read(), ap_const_logic_0) && 
  esl_seteq<1,1,1>(ap_const_boolean_0, ap_block_pp0_stage0_subdone.read()) && 
  esl_seteq<1,1,1>(ap_enable_reg_pp0_iter11.read(), ap_const_logic_1)) || (esl_seteq<1,1,1>(ap_enable_reg_pp0_iter1.read(), ap_const_logic_0) && 
  esl_seteq<1,1,1>(ap_const_boolean_0, ap_block_pp0_stage0_subdone.read()) && 
  esl_seteq<1,1,1>(ap_enable_reg_pp0_iter0.read(), ap_const_logic_1) && 
  esl_seteq<1,1,1>(exitcond_flatten2_fu_200_p2.read(), ap_const_lv1_1)))) {
                ap_NS_fsm = ap_ST_fsm_state14;
            } else {
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            }
            break;
        case 4 : 
            ap_NS_fsm = ap_ST_fsm_state1;
            break;
        default : 
            ap_NS_fsm = "XXX";
            break;
    }
}

}

