// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2018.2
// Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#include "store_weights_5.h"
#include "AESL_pkg.h"

using namespace std;

namespace ap_rtl {

const sc_logic store_weights_5::ap_const_logic_1 = sc_dt::Log_1;
const sc_logic store_weights_5::ap_const_logic_0 = sc_dt::Log_0;
const sc_lv<3> store_weights_5::ap_ST_fsm_state1 = "1";
const sc_lv<3> store_weights_5::ap_ST_fsm_pp0_stage0 = "10";
const sc_lv<3> store_weights_5::ap_ST_fsm_state14 = "100";
const bool store_weights_5::ap_const_boolean_1 = true;
const sc_lv<32> store_weights_5::ap_const_lv32_0 = "00000000000000000000000000000000";
const sc_lv<1> store_weights_5::ap_const_lv1_0 = "0";
const sc_lv<3> store_weights_5::ap_const_lv3_0 = "000";
const sc_lv<2> store_weights_5::ap_const_lv2_0 = "00";
const sc_lv<4> store_weights_5::ap_const_lv4_0 = "0000";
const bool store_weights_5::ap_const_boolean_0 = false;
const sc_lv<32> store_weights_5::ap_const_lv32_1 = "1";
const sc_lv<1> store_weights_5::ap_const_lv1_1 = "1";
const sc_lv<12> store_weights_5::ap_const_lv12_0 = "000000000000";
const sc_lv<7> store_weights_5::ap_const_lv7_0 = "0000000";
const sc_lv<6> store_weights_5::ap_const_lv6_0 = "000000";
const sc_lv<12> store_weights_5::ap_const_lv12_BB8 = "101110111000";
const sc_lv<12> store_weights_5::ap_const_lv12_1 = "1";
const sc_lv<7> store_weights_5::ap_const_lv7_1 = "1";
const sc_lv<6> store_weights_5::ap_const_lv6_19 = "11001";
const sc_lv<3> store_weights_5::ap_const_lv3_5 = "101";
const sc_lv<3> store_weights_5::ap_const_lv3_1 = "1";
const sc_lv<6> store_weights_5::ap_const_lv6_1 = "1";
const sc_lv<64> store_weights_5::ap_const_lv64_2 = "10";
const sc_lv<32> store_weights_5::ap_const_lv32_2 = "10";

store_weights_5::store_weights_5(sc_module_name name) : sc_module(name), mVcdFile(0) {

    SC_METHOD(thread_ap_clk_no_reset_);
    dont_initialize();
    sensitive << ( ap_clk.pos() );

    SC_METHOD(thread_ap_CS_fsm_pp0_stage0);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state1);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state14);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_block_pp0_stage0);

    SC_METHOD(thread_ap_block_pp0_stage0_01001);
    sensitive << ( m_axi_weights_RVALID );
    sensitive << ( ap_enable_reg_pp0_iter10 );
    sensitive << ( exitcond_flatten1_reg_442_pp0_iter9_reg );

    SC_METHOD(thread_ap_block_pp0_stage0_11001);
    sensitive << ( m_axi_weights_RVALID );
    sensitive << ( ap_enable_reg_pp0_iter3 );
    sensitive << ( ap_enable_reg_pp0_iter10 );
    sensitive << ( exitcond_flatten1_reg_442_pp0_iter9_reg );
    sensitive << ( ap_block_state5_io );

    SC_METHOD(thread_ap_block_pp0_stage0_subdone);
    sensitive << ( m_axi_weights_RVALID );
    sensitive << ( ap_enable_reg_pp0_iter3 );
    sensitive << ( ap_enable_reg_pp0_iter10 );
    sensitive << ( exitcond_flatten1_reg_442_pp0_iter9_reg );
    sensitive << ( ap_block_state5_io );

    SC_METHOD(thread_ap_block_state10_pp0_stage0_iter8);

    SC_METHOD(thread_ap_block_state11_pp0_stage0_iter9);

    SC_METHOD(thread_ap_block_state12_pp0_stage0_iter10);
    sensitive << ( m_axi_weights_RVALID );
    sensitive << ( exitcond_flatten1_reg_442_pp0_iter9_reg );

    SC_METHOD(thread_ap_block_state13_pp0_stage0_iter11);

    SC_METHOD(thread_ap_block_state2_pp0_stage0_iter0);

    SC_METHOD(thread_ap_block_state3_pp0_stage0_iter1);

    SC_METHOD(thread_ap_block_state4_pp0_stage0_iter2);

    SC_METHOD(thread_ap_block_state5_io);
    sensitive << ( exitcond_flatten1_reg_442_pp0_iter2_reg );
    sensitive << ( ap_sig_ioackin_m_axi_weights_ARREADY );

    SC_METHOD(thread_ap_block_state5_pp0_stage0_iter3);

    SC_METHOD(thread_ap_block_state6_pp0_stage0_iter4);

    SC_METHOD(thread_ap_block_state7_pp0_stage0_iter5);

    SC_METHOD(thread_ap_block_state8_pp0_stage0_iter6);

    SC_METHOD(thread_ap_block_state9_pp0_stage0_iter7);

    SC_METHOD(thread_ap_condition_pp0_exit_iter0_state2);
    sensitive << ( exitcond_flatten1_fu_186_p2 );

    SC_METHOD(thread_ap_done);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( ap_CS_fsm_state14 );

    SC_METHOD(thread_ap_enable_pp0);
    sensitive << ( ap_idle_pp0 );

    SC_METHOD(thread_ap_idle);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );

    SC_METHOD(thread_ap_idle_pp0);
    sensitive << ( ap_enable_reg_pp0_iter3 );
    sensitive << ( ap_enable_reg_pp0_iter10 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_enable_reg_pp0_iter2 );
    sensitive << ( ap_enable_reg_pp0_iter4 );
    sensitive << ( ap_enable_reg_pp0_iter5 );
    sensitive << ( ap_enable_reg_pp0_iter6 );
    sensitive << ( ap_enable_reg_pp0_iter7 );
    sensitive << ( ap_enable_reg_pp0_iter8 );
    sensitive << ( ap_enable_reg_pp0_iter9 );
    sensitive << ( ap_enable_reg_pp0_iter11 );

    SC_METHOD(thread_ap_phi_mux_i_phi_fu_138_p4);
    sensitive << ( ap_block_pp0_stage0 );
    sensitive << ( exitcond_flatten1_reg_442 );
    sensitive << ( i_reg_134 );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( tmp_1_mid2_v_reg_451 );
    sensitive << ( ap_enable_reg_pp0_iter1 );

    SC_METHOD(thread_ap_phi_mux_j_phi_fu_160_p4);
    sensitive << ( ap_block_pp0_stage0 );
    sensitive << ( exitcond_flatten1_reg_442 );
    sensitive << ( j_reg_156 );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( tmp_3_mid2_reg_465 );
    sensitive << ( ap_enable_reg_pp0_iter1 );

    SC_METHOD(thread_ap_ready);
    sensitive << ( ap_CS_fsm_state14 );

    SC_METHOD(thread_ap_sig_ioackin_m_axi_weights_ARREADY);
    sensitive << ( m_axi_weights_ARREADY );
    sensitive << ( ap_reg_ioackin_m_axi_weights_ARREADY );

    SC_METHOD(thread_exitcond_flatten1_fu_186_p2);
    sensitive << ( indvar_flatten1_reg_123 );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( ap_enable_reg_pp0_iter0 );

    SC_METHOD(thread_exitcond_flatten_fu_204_p2);
    sensitive << ( indvar_flatten_reg_145 );
    sensitive << ( exitcond_flatten1_fu_186_p2 );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( ap_enable_reg_pp0_iter0 );

    SC_METHOD(thread_exitcond_fu_232_p2);
    sensitive << ( k_reg_167 );
    sensitive << ( exitcond_flatten1_fu_186_p2 );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( ap_enable_reg_pp0_iter0 );

    SC_METHOD(thread_exitcond_mid_fu_238_p2);
    sensitive << ( exitcond_fu_232_p2 );
    sensitive << ( not_exitcond_flatten_fu_226_p2 );

    SC_METHOD(thread_i_1_fu_198_p2);
    sensitive << ( ap_phi_mux_i_phi_fu_138_p4 );

    SC_METHOD(thread_indvar_flatten_next1_fu_192_p2);
    sensitive << ( indvar_flatten1_reg_123 );

    SC_METHOD(thread_indvar_flatten_next_fu_284_p3);
    sensitive << ( exitcond_flatten_fu_204_p2 );
    sensitive << ( indvar_flatten_op_fu_278_p2 );

    SC_METHOD(thread_indvar_flatten_op_fu_278_p2);
    sensitive << ( indvar_flatten_reg_145 );

    SC_METHOD(thread_j_1_fu_244_p2);
    sensitive << ( j_mid_fu_210_p3 );

    SC_METHOD(thread_j_mid_fu_210_p3);
    sensitive << ( ap_phi_mux_j_phi_fu_160_p4 );
    sensitive << ( exitcond_flatten_fu_204_p2 );

    SC_METHOD(thread_k_1_fu_272_p2);
    sensitive << ( k_mid2_fu_256_p3 );

    SC_METHOD(thread_k_mid2_fu_256_p3);
    sensitive << ( k_reg_167 );
    sensitive << ( tmp_3_fu_250_p2 );

    SC_METHOD(thread_m_axi_weights_ARADDR);
    sensitive << ( ap_enable_reg_pp0_iter3 );
    sensitive << ( exitcond_flatten1_reg_442_pp0_iter2_reg );
    sensitive << ( weights_addr_reg_488 );
    sensitive << ( ap_reg_ioackin_m_axi_weights_ARREADY );
    sensitive << ( ap_block_pp0_stage0_01001 );

    SC_METHOD(thread_m_axi_weights_ARBURST);

    SC_METHOD(thread_m_axi_weights_ARCACHE);

    SC_METHOD(thread_m_axi_weights_ARID);

    SC_METHOD(thread_m_axi_weights_ARLEN);
    sensitive << ( ap_enable_reg_pp0_iter3 );
    sensitive << ( exitcond_flatten1_reg_442_pp0_iter2_reg );
    sensitive << ( ap_reg_ioackin_m_axi_weights_ARREADY );
    sensitive << ( ap_block_pp0_stage0_01001 );

    SC_METHOD(thread_m_axi_weights_ARLOCK);

    SC_METHOD(thread_m_axi_weights_ARPROT);

    SC_METHOD(thread_m_axi_weights_ARQOS);

    SC_METHOD(thread_m_axi_weights_ARREGION);

    SC_METHOD(thread_m_axi_weights_ARSIZE);

    SC_METHOD(thread_m_axi_weights_ARUSER);

    SC_METHOD(thread_m_axi_weights_ARVALID);
    sensitive << ( ap_enable_reg_pp0_iter3 );
    sensitive << ( exitcond_flatten1_reg_442_pp0_iter2_reg );
    sensitive << ( ap_reg_ioackin_m_axi_weights_ARREADY );
    sensitive << ( ap_block_pp0_stage0_01001 );

    SC_METHOD(thread_m_axi_weights_AWADDR);

    SC_METHOD(thread_m_axi_weights_AWBURST);

    SC_METHOD(thread_m_axi_weights_AWCACHE);

    SC_METHOD(thread_m_axi_weights_AWID);

    SC_METHOD(thread_m_axi_weights_AWLEN);

    SC_METHOD(thread_m_axi_weights_AWLOCK);

    SC_METHOD(thread_m_axi_weights_AWPROT);

    SC_METHOD(thread_m_axi_weights_AWQOS);

    SC_METHOD(thread_m_axi_weights_AWREGION);

    SC_METHOD(thread_m_axi_weights_AWSIZE);

    SC_METHOD(thread_m_axi_weights_AWUSER);

    SC_METHOD(thread_m_axi_weights_AWVALID);

    SC_METHOD(thread_m_axi_weights_BREADY);

    SC_METHOD(thread_m_axi_weights_RREADY);
    sensitive << ( ap_enable_reg_pp0_iter10 );
    sensitive << ( exitcond_flatten1_reg_442_pp0_iter9_reg );
    sensitive << ( ap_block_pp0_stage0_11001 );

    SC_METHOD(thread_m_axi_weights_WDATA);

    SC_METHOD(thread_m_axi_weights_WID);

    SC_METHOD(thread_m_axi_weights_WLAST);

    SC_METHOD(thread_m_axi_weights_WSTRB);

    SC_METHOD(thread_m_axi_weights_WUSER);

    SC_METHOD(thread_m_axi_weights_WVALID);

    SC_METHOD(thread_not_exitcond_flatten_fu_226_p2);
    sensitive << ( exitcond_flatten_fu_204_p2 );

    SC_METHOD(thread_p_shl2_cast_fu_379_p1);
    sensitive << ( tmp_9_fu_372_p3 );

    SC_METHOD(thread_p_shl3_fu_320_p1);
    sensitive << ( tmp_fu_312_p3 );

    SC_METHOD(thread_p_shl_cast_fu_408_p1);
    sensitive << ( tmp_12_fu_401_p3 );

    SC_METHOD(thread_sext_fu_182_p1);
    sensitive << ( weights_offset );

    SC_METHOD(thread_sum_fu_358_p2);
    sensitive << ( sext_reg_437 );
    sensitive << ( tmp_14_fu_352_p2 );

    SC_METHOD(thread_tmp_10_fu_344_p2);
    sensitive << ( tmp_4_reg_482 );
    sensitive << ( tmp_7_fu_339_p2 );

    SC_METHOD(thread_tmp_11_fu_392_p2);
    sensitive << ( tmp_s_fu_383_p2 );
    sensitive << ( tmp_3_mid2_cast1_fu_389_p1 );

    SC_METHOD(thread_tmp_12_fu_401_p3);
    sensitive << ( tmp_11_reg_494 );

    SC_METHOD(thread_tmp_13_fu_412_p2);
    sensitive << ( tmp_15_cast_fu_398_p1 );
    sensitive << ( p_shl_cast_fu_408_p1 );

    SC_METHOD(thread_tmp_14_fu_352_p2);
    sensitive << ( tmp_10_fu_344_p2 );
    sensitive << ( tmp_5_fu_349_p1 );

    SC_METHOD(thread_tmp_15_cast_fu_398_p1);
    sensitive << ( tmp_11_reg_494 );

    SC_METHOD(thread_tmp_15_fu_421_p2);
    sensitive << ( tmp_13_fu_412_p2 );
    sensitive << ( tmp_5_cast_fu_418_p1 );

    SC_METHOD(thread_tmp_19_cast_fu_427_p1);
    sensitive << ( tmp_15_fu_421_p2 );

    SC_METHOD(thread_tmp_1_fu_292_p3);
    sensitive << ( tmp_1_mid2_v_reg_451 );

    SC_METHOD(thread_tmp_1_mid2_cast_fu_369_p1);
    sensitive << ( tmp_1_mid2_v_reg_451_pp0_iter9_reg );

    SC_METHOD(thread_tmp_1_mid2_v_fu_218_p3);
    sensitive << ( ap_phi_mux_i_phi_fu_138_p4 );
    sensitive << ( exitcond_flatten_fu_204_p2 );
    sensitive << ( i_1_fu_198_p2 );

    SC_METHOD(thread_tmp_3_fu_250_p2);
    sensitive << ( exitcond_flatten_fu_204_p2 );
    sensitive << ( exitcond_mid_fu_238_p2 );

    SC_METHOD(thread_tmp_3_mid2_cast1_fu_389_p1);
    sensitive << ( tmp_3_mid2_reg_465_pp0_iter9_reg );

    SC_METHOD(thread_tmp_3_mid2_cast_fu_330_p1);
    sensitive << ( tmp_3_mid2_reg_465 );

    SC_METHOD(thread_tmp_3_mid2_fu_264_p3);
    sensitive << ( j_mid_fu_210_p3 );
    sensitive << ( exitcond_mid_fu_238_p2 );
    sensitive << ( j_1_fu_244_p2 );

    SC_METHOD(thread_tmp_4_cast_fu_299_p1);
    sensitive << ( tmp_1_fu_292_p3 );

    SC_METHOD(thread_tmp_4_fu_333_p2);
    sensitive << ( tmp_8_fu_324_p2 );
    sensitive << ( tmp_3_mid2_cast_fu_330_p1 );

    SC_METHOD(thread_tmp_5_cast_fu_418_p1);
    sensitive << ( k_mid2_reg_459_pp0_iter10_reg );

    SC_METHOD(thread_tmp_5_fu_349_p1);
    sensitive << ( k_mid2_reg_459_pp0_iter1_reg );

    SC_METHOD(thread_tmp_6_cast_fu_308_p1);
    sensitive << ( tmp_6_fu_303_p2 );

    SC_METHOD(thread_tmp_6_fu_303_p2);
    sensitive << ( tmp_cast_reg_432 );
    sensitive << ( tmp_4_cast_fu_299_p1 );

    SC_METHOD(thread_tmp_7_fu_339_p2);
    sensitive << ( tmp_4_reg_482 );

    SC_METHOD(thread_tmp_8_fu_324_p2);
    sensitive << ( tmp_6_cast_fu_308_p1 );
    sensitive << ( p_shl3_fu_320_p1 );

    SC_METHOD(thread_tmp_9_fu_372_p3);
    sensitive << ( tmp_1_mid2_v_reg_451_pp0_iter9_reg );

    SC_METHOD(thread_tmp_cast_fu_178_p1);
    sensitive << ( input_channel );

    SC_METHOD(thread_tmp_fu_312_p3);
    sensitive << ( tmp_6_fu_303_p2 );

    SC_METHOD(thread_tmp_s_fu_383_p2);
    sensitive << ( tmp_1_mid2_cast_fu_369_p1 );
    sensitive << ( p_shl2_cast_fu_379_p1 );

    SC_METHOD(thread_weights_blk_n_AR);
    sensitive << ( m_axi_weights_ARREADY );
    sensitive << ( ap_enable_reg_pp0_iter3 );
    sensitive << ( ap_block_pp0_stage0 );
    sensitive << ( exitcond_flatten1_reg_442_pp0_iter2_reg );

    SC_METHOD(thread_weights_blk_n_R);
    sensitive << ( m_axi_weights_RVALID );
    sensitive << ( ap_block_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter10 );
    sensitive << ( exitcond_flatten1_reg_442_pp0_iter9_reg );

    SC_METHOD(thread_weights_oc_address0);
    sensitive << ( ap_block_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter11 );
    sensitive << ( tmp_19_cast_fu_427_p1 );

    SC_METHOD(thread_weights_oc_ce0);
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( ap_enable_reg_pp0_iter11 );

    SC_METHOD(thread_weights_oc_d0);
    sensitive << ( ap_block_pp0_stage0 );
    sensitive << ( weights_addr_read_reg_500 );
    sensitive << ( ap_enable_reg_pp0_iter11 );

    SC_METHOD(thread_weights_oc_we0);
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( exitcond_flatten1_reg_442_pp0_iter10_reg );
    sensitive << ( ap_enable_reg_pp0_iter11 );

    SC_METHOD(thread_ap_NS_fsm);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( ap_enable_reg_pp0_iter10 );
    sensitive << ( exitcond_flatten1_fu_186_p2 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_block_pp0_stage0_subdone );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_enable_reg_pp0_iter11 );

    ap_CS_fsm = "001";
    ap_enable_reg_pp0_iter3 = SC_LOGIC_0;
    ap_enable_reg_pp0_iter10 = SC_LOGIC_0;
    ap_enable_reg_pp0_iter0 = SC_LOGIC_0;
    ap_enable_reg_pp0_iter1 = SC_LOGIC_0;
    ap_enable_reg_pp0_iter2 = SC_LOGIC_0;
    ap_enable_reg_pp0_iter4 = SC_LOGIC_0;
    ap_enable_reg_pp0_iter5 = SC_LOGIC_0;
    ap_enable_reg_pp0_iter6 = SC_LOGIC_0;
    ap_enable_reg_pp0_iter7 = SC_LOGIC_0;
    ap_enable_reg_pp0_iter8 = SC_LOGIC_0;
    ap_enable_reg_pp0_iter9 = SC_LOGIC_0;
    ap_enable_reg_pp0_iter11 = SC_LOGIC_0;
    ap_reg_ioackin_m_axi_weights_ARREADY = SC_LOGIC_0;
    static int apTFileNum = 0;
    stringstream apTFilenSS;
    apTFilenSS << "store_weights_5_sc_trace_" << apTFileNum ++;
    string apTFn = apTFilenSS.str();
    mVcdFile = sc_create_vcd_trace_file(apTFn.c_str());
    mVcdFile->set_time_unit(1, SC_PS);
    if (1) {
#ifdef __HLS_TRACE_LEVEL_PORT_HIER__
    sc_trace(mVcdFile, ap_clk, "(port)ap_clk");
    sc_trace(mVcdFile, ap_rst, "(port)ap_rst");
    sc_trace(mVcdFile, ap_start, "(port)ap_start");
    sc_trace(mVcdFile, ap_done, "(port)ap_done");
    sc_trace(mVcdFile, ap_idle, "(port)ap_idle");
    sc_trace(mVcdFile, ap_ready, "(port)ap_ready");
    sc_trace(mVcdFile, m_axi_weights_AWVALID, "(port)m_axi_weights_AWVALID");
    sc_trace(mVcdFile, m_axi_weights_AWREADY, "(port)m_axi_weights_AWREADY");
    sc_trace(mVcdFile, m_axi_weights_AWADDR, "(port)m_axi_weights_AWADDR");
    sc_trace(mVcdFile, m_axi_weights_AWID, "(port)m_axi_weights_AWID");
    sc_trace(mVcdFile, m_axi_weights_AWLEN, "(port)m_axi_weights_AWLEN");
    sc_trace(mVcdFile, m_axi_weights_AWSIZE, "(port)m_axi_weights_AWSIZE");
    sc_trace(mVcdFile, m_axi_weights_AWBURST, "(port)m_axi_weights_AWBURST");
    sc_trace(mVcdFile, m_axi_weights_AWLOCK, "(port)m_axi_weights_AWLOCK");
    sc_trace(mVcdFile, m_axi_weights_AWCACHE, "(port)m_axi_weights_AWCACHE");
    sc_trace(mVcdFile, m_axi_weights_AWPROT, "(port)m_axi_weights_AWPROT");
    sc_trace(mVcdFile, m_axi_weights_AWQOS, "(port)m_axi_weights_AWQOS");
    sc_trace(mVcdFile, m_axi_weights_AWREGION, "(port)m_axi_weights_AWREGION");
    sc_trace(mVcdFile, m_axi_weights_AWUSER, "(port)m_axi_weights_AWUSER");
    sc_trace(mVcdFile, m_axi_weights_WVALID, "(port)m_axi_weights_WVALID");
    sc_trace(mVcdFile, m_axi_weights_WREADY, "(port)m_axi_weights_WREADY");
    sc_trace(mVcdFile, m_axi_weights_WDATA, "(port)m_axi_weights_WDATA");
    sc_trace(mVcdFile, m_axi_weights_WSTRB, "(port)m_axi_weights_WSTRB");
    sc_trace(mVcdFile, m_axi_weights_WLAST, "(port)m_axi_weights_WLAST");
    sc_trace(mVcdFile, m_axi_weights_WID, "(port)m_axi_weights_WID");
    sc_trace(mVcdFile, m_axi_weights_WUSER, "(port)m_axi_weights_WUSER");
    sc_trace(mVcdFile, m_axi_weights_ARVALID, "(port)m_axi_weights_ARVALID");
    sc_trace(mVcdFile, m_axi_weights_ARREADY, "(port)m_axi_weights_ARREADY");
    sc_trace(mVcdFile, m_axi_weights_ARADDR, "(port)m_axi_weights_ARADDR");
    sc_trace(mVcdFile, m_axi_weights_ARID, "(port)m_axi_weights_ARID");
    sc_trace(mVcdFile, m_axi_weights_ARLEN, "(port)m_axi_weights_ARLEN");
    sc_trace(mVcdFile, m_axi_weights_ARSIZE, "(port)m_axi_weights_ARSIZE");
    sc_trace(mVcdFile, m_axi_weights_ARBURST, "(port)m_axi_weights_ARBURST");
    sc_trace(mVcdFile, m_axi_weights_ARLOCK, "(port)m_axi_weights_ARLOCK");
    sc_trace(mVcdFile, m_axi_weights_ARCACHE, "(port)m_axi_weights_ARCACHE");
    sc_trace(mVcdFile, m_axi_weights_ARPROT, "(port)m_axi_weights_ARPROT");
    sc_trace(mVcdFile, m_axi_weights_ARQOS, "(port)m_axi_weights_ARQOS");
    sc_trace(mVcdFile, m_axi_weights_ARREGION, "(port)m_axi_weights_ARREGION");
    sc_trace(mVcdFile, m_axi_weights_ARUSER, "(port)m_axi_weights_ARUSER");
    sc_trace(mVcdFile, m_axi_weights_RVALID, "(port)m_axi_weights_RVALID");
    sc_trace(mVcdFile, m_axi_weights_RREADY, "(port)m_axi_weights_RREADY");
    sc_trace(mVcdFile, m_axi_weights_RDATA, "(port)m_axi_weights_RDATA");
    sc_trace(mVcdFile, m_axi_weights_RLAST, "(port)m_axi_weights_RLAST");
    sc_trace(mVcdFile, m_axi_weights_RID, "(port)m_axi_weights_RID");
    sc_trace(mVcdFile, m_axi_weights_RUSER, "(port)m_axi_weights_RUSER");
    sc_trace(mVcdFile, m_axi_weights_RRESP, "(port)m_axi_weights_RRESP");
    sc_trace(mVcdFile, m_axi_weights_BVALID, "(port)m_axi_weights_BVALID");
    sc_trace(mVcdFile, m_axi_weights_BREADY, "(port)m_axi_weights_BREADY");
    sc_trace(mVcdFile, m_axi_weights_BRESP, "(port)m_axi_weights_BRESP");
    sc_trace(mVcdFile, m_axi_weights_BID, "(port)m_axi_weights_BID");
    sc_trace(mVcdFile, m_axi_weights_BUSER, "(port)m_axi_weights_BUSER");
    sc_trace(mVcdFile, weights_offset, "(port)weights_offset");
    sc_trace(mVcdFile, weights_oc_address0, "(port)weights_oc_address0");
    sc_trace(mVcdFile, weights_oc_ce0, "(port)weights_oc_ce0");
    sc_trace(mVcdFile, weights_oc_we0, "(port)weights_oc_we0");
    sc_trace(mVcdFile, weights_oc_d0, "(port)weights_oc_d0");
    sc_trace(mVcdFile, input_channel, "(port)input_channel");
#endif
#ifdef __HLS_TRACE_LEVEL_INT__
    sc_trace(mVcdFile, ap_CS_fsm, "ap_CS_fsm");
    sc_trace(mVcdFile, ap_CS_fsm_state1, "ap_CS_fsm_state1");
    sc_trace(mVcdFile, weights_blk_n_AR, "weights_blk_n_AR");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter3, "ap_enable_reg_pp0_iter3");
    sc_trace(mVcdFile, ap_block_pp0_stage0, "ap_block_pp0_stage0");
    sc_trace(mVcdFile, exitcond_flatten1_reg_442, "exitcond_flatten1_reg_442");
    sc_trace(mVcdFile, exitcond_flatten1_reg_442_pp0_iter2_reg, "exitcond_flatten1_reg_442_pp0_iter2_reg");
    sc_trace(mVcdFile, weights_blk_n_R, "weights_blk_n_R");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter10, "ap_enable_reg_pp0_iter10");
    sc_trace(mVcdFile, exitcond_flatten1_reg_442_pp0_iter9_reg, "exitcond_flatten1_reg_442_pp0_iter9_reg");
    sc_trace(mVcdFile, indvar_flatten1_reg_123, "indvar_flatten1_reg_123");
    sc_trace(mVcdFile, i_reg_134, "i_reg_134");
    sc_trace(mVcdFile, indvar_flatten_reg_145, "indvar_flatten_reg_145");
    sc_trace(mVcdFile, j_reg_156, "j_reg_156");
    sc_trace(mVcdFile, k_reg_167, "k_reg_167");
    sc_trace(mVcdFile, tmp_cast_fu_178_p1, "tmp_cast_fu_178_p1");
    sc_trace(mVcdFile, tmp_cast_reg_432, "tmp_cast_reg_432");
    sc_trace(mVcdFile, sext_fu_182_p1, "sext_fu_182_p1");
    sc_trace(mVcdFile, sext_reg_437, "sext_reg_437");
    sc_trace(mVcdFile, exitcond_flatten1_fu_186_p2, "exitcond_flatten1_fu_186_p2");
    sc_trace(mVcdFile, ap_CS_fsm_pp0_stage0, "ap_CS_fsm_pp0_stage0");
    sc_trace(mVcdFile, ap_block_state2_pp0_stage0_iter0, "ap_block_state2_pp0_stage0_iter0");
    sc_trace(mVcdFile, ap_block_state3_pp0_stage0_iter1, "ap_block_state3_pp0_stage0_iter1");
    sc_trace(mVcdFile, ap_block_state4_pp0_stage0_iter2, "ap_block_state4_pp0_stage0_iter2");
    sc_trace(mVcdFile, ap_block_state5_pp0_stage0_iter3, "ap_block_state5_pp0_stage0_iter3");
    sc_trace(mVcdFile, ap_sig_ioackin_m_axi_weights_ARREADY, "ap_sig_ioackin_m_axi_weights_ARREADY");
    sc_trace(mVcdFile, ap_block_state5_io, "ap_block_state5_io");
    sc_trace(mVcdFile, ap_block_state6_pp0_stage0_iter4, "ap_block_state6_pp0_stage0_iter4");
    sc_trace(mVcdFile, ap_block_state7_pp0_stage0_iter5, "ap_block_state7_pp0_stage0_iter5");
    sc_trace(mVcdFile, ap_block_state8_pp0_stage0_iter6, "ap_block_state8_pp0_stage0_iter6");
    sc_trace(mVcdFile, ap_block_state9_pp0_stage0_iter7, "ap_block_state9_pp0_stage0_iter7");
    sc_trace(mVcdFile, ap_block_state10_pp0_stage0_iter8, "ap_block_state10_pp0_stage0_iter8");
    sc_trace(mVcdFile, ap_block_state11_pp0_stage0_iter9, "ap_block_state11_pp0_stage0_iter9");
    sc_trace(mVcdFile, ap_block_state12_pp0_stage0_iter10, "ap_block_state12_pp0_stage0_iter10");
    sc_trace(mVcdFile, ap_block_state13_pp0_stage0_iter11, "ap_block_state13_pp0_stage0_iter11");
    sc_trace(mVcdFile, ap_block_pp0_stage0_11001, "ap_block_pp0_stage0_11001");
    sc_trace(mVcdFile, exitcond_flatten1_reg_442_pp0_iter1_reg, "exitcond_flatten1_reg_442_pp0_iter1_reg");
    sc_trace(mVcdFile, exitcond_flatten1_reg_442_pp0_iter3_reg, "exitcond_flatten1_reg_442_pp0_iter3_reg");
    sc_trace(mVcdFile, exitcond_flatten1_reg_442_pp0_iter4_reg, "exitcond_flatten1_reg_442_pp0_iter4_reg");
    sc_trace(mVcdFile, exitcond_flatten1_reg_442_pp0_iter5_reg, "exitcond_flatten1_reg_442_pp0_iter5_reg");
    sc_trace(mVcdFile, exitcond_flatten1_reg_442_pp0_iter6_reg, "exitcond_flatten1_reg_442_pp0_iter6_reg");
    sc_trace(mVcdFile, exitcond_flatten1_reg_442_pp0_iter7_reg, "exitcond_flatten1_reg_442_pp0_iter7_reg");
    sc_trace(mVcdFile, exitcond_flatten1_reg_442_pp0_iter8_reg, "exitcond_flatten1_reg_442_pp0_iter8_reg");
    sc_trace(mVcdFile, exitcond_flatten1_reg_442_pp0_iter10_reg, "exitcond_flatten1_reg_442_pp0_iter10_reg");
    sc_trace(mVcdFile, indvar_flatten_next1_fu_192_p2, "indvar_flatten_next1_fu_192_p2");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter0, "ap_enable_reg_pp0_iter0");
    sc_trace(mVcdFile, tmp_1_mid2_v_fu_218_p3, "tmp_1_mid2_v_fu_218_p3");
    sc_trace(mVcdFile, tmp_1_mid2_v_reg_451, "tmp_1_mid2_v_reg_451");
    sc_trace(mVcdFile, tmp_1_mid2_v_reg_451_pp0_iter1_reg, "tmp_1_mid2_v_reg_451_pp0_iter1_reg");
    sc_trace(mVcdFile, tmp_1_mid2_v_reg_451_pp0_iter2_reg, "tmp_1_mid2_v_reg_451_pp0_iter2_reg");
    sc_trace(mVcdFile, tmp_1_mid2_v_reg_451_pp0_iter3_reg, "tmp_1_mid2_v_reg_451_pp0_iter3_reg");
    sc_trace(mVcdFile, tmp_1_mid2_v_reg_451_pp0_iter4_reg, "tmp_1_mid2_v_reg_451_pp0_iter4_reg");
    sc_trace(mVcdFile, tmp_1_mid2_v_reg_451_pp0_iter5_reg, "tmp_1_mid2_v_reg_451_pp0_iter5_reg");
    sc_trace(mVcdFile, tmp_1_mid2_v_reg_451_pp0_iter6_reg, "tmp_1_mid2_v_reg_451_pp0_iter6_reg");
    sc_trace(mVcdFile, tmp_1_mid2_v_reg_451_pp0_iter7_reg, "tmp_1_mid2_v_reg_451_pp0_iter7_reg");
    sc_trace(mVcdFile, tmp_1_mid2_v_reg_451_pp0_iter8_reg, "tmp_1_mid2_v_reg_451_pp0_iter8_reg");
    sc_trace(mVcdFile, tmp_1_mid2_v_reg_451_pp0_iter9_reg, "tmp_1_mid2_v_reg_451_pp0_iter9_reg");
    sc_trace(mVcdFile, k_mid2_fu_256_p3, "k_mid2_fu_256_p3");
    sc_trace(mVcdFile, k_mid2_reg_459, "k_mid2_reg_459");
    sc_trace(mVcdFile, k_mid2_reg_459_pp0_iter1_reg, "k_mid2_reg_459_pp0_iter1_reg");
    sc_trace(mVcdFile, k_mid2_reg_459_pp0_iter2_reg, "k_mid2_reg_459_pp0_iter2_reg");
    sc_trace(mVcdFile, k_mid2_reg_459_pp0_iter3_reg, "k_mid2_reg_459_pp0_iter3_reg");
    sc_trace(mVcdFile, k_mid2_reg_459_pp0_iter4_reg, "k_mid2_reg_459_pp0_iter4_reg");
    sc_trace(mVcdFile, k_mid2_reg_459_pp0_iter5_reg, "k_mid2_reg_459_pp0_iter5_reg");
    sc_trace(mVcdFile, k_mid2_reg_459_pp0_iter6_reg, "k_mid2_reg_459_pp0_iter6_reg");
    sc_trace(mVcdFile, k_mid2_reg_459_pp0_iter7_reg, "k_mid2_reg_459_pp0_iter7_reg");
    sc_trace(mVcdFile, k_mid2_reg_459_pp0_iter8_reg, "k_mid2_reg_459_pp0_iter8_reg");
    sc_trace(mVcdFile, k_mid2_reg_459_pp0_iter9_reg, "k_mid2_reg_459_pp0_iter9_reg");
    sc_trace(mVcdFile, k_mid2_reg_459_pp0_iter10_reg, "k_mid2_reg_459_pp0_iter10_reg");
    sc_trace(mVcdFile, tmp_3_mid2_fu_264_p3, "tmp_3_mid2_fu_264_p3");
    sc_trace(mVcdFile, tmp_3_mid2_reg_465, "tmp_3_mid2_reg_465");
    sc_trace(mVcdFile, tmp_3_mid2_reg_465_pp0_iter1_reg, "tmp_3_mid2_reg_465_pp0_iter1_reg");
    sc_trace(mVcdFile, tmp_3_mid2_reg_465_pp0_iter2_reg, "tmp_3_mid2_reg_465_pp0_iter2_reg");
    sc_trace(mVcdFile, tmp_3_mid2_reg_465_pp0_iter3_reg, "tmp_3_mid2_reg_465_pp0_iter3_reg");
    sc_trace(mVcdFile, tmp_3_mid2_reg_465_pp0_iter4_reg, "tmp_3_mid2_reg_465_pp0_iter4_reg");
    sc_trace(mVcdFile, tmp_3_mid2_reg_465_pp0_iter5_reg, "tmp_3_mid2_reg_465_pp0_iter5_reg");
    sc_trace(mVcdFile, tmp_3_mid2_reg_465_pp0_iter6_reg, "tmp_3_mid2_reg_465_pp0_iter6_reg");
    sc_trace(mVcdFile, tmp_3_mid2_reg_465_pp0_iter7_reg, "tmp_3_mid2_reg_465_pp0_iter7_reg");
    sc_trace(mVcdFile, tmp_3_mid2_reg_465_pp0_iter8_reg, "tmp_3_mid2_reg_465_pp0_iter8_reg");
    sc_trace(mVcdFile, tmp_3_mid2_reg_465_pp0_iter9_reg, "tmp_3_mid2_reg_465_pp0_iter9_reg");
    sc_trace(mVcdFile, k_1_fu_272_p2, "k_1_fu_272_p2");
    sc_trace(mVcdFile, indvar_flatten_next_fu_284_p3, "indvar_flatten_next_fu_284_p3");
    sc_trace(mVcdFile, tmp_4_fu_333_p2, "tmp_4_fu_333_p2");
    sc_trace(mVcdFile, tmp_4_reg_482, "tmp_4_reg_482");
    sc_trace(mVcdFile, weights_addr_reg_488, "weights_addr_reg_488");
    sc_trace(mVcdFile, tmp_11_fu_392_p2, "tmp_11_fu_392_p2");
    sc_trace(mVcdFile, tmp_11_reg_494, "tmp_11_reg_494");
    sc_trace(mVcdFile, weights_addr_read_reg_500, "weights_addr_read_reg_500");
    sc_trace(mVcdFile, ap_block_pp0_stage0_subdone, "ap_block_pp0_stage0_subdone");
    sc_trace(mVcdFile, ap_condition_pp0_exit_iter0_state2, "ap_condition_pp0_exit_iter0_state2");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter1, "ap_enable_reg_pp0_iter1");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter2, "ap_enable_reg_pp0_iter2");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter4, "ap_enable_reg_pp0_iter4");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter5, "ap_enable_reg_pp0_iter5");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter6, "ap_enable_reg_pp0_iter6");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter7, "ap_enable_reg_pp0_iter7");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter8, "ap_enable_reg_pp0_iter8");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter9, "ap_enable_reg_pp0_iter9");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter11, "ap_enable_reg_pp0_iter11");
    sc_trace(mVcdFile, ap_phi_mux_i_phi_fu_138_p4, "ap_phi_mux_i_phi_fu_138_p4");
    sc_trace(mVcdFile, ap_phi_mux_j_phi_fu_160_p4, "ap_phi_mux_j_phi_fu_160_p4");
    sc_trace(mVcdFile, tmp_19_cast_fu_427_p1, "tmp_19_cast_fu_427_p1");
    sc_trace(mVcdFile, sum_fu_358_p2, "sum_fu_358_p2");
    sc_trace(mVcdFile, ap_reg_ioackin_m_axi_weights_ARREADY, "ap_reg_ioackin_m_axi_weights_ARREADY");
    sc_trace(mVcdFile, ap_block_pp0_stage0_01001, "ap_block_pp0_stage0_01001");
    sc_trace(mVcdFile, exitcond_flatten_fu_204_p2, "exitcond_flatten_fu_204_p2");
    sc_trace(mVcdFile, i_1_fu_198_p2, "i_1_fu_198_p2");
    sc_trace(mVcdFile, exitcond_fu_232_p2, "exitcond_fu_232_p2");
    sc_trace(mVcdFile, not_exitcond_flatten_fu_226_p2, "not_exitcond_flatten_fu_226_p2");
    sc_trace(mVcdFile, j_mid_fu_210_p3, "j_mid_fu_210_p3");
    sc_trace(mVcdFile, exitcond_mid_fu_238_p2, "exitcond_mid_fu_238_p2");
    sc_trace(mVcdFile, tmp_3_fu_250_p2, "tmp_3_fu_250_p2");
    sc_trace(mVcdFile, j_1_fu_244_p2, "j_1_fu_244_p2");
    sc_trace(mVcdFile, indvar_flatten_op_fu_278_p2, "indvar_flatten_op_fu_278_p2");
    sc_trace(mVcdFile, tmp_1_fu_292_p3, "tmp_1_fu_292_p3");
    sc_trace(mVcdFile, tmp_4_cast_fu_299_p1, "tmp_4_cast_fu_299_p1");
    sc_trace(mVcdFile, tmp_6_fu_303_p2, "tmp_6_fu_303_p2");
    sc_trace(mVcdFile, tmp_fu_312_p3, "tmp_fu_312_p3");
    sc_trace(mVcdFile, tmp_6_cast_fu_308_p1, "tmp_6_cast_fu_308_p1");
    sc_trace(mVcdFile, p_shl3_fu_320_p1, "p_shl3_fu_320_p1");
    sc_trace(mVcdFile, tmp_8_fu_324_p2, "tmp_8_fu_324_p2");
    sc_trace(mVcdFile, tmp_3_mid2_cast_fu_330_p1, "tmp_3_mid2_cast_fu_330_p1");
    sc_trace(mVcdFile, tmp_7_fu_339_p2, "tmp_7_fu_339_p2");
    sc_trace(mVcdFile, tmp_10_fu_344_p2, "tmp_10_fu_344_p2");
    sc_trace(mVcdFile, tmp_5_fu_349_p1, "tmp_5_fu_349_p1");
    sc_trace(mVcdFile, tmp_14_fu_352_p2, "tmp_14_fu_352_p2");
    sc_trace(mVcdFile, tmp_9_fu_372_p3, "tmp_9_fu_372_p3");
    sc_trace(mVcdFile, tmp_1_mid2_cast_fu_369_p1, "tmp_1_mid2_cast_fu_369_p1");
    sc_trace(mVcdFile, p_shl2_cast_fu_379_p1, "p_shl2_cast_fu_379_p1");
    sc_trace(mVcdFile, tmp_s_fu_383_p2, "tmp_s_fu_383_p2");
    sc_trace(mVcdFile, tmp_3_mid2_cast1_fu_389_p1, "tmp_3_mid2_cast1_fu_389_p1");
    sc_trace(mVcdFile, tmp_12_fu_401_p3, "tmp_12_fu_401_p3");
    sc_trace(mVcdFile, tmp_15_cast_fu_398_p1, "tmp_15_cast_fu_398_p1");
    sc_trace(mVcdFile, p_shl_cast_fu_408_p1, "p_shl_cast_fu_408_p1");
    sc_trace(mVcdFile, tmp_13_fu_412_p2, "tmp_13_fu_412_p2");
    sc_trace(mVcdFile, tmp_5_cast_fu_418_p1, "tmp_5_cast_fu_418_p1");
    sc_trace(mVcdFile, tmp_15_fu_421_p2, "tmp_15_fu_421_p2");
    sc_trace(mVcdFile, ap_CS_fsm_state14, "ap_CS_fsm_state14");
    sc_trace(mVcdFile, ap_NS_fsm, "ap_NS_fsm");
    sc_trace(mVcdFile, ap_idle_pp0, "ap_idle_pp0");
    sc_trace(mVcdFile, ap_enable_pp0, "ap_enable_pp0");
#endif

    }
}

store_weights_5::~store_weights_5() {
    if (mVcdFile) 
        sc_close_vcd_trace_file(mVcdFile);

}

void store_weights_5::thread_ap_clk_no_reset_() {
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_CS_fsm = ap_ST_fsm_state1;
    } else {
        ap_CS_fsm = ap_NS_fsm.read();
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter0 = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_boolean_0, ap_block_pp0_stage0_subdone.read()) && 
             esl_seteq<1,1,1>(ap_const_logic_1, ap_condition_pp0_exit_iter0_state2.read()) && 
             esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()))) {
            ap_enable_reg_pp0_iter0 = ap_const_logic_0;
        } else if ((esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1) && 
                    esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()))) {
            ap_enable_reg_pp0_iter0 = ap_const_logic_1;
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter1 = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_const_boolean_0, ap_block_pp0_stage0_subdone.read())) {
            if (esl_seteq<1,1,1>(ap_const_logic_1, ap_condition_pp0_exit_iter0_state2.read())) {
                ap_enable_reg_pp0_iter1 = (ap_condition_pp0_exit_iter0_state2.read() ^ ap_const_logic_1);
            } else if (esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1)) {
                ap_enable_reg_pp0_iter1 = ap_enable_reg_pp0_iter0.read();
            }
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter10 = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_const_boolean_0, ap_block_pp0_stage0_subdone.read())) {
            ap_enable_reg_pp0_iter10 = ap_enable_reg_pp0_iter9.read();
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter11 = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_const_boolean_0, ap_block_pp0_stage0_subdone.read())) {
            ap_enable_reg_pp0_iter11 = ap_enable_reg_pp0_iter10.read();
        } else if ((esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1) && 
                    esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()))) {
            ap_enable_reg_pp0_iter11 = ap_const_logic_0;
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter2 = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_const_boolean_0, ap_block_pp0_stage0_subdone.read())) {
            ap_enable_reg_pp0_iter2 = ap_enable_reg_pp0_iter1.read();
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter3 = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_const_boolean_0, ap_block_pp0_stage0_subdone.read())) {
            ap_enable_reg_pp0_iter3 = ap_enable_reg_pp0_iter2.read();
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter4 = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_const_boolean_0, ap_block_pp0_stage0_subdone.read())) {
            ap_enable_reg_pp0_iter4 = ap_enable_reg_pp0_iter3.read();
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter5 = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_const_boolean_0, ap_block_pp0_stage0_subdone.read())) {
            ap_enable_reg_pp0_iter5 = ap_enable_reg_pp0_iter4.read();
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter6 = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_const_boolean_0, ap_block_pp0_stage0_subdone.read())) {
            ap_enable_reg_pp0_iter6 = ap_enable_reg_pp0_iter5.read();
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter7 = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_const_boolean_0, ap_block_pp0_stage0_subdone.read())) {
            ap_enable_reg_pp0_iter7 = ap_enable_reg_pp0_iter6.read();
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter8 = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_const_boolean_0, ap_block_pp0_stage0_subdone.read())) {
            ap_enable_reg_pp0_iter8 = ap_enable_reg_pp0_iter7.read();
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter9 = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_const_boolean_0, ap_block_pp0_stage0_subdone.read())) {
            ap_enable_reg_pp0_iter9 = ap_enable_reg_pp0_iter8.read();
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_reg_ioackin_m_axi_weights_ARREADY = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter3.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_flatten1_reg_442_pp0_iter2_reg.read()))) {
            if (esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0)) {
                ap_reg_ioackin_m_axi_weights_ARREADY = ap_const_logic_0;
            } else if ((esl_seteq<1,1,1>(ap_const_logic_1, m_axi_weights_ARREADY.read()) && 
                        esl_seteq<1,1,1>(ap_block_pp0_stage0_01001.read(), ap_const_boolean_0))) {
                ap_reg_ioackin_m_axi_weights_ARREADY = ap_const_logic_1;
            }
        }
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_flatten1_reg_442.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()))) {
        i_reg_134 = tmp_1_mid2_v_reg_451.read();
    } else if ((esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1) && 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()))) {
        i_reg_134 = ap_const_lv7_0;
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_enable_reg_pp0_iter0.read(), ap_const_logic_1) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_flatten1_fu_186_p2.read()))) {
        indvar_flatten1_reg_123 = indvar_flatten_next1_fu_192_p2.read();
    } else if ((esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1) && 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()))) {
        indvar_flatten1_reg_123 = ap_const_lv12_0;
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_enable_reg_pp0_iter0.read(), ap_const_logic_1) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_flatten1_fu_186_p2.read()))) {
        indvar_flatten_reg_145 = indvar_flatten_next_fu_284_p3.read();
    } else if ((esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1) && 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()))) {
        indvar_flatten_reg_145 = ap_const_lv6_0;
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_flatten1_reg_442.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()))) {
        j_reg_156 = tmp_3_mid2_reg_465.read();
    } else if ((esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1) && 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()))) {
        j_reg_156 = ap_const_lv3_0;
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_enable_reg_pp0_iter0.read(), ap_const_logic_1) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_flatten1_fu_186_p2.read()))) {
        k_reg_167 = k_1_fu_272_p2.read();
    } else if ((esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1) && 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()))) {
        k_reg_167 = ap_const_lv3_0;
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0))) {
        exitcond_flatten1_reg_442 = exitcond_flatten1_fu_186_p2.read();
        exitcond_flatten1_reg_442_pp0_iter1_reg = exitcond_flatten1_reg_442.read();
        k_mid2_reg_459_pp0_iter1_reg = k_mid2_reg_459.read();
        tmp_1_mid2_v_reg_451_pp0_iter1_reg = tmp_1_mid2_v_reg_451.read();
        tmp_3_mid2_reg_465_pp0_iter1_reg = tmp_3_mid2_reg_465.read();
    }
    if (esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0)) {
        exitcond_flatten1_reg_442_pp0_iter10_reg = exitcond_flatten1_reg_442_pp0_iter9_reg.read();
        exitcond_flatten1_reg_442_pp0_iter2_reg = exitcond_flatten1_reg_442_pp0_iter1_reg.read();
        exitcond_flatten1_reg_442_pp0_iter3_reg = exitcond_flatten1_reg_442_pp0_iter2_reg.read();
        exitcond_flatten1_reg_442_pp0_iter4_reg = exitcond_flatten1_reg_442_pp0_iter3_reg.read();
        exitcond_flatten1_reg_442_pp0_iter5_reg = exitcond_flatten1_reg_442_pp0_iter4_reg.read();
        exitcond_flatten1_reg_442_pp0_iter6_reg = exitcond_flatten1_reg_442_pp0_iter5_reg.read();
        exitcond_flatten1_reg_442_pp0_iter7_reg = exitcond_flatten1_reg_442_pp0_iter6_reg.read();
        exitcond_flatten1_reg_442_pp0_iter8_reg = exitcond_flatten1_reg_442_pp0_iter7_reg.read();
        exitcond_flatten1_reg_442_pp0_iter9_reg = exitcond_flatten1_reg_442_pp0_iter8_reg.read();
        k_mid2_reg_459_pp0_iter10_reg = k_mid2_reg_459_pp0_iter9_reg.read();
        k_mid2_reg_459_pp0_iter2_reg = k_mid2_reg_459_pp0_iter1_reg.read();
        k_mid2_reg_459_pp0_iter3_reg = k_mid2_reg_459_pp0_iter2_reg.read();
        k_mid2_reg_459_pp0_iter4_reg = k_mid2_reg_459_pp0_iter3_reg.read();
        k_mid2_reg_459_pp0_iter5_reg = k_mid2_reg_459_pp0_iter4_reg.read();
        k_mid2_reg_459_pp0_iter6_reg = k_mid2_reg_459_pp0_iter5_reg.read();
        k_mid2_reg_459_pp0_iter7_reg = k_mid2_reg_459_pp0_iter6_reg.read();
        k_mid2_reg_459_pp0_iter8_reg = k_mid2_reg_459_pp0_iter7_reg.read();
        k_mid2_reg_459_pp0_iter9_reg = k_mid2_reg_459_pp0_iter8_reg.read();
        tmp_1_mid2_v_reg_451_pp0_iter2_reg = tmp_1_mid2_v_reg_451_pp0_iter1_reg.read();
        tmp_1_mid2_v_reg_451_pp0_iter3_reg = tmp_1_mid2_v_reg_451_pp0_iter2_reg.read();
        tmp_1_mid2_v_reg_451_pp0_iter4_reg = tmp_1_mid2_v_reg_451_pp0_iter3_reg.read();
        tmp_1_mid2_v_reg_451_pp0_iter5_reg = tmp_1_mid2_v_reg_451_pp0_iter4_reg.read();
        tmp_1_mid2_v_reg_451_pp0_iter6_reg = tmp_1_mid2_v_reg_451_pp0_iter5_reg.read();
        tmp_1_mid2_v_reg_451_pp0_iter7_reg = tmp_1_mid2_v_reg_451_pp0_iter6_reg.read();
        tmp_1_mid2_v_reg_451_pp0_iter8_reg = tmp_1_mid2_v_reg_451_pp0_iter7_reg.read();
        tmp_1_mid2_v_reg_451_pp0_iter9_reg = tmp_1_mid2_v_reg_451_pp0_iter8_reg.read();
        tmp_3_mid2_reg_465_pp0_iter2_reg = tmp_3_mid2_reg_465_pp0_iter1_reg.read();
        tmp_3_mid2_reg_465_pp0_iter3_reg = tmp_3_mid2_reg_465_pp0_iter2_reg.read();
        tmp_3_mid2_reg_465_pp0_iter4_reg = tmp_3_mid2_reg_465_pp0_iter3_reg.read();
        tmp_3_mid2_reg_465_pp0_iter5_reg = tmp_3_mid2_reg_465_pp0_iter4_reg.read();
        tmp_3_mid2_reg_465_pp0_iter6_reg = tmp_3_mid2_reg_465_pp0_iter5_reg.read();
        tmp_3_mid2_reg_465_pp0_iter7_reg = tmp_3_mid2_reg_465_pp0_iter6_reg.read();
        tmp_3_mid2_reg_465_pp0_iter8_reg = tmp_3_mid2_reg_465_pp0_iter7_reg.read();
        tmp_3_mid2_reg_465_pp0_iter9_reg = tmp_3_mid2_reg_465_pp0_iter8_reg.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_flatten1_fu_186_p2.read()))) {
        k_mid2_reg_459 = k_mid2_fu_256_p3.read();
    }
    if ((esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1) && esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()))) {
        sext_reg_437 = sext_fu_182_p1.read();
        tmp_cast_reg_432 = tmp_cast_fu_178_p1.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_flatten1_reg_442_pp0_iter9_reg.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0))) {
        tmp_11_reg_494 = tmp_11_fu_392_p2.read();
        weights_addr_read_reg_500 = m_axi_weights_RDATA.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(ap_enable_reg_pp0_iter0.read(), ap_const_logic_1) && esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_flatten1_fu_186_p2.read()))) {
        tmp_1_mid2_v_reg_451 = tmp_1_mid2_v_fu_218_p3.read();
        tmp_3_mid2_reg_465 = tmp_3_mid2_fu_264_p3.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_flatten1_reg_442.read()))) {
        tmp_4_reg_482 = tmp_4_fu_333_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_flatten1_reg_442_pp0_iter1_reg.read()))) {
        weights_addr_reg_488 =  (sc_lv<32>) (sum_fu_358_p2.read());
    }
}

void store_weights_5::thread_ap_CS_fsm_pp0_stage0() {
    ap_CS_fsm_pp0_stage0 = ap_CS_fsm.read()[1];
}

void store_weights_5::thread_ap_CS_fsm_state1() {
    ap_CS_fsm_state1 = ap_CS_fsm.read()[0];
}

void store_weights_5::thread_ap_CS_fsm_state14() {
    ap_CS_fsm_state14 = ap_CS_fsm.read()[2];
}

void store_weights_5::thread_ap_block_pp0_stage0() {
    ap_block_pp0_stage0 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void store_weights_5::thread_ap_block_pp0_stage0_01001() {
    ap_block_pp0_stage0_01001 = (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter10.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_flatten1_reg_442_pp0_iter9_reg.read()) && esl_seteq<1,1,1>(ap_const_logic_0, m_axi_weights_RVALID.read()));
}

void store_weights_5::thread_ap_block_pp0_stage0_11001() {
    ap_block_pp0_stage0_11001 = ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter3.read()) && 
  esl_seteq<1,1,1>(ap_const_boolean_1, ap_block_state5_io.read())) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter10.read()) && 
  esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_flatten1_reg_442_pp0_iter9_reg.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_0, m_axi_weights_RVALID.read())));
}

void store_weights_5::thread_ap_block_pp0_stage0_subdone() {
    ap_block_pp0_stage0_subdone = ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter3.read()) && 
  esl_seteq<1,1,1>(ap_const_boolean_1, ap_block_state5_io.read())) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter10.read()) && 
  esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_flatten1_reg_442_pp0_iter9_reg.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_0, m_axi_weights_RVALID.read())));
}

void store_weights_5::thread_ap_block_state10_pp0_stage0_iter8() {
    ap_block_state10_pp0_stage0_iter8 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void store_weights_5::thread_ap_block_state11_pp0_stage0_iter9() {
    ap_block_state11_pp0_stage0_iter9 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void store_weights_5::thread_ap_block_state12_pp0_stage0_iter10() {
    ap_block_state12_pp0_stage0_iter10 = (esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_flatten1_reg_442_pp0_iter9_reg.read()) && esl_seteq<1,1,1>(ap_const_logic_0, m_axi_weights_RVALID.read()));
}

void store_weights_5::thread_ap_block_state13_pp0_stage0_iter11() {
    ap_block_state13_pp0_stage0_iter11 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void store_weights_5::thread_ap_block_state2_pp0_stage0_iter0() {
    ap_block_state2_pp0_stage0_iter0 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void store_weights_5::thread_ap_block_state3_pp0_stage0_iter1() {
    ap_block_state3_pp0_stage0_iter1 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void store_weights_5::thread_ap_block_state4_pp0_stage0_iter2() {
    ap_block_state4_pp0_stage0_iter2 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void store_weights_5::thread_ap_block_state5_io() {
    ap_block_state5_io = (esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_flatten1_reg_442_pp0_iter2_reg.read()) && esl_seteq<1,1,1>(ap_const_logic_0, ap_sig_ioackin_m_axi_weights_ARREADY.read()));
}

void store_weights_5::thread_ap_block_state5_pp0_stage0_iter3() {
    ap_block_state5_pp0_stage0_iter3 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void store_weights_5::thread_ap_block_state6_pp0_stage0_iter4() {
    ap_block_state6_pp0_stage0_iter4 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void store_weights_5::thread_ap_block_state7_pp0_stage0_iter5() {
    ap_block_state7_pp0_stage0_iter5 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void store_weights_5::thread_ap_block_state8_pp0_stage0_iter6() {
    ap_block_state8_pp0_stage0_iter6 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void store_weights_5::thread_ap_block_state9_pp0_stage0_iter7() {
    ap_block_state9_pp0_stage0_iter7 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void store_weights_5::thread_ap_condition_pp0_exit_iter0_state2() {
    if (esl_seteq<1,1,1>(exitcond_flatten1_fu_186_p2.read(), ap_const_lv1_1)) {
        ap_condition_pp0_exit_iter0_state2 = ap_const_logic_1;
    } else {
        ap_condition_pp0_exit_iter0_state2 = ap_const_logic_0;
    }
}

void store_weights_5::thread_ap_done() {
    if (((esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read())) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state14.read()))) {
        ap_done = ap_const_logic_1;
    } else {
        ap_done = ap_const_logic_0;
    }
}

void store_weights_5::thread_ap_enable_pp0() {
    ap_enable_pp0 = (ap_idle_pp0.read() ^ ap_const_logic_1);
}

void store_weights_5::thread_ap_idle() {
    if ((esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()))) {
        ap_idle = ap_const_logic_1;
    } else {
        ap_idle = ap_const_logic_0;
    }
}

void store_weights_5::thread_ap_idle_pp0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter1.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter2.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter3.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter4.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter5.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter6.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter7.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter8.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter9.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter10.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter11.read()))) {
        ap_idle_pp0 = ap_const_logic_1;
    } else {
        ap_idle_pp0 = ap_const_logic_0;
    }
}

void store_weights_5::thread_ap_phi_mux_i_phi_fu_138_p4() {
    if ((esl_seteq<1,1,1>(ap_block_pp0_stage0.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_flatten1_reg_442.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()))) {
        ap_phi_mux_i_phi_fu_138_p4 = tmp_1_mid2_v_reg_451.read();
    } else {
        ap_phi_mux_i_phi_fu_138_p4 = i_reg_134.read();
    }
}

void store_weights_5::thread_ap_phi_mux_j_phi_fu_160_p4() {
    if ((esl_seteq<1,1,1>(ap_block_pp0_stage0.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_flatten1_reg_442.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()))) {
        ap_phi_mux_j_phi_fu_160_p4 = tmp_3_mid2_reg_465.read();
    } else {
        ap_phi_mux_j_phi_fu_160_p4 = j_reg_156.read();
    }
}

void store_weights_5::thread_ap_ready() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state14.read())) {
        ap_ready = ap_const_logic_1;
    } else {
        ap_ready = ap_const_logic_0;
    }
}

void store_weights_5::thread_ap_sig_ioackin_m_axi_weights_ARREADY() {
    if (esl_seteq<1,1,1>(ap_const_logic_0, ap_reg_ioackin_m_axi_weights_ARREADY.read())) {
        ap_sig_ioackin_m_axi_weights_ARREADY = m_axi_weights_ARREADY.read();
    } else {
        ap_sig_ioackin_m_axi_weights_ARREADY = ap_const_logic_1;
    }
}

void store_weights_5::thread_exitcond_flatten1_fu_186_p2() {
    exitcond_flatten1_fu_186_p2 = (!indvar_flatten1_reg_123.read().is_01() || !ap_const_lv12_BB8.is_01())? sc_lv<1>(): sc_lv<1>(indvar_flatten1_reg_123.read() == ap_const_lv12_BB8);
}

void store_weights_5::thread_exitcond_flatten_fu_204_p2() {
    exitcond_flatten_fu_204_p2 = (!indvar_flatten_reg_145.read().is_01() || !ap_const_lv6_19.is_01())? sc_lv<1>(): sc_lv<1>(indvar_flatten_reg_145.read() == ap_const_lv6_19);
}

void store_weights_5::thread_exitcond_fu_232_p2() {
    exitcond_fu_232_p2 = (!k_reg_167.read().is_01() || !ap_const_lv3_5.is_01())? sc_lv<1>(): sc_lv<1>(k_reg_167.read() == ap_const_lv3_5);
}

void store_weights_5::thread_exitcond_mid_fu_238_p2() {
    exitcond_mid_fu_238_p2 = (exitcond_fu_232_p2.read() & not_exitcond_flatten_fu_226_p2.read());
}

void store_weights_5::thread_i_1_fu_198_p2() {
    i_1_fu_198_p2 = (!ap_const_lv7_1.is_01() || !ap_phi_mux_i_phi_fu_138_p4.read().is_01())? sc_lv<7>(): (sc_biguint<7>(ap_const_lv7_1) + sc_biguint<7>(ap_phi_mux_i_phi_fu_138_p4.read()));
}

void store_weights_5::thread_indvar_flatten_next1_fu_192_p2() {
    indvar_flatten_next1_fu_192_p2 = (!indvar_flatten1_reg_123.read().is_01() || !ap_const_lv12_1.is_01())? sc_lv<12>(): (sc_biguint<12>(indvar_flatten1_reg_123.read()) + sc_biguint<12>(ap_const_lv12_1));
}

void store_weights_5::thread_indvar_flatten_next_fu_284_p3() {
    indvar_flatten_next_fu_284_p3 = (!exitcond_flatten_fu_204_p2.read()[0].is_01())? sc_lv<6>(): ((exitcond_flatten_fu_204_p2.read()[0].to_bool())? ap_const_lv6_1: indvar_flatten_op_fu_278_p2.read());
}

void store_weights_5::thread_indvar_flatten_op_fu_278_p2() {
    indvar_flatten_op_fu_278_p2 = (!ap_const_lv6_1.is_01() || !indvar_flatten_reg_145.read().is_01())? sc_lv<6>(): (sc_biguint<6>(ap_const_lv6_1) + sc_biguint<6>(indvar_flatten_reg_145.read()));
}

void store_weights_5::thread_j_1_fu_244_p2() {
    j_1_fu_244_p2 = (!ap_const_lv3_1.is_01() || !j_mid_fu_210_p3.read().is_01())? sc_lv<3>(): (sc_biguint<3>(ap_const_lv3_1) + sc_biguint<3>(j_mid_fu_210_p3.read()));
}

void store_weights_5::thread_j_mid_fu_210_p3() {
    j_mid_fu_210_p3 = (!exitcond_flatten_fu_204_p2.read()[0].is_01())? sc_lv<3>(): ((exitcond_flatten_fu_204_p2.read()[0].to_bool())? ap_const_lv3_0: ap_phi_mux_j_phi_fu_160_p4.read());
}

void store_weights_5::thread_k_1_fu_272_p2() {
    k_1_fu_272_p2 = (!ap_const_lv3_1.is_01() || !k_mid2_fu_256_p3.read().is_01())? sc_lv<3>(): (sc_biguint<3>(ap_const_lv3_1) + sc_biguint<3>(k_mid2_fu_256_p3.read()));
}

void store_weights_5::thread_k_mid2_fu_256_p3() {
    k_mid2_fu_256_p3 = (!tmp_3_fu_250_p2.read()[0].is_01())? sc_lv<3>(): ((tmp_3_fu_250_p2.read()[0].to_bool())? ap_const_lv3_0: k_reg_167.read());
}

void store_weights_5::thread_m_axi_weights_ARADDR() {
    m_axi_weights_ARADDR = weights_addr_reg_488.read();
}

void store_weights_5::thread_m_axi_weights_ARBURST() {
    m_axi_weights_ARBURST = ap_const_lv2_0;
}

void store_weights_5::thread_m_axi_weights_ARCACHE() {
    m_axi_weights_ARCACHE = ap_const_lv4_0;
}

void store_weights_5::thread_m_axi_weights_ARID() {
    m_axi_weights_ARID = ap_const_lv1_0;
}

void store_weights_5::thread_m_axi_weights_ARLEN() {
    m_axi_weights_ARLEN = ap_const_lv32_1;
}

void store_weights_5::thread_m_axi_weights_ARLOCK() {
    m_axi_weights_ARLOCK = ap_const_lv2_0;
}

void store_weights_5::thread_m_axi_weights_ARPROT() {
    m_axi_weights_ARPROT = ap_const_lv3_0;
}

void store_weights_5::thread_m_axi_weights_ARQOS() {
    m_axi_weights_ARQOS = ap_const_lv4_0;
}

void store_weights_5::thread_m_axi_weights_ARREGION() {
    m_axi_weights_ARREGION = ap_const_lv4_0;
}

void store_weights_5::thread_m_axi_weights_ARSIZE() {
    m_axi_weights_ARSIZE = ap_const_lv3_0;
}

void store_weights_5::thread_m_axi_weights_ARUSER() {
    m_axi_weights_ARUSER = ap_const_lv1_0;
}

void store_weights_5::thread_m_axi_weights_ARVALID() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter3.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_flatten1_reg_442_pp0_iter2_reg.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_01001.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_reg_ioackin_m_axi_weights_ARREADY.read()))) {
        m_axi_weights_ARVALID = ap_const_logic_1;
    } else {
        m_axi_weights_ARVALID = ap_const_logic_0;
    }
}

void store_weights_5::thread_m_axi_weights_AWADDR() {
    m_axi_weights_AWADDR = ap_const_lv32_0;
}

void store_weights_5::thread_m_axi_weights_AWBURST() {
    m_axi_weights_AWBURST = ap_const_lv2_0;
}

void store_weights_5::thread_m_axi_weights_AWCACHE() {
    m_axi_weights_AWCACHE = ap_const_lv4_0;
}

void store_weights_5::thread_m_axi_weights_AWID() {
    m_axi_weights_AWID = ap_const_lv1_0;
}

void store_weights_5::thread_m_axi_weights_AWLEN() {
    m_axi_weights_AWLEN = ap_const_lv32_0;
}

void store_weights_5::thread_m_axi_weights_AWLOCK() {
    m_axi_weights_AWLOCK = ap_const_lv2_0;
}

void store_weights_5::thread_m_axi_weights_AWPROT() {
    m_axi_weights_AWPROT = ap_const_lv3_0;
}

void store_weights_5::thread_m_axi_weights_AWQOS() {
    m_axi_weights_AWQOS = ap_const_lv4_0;
}

void store_weights_5::thread_m_axi_weights_AWREGION() {
    m_axi_weights_AWREGION = ap_const_lv4_0;
}

void store_weights_5::thread_m_axi_weights_AWSIZE() {
    m_axi_weights_AWSIZE = ap_const_lv3_0;
}

void store_weights_5::thread_m_axi_weights_AWUSER() {
    m_axi_weights_AWUSER = ap_const_lv1_0;
}

void store_weights_5::thread_m_axi_weights_AWVALID() {
    m_axi_weights_AWVALID = ap_const_logic_0;
}

void store_weights_5::thread_m_axi_weights_BREADY() {
    m_axi_weights_BREADY = ap_const_logic_0;
}

void store_weights_5::thread_m_axi_weights_RREADY() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter10.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_flatten1_reg_442_pp0_iter9_reg.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0))) {
        m_axi_weights_RREADY = ap_const_logic_1;
    } else {
        m_axi_weights_RREADY = ap_const_logic_0;
    }
}

void store_weights_5::thread_m_axi_weights_WDATA() {
    m_axi_weights_WDATA = ap_const_lv32_0;
}

void store_weights_5::thread_m_axi_weights_WID() {
    m_axi_weights_WID = ap_const_lv1_0;
}

void store_weights_5::thread_m_axi_weights_WLAST() {
    m_axi_weights_WLAST = ap_const_logic_0;
}

void store_weights_5::thread_m_axi_weights_WSTRB() {
    m_axi_weights_WSTRB = ap_const_lv4_0;
}

void store_weights_5::thread_m_axi_weights_WUSER() {
    m_axi_weights_WUSER = ap_const_lv1_0;
}

void store_weights_5::thread_m_axi_weights_WVALID() {
    m_axi_weights_WVALID = ap_const_logic_0;
}

void store_weights_5::thread_not_exitcond_flatten_fu_226_p2() {
    not_exitcond_flatten_fu_226_p2 = (exitcond_flatten_fu_204_p2.read() ^ ap_const_lv1_1);
}

void store_weights_5::thread_p_shl2_cast_fu_379_p1() {
    p_shl2_cast_fu_379_p1 = esl_zext<10,9>(tmp_9_fu_372_p3.read());
}

void store_weights_5::thread_p_shl3_fu_320_p1() {
    p_shl3_fu_320_p1 = esl_zext<64,14>(tmp_fu_312_p3.read());
}

void store_weights_5::thread_p_shl_cast_fu_408_p1() {
    p_shl_cast_fu_408_p1 = esl_zext<13,12>(tmp_12_fu_401_p3.read());
}

void store_weights_5::thread_sext_fu_182_p1() {
    sext_fu_182_p1 = esl_zext<64,30>(weights_offset.read());
}

void store_weights_5::thread_sum_fu_358_p2() {
    sum_fu_358_p2 = (!sext_reg_437.read().is_01() || !tmp_14_fu_352_p2.read().is_01())? sc_lv<64>(): (sc_biguint<64>(sext_reg_437.read()) + sc_biguint<64>(tmp_14_fu_352_p2.read()));
}

void store_weights_5::thread_tmp_10_fu_344_p2() {
    tmp_10_fu_344_p2 = (!tmp_4_reg_482.read().is_01() || !tmp_7_fu_339_p2.read().is_01())? sc_lv<64>(): (sc_biguint<64>(tmp_4_reg_482.read()) + sc_biguint<64>(tmp_7_fu_339_p2.read()));
}

void store_weights_5::thread_tmp_11_fu_392_p2() {
    tmp_11_fu_392_p2 = (!tmp_s_fu_383_p2.read().is_01() || !tmp_3_mid2_cast1_fu_389_p1.read().is_01())? sc_lv<10>(): (sc_biguint<10>(tmp_s_fu_383_p2.read()) + sc_biguint<10>(tmp_3_mid2_cast1_fu_389_p1.read()));
}

void store_weights_5::thread_tmp_12_fu_401_p3() {
    tmp_12_fu_401_p3 = esl_concat<10,2>(tmp_11_reg_494.read(), ap_const_lv2_0);
}

void store_weights_5::thread_tmp_13_fu_412_p2() {
    tmp_13_fu_412_p2 = (!tmp_15_cast_fu_398_p1.read().is_01() || !p_shl_cast_fu_408_p1.read().is_01())? sc_lv<13>(): (sc_biguint<13>(tmp_15_cast_fu_398_p1.read()) + sc_biguint<13>(p_shl_cast_fu_408_p1.read()));
}

void store_weights_5::thread_tmp_14_fu_352_p2() {
    tmp_14_fu_352_p2 = (!tmp_10_fu_344_p2.read().is_01() || !tmp_5_fu_349_p1.read().is_01())? sc_lv<64>(): (sc_biguint<64>(tmp_10_fu_344_p2.read()) + sc_biguint<64>(tmp_5_fu_349_p1.read()));
}

void store_weights_5::thread_tmp_15_cast_fu_398_p1() {
    tmp_15_cast_fu_398_p1 = esl_zext<13,10>(tmp_11_reg_494.read());
}

void store_weights_5::thread_tmp_15_fu_421_p2() {
    tmp_15_fu_421_p2 = (!tmp_13_fu_412_p2.read().is_01() || !tmp_5_cast_fu_418_p1.read().is_01())? sc_lv<13>(): (sc_biguint<13>(tmp_13_fu_412_p2.read()) + sc_biguint<13>(tmp_5_cast_fu_418_p1.read()));
}

void store_weights_5::thread_tmp_19_cast_fu_427_p1() {
    tmp_19_cast_fu_427_p1 = esl_zext<64,13>(tmp_15_fu_421_p2.read());
}

void store_weights_5::thread_tmp_1_fu_292_p3() {
    tmp_1_fu_292_p3 = esl_concat<7,4>(tmp_1_mid2_v_reg_451.read(), ap_const_lv4_0);
}

void store_weights_5::thread_tmp_1_mid2_cast_fu_369_p1() {
    tmp_1_mid2_cast_fu_369_p1 = esl_zext<10,7>(tmp_1_mid2_v_reg_451_pp0_iter9_reg.read());
}

void store_weights_5::thread_tmp_1_mid2_v_fu_218_p3() {
    tmp_1_mid2_v_fu_218_p3 = (!exitcond_flatten_fu_204_p2.read()[0].is_01())? sc_lv<7>(): ((exitcond_flatten_fu_204_p2.read()[0].to_bool())? i_1_fu_198_p2.read(): ap_phi_mux_i_phi_fu_138_p4.read());
}

void store_weights_5::thread_tmp_3_fu_250_p2() {
    tmp_3_fu_250_p2 = (exitcond_mid_fu_238_p2.read() | exitcond_flatten_fu_204_p2.read());
}

void store_weights_5::thread_tmp_3_mid2_cast1_fu_389_p1() {
    tmp_3_mid2_cast1_fu_389_p1 = esl_zext<10,3>(tmp_3_mid2_reg_465_pp0_iter9_reg.read());
}

void store_weights_5::thread_tmp_3_mid2_cast_fu_330_p1() {
    tmp_3_mid2_cast_fu_330_p1 = esl_zext<64,3>(tmp_3_mid2_reg_465.read());
}

void store_weights_5::thread_tmp_3_mid2_fu_264_p3() {
    tmp_3_mid2_fu_264_p3 = (!exitcond_mid_fu_238_p2.read()[0].is_01())? sc_lv<3>(): ((exitcond_mid_fu_238_p2.read()[0].to_bool())? j_1_fu_244_p2.read(): j_mid_fu_210_p3.read());
}

void store_weights_5::thread_tmp_4_cast_fu_299_p1() {
    tmp_4_cast_fu_299_p1 = esl_zext<12,11>(tmp_1_fu_292_p3.read());
}

void store_weights_5::thread_tmp_4_fu_333_p2() {
    tmp_4_fu_333_p2 = (!tmp_8_fu_324_p2.read().is_01() || !tmp_3_mid2_cast_fu_330_p1.read().is_01())? sc_lv<64>(): (sc_biguint<64>(tmp_8_fu_324_p2.read()) + sc_biguint<64>(tmp_3_mid2_cast_fu_330_p1.read()));
}

void store_weights_5::thread_tmp_5_cast_fu_418_p1() {
    tmp_5_cast_fu_418_p1 = esl_zext<13,3>(k_mid2_reg_459_pp0_iter10_reg.read());
}

void store_weights_5::thread_tmp_5_fu_349_p1() {
    tmp_5_fu_349_p1 = esl_zext<64,3>(k_mid2_reg_459_pp0_iter1_reg.read());
}

void store_weights_5::thread_tmp_6_cast_fu_308_p1() {
    tmp_6_cast_fu_308_p1 = esl_zext<64,12>(tmp_6_fu_303_p2.read());
}

void store_weights_5::thread_tmp_6_fu_303_p2() {
    tmp_6_fu_303_p2 = (!tmp_4_cast_fu_299_p1.read().is_01() || !tmp_cast_reg_432.read().is_01())? sc_lv<12>(): (sc_biguint<12>(tmp_4_cast_fu_299_p1.read()) + sc_biguint<12>(tmp_cast_reg_432.read()));
}

void store_weights_5::thread_tmp_7_fu_339_p2() {
    tmp_7_fu_339_p2 = (!ap_const_lv64_2.is_01())? sc_lv<64>(): tmp_4_reg_482.read() << (unsigned short)ap_const_lv64_2.to_uint();
}

void store_weights_5::thread_tmp_8_fu_324_p2() {
    tmp_8_fu_324_p2 = (!tmp_6_cast_fu_308_p1.read().is_01() || !p_shl3_fu_320_p1.read().is_01())? sc_lv<64>(): (sc_biguint<64>(tmp_6_cast_fu_308_p1.read()) + sc_biguint<64>(p_shl3_fu_320_p1.read()));
}

void store_weights_5::thread_tmp_9_fu_372_p3() {
    tmp_9_fu_372_p3 = esl_concat<7,2>(tmp_1_mid2_v_reg_451_pp0_iter9_reg.read(), ap_const_lv2_0);
}

void store_weights_5::thread_tmp_cast_fu_178_p1() {
    tmp_cast_fu_178_p1 = esl_zext<12,5>(input_channel.read());
}

void store_weights_5::thread_tmp_fu_312_p3() {
    tmp_fu_312_p3 = esl_concat<12,2>(tmp_6_fu_303_p2.read(), ap_const_lv2_0);
}

void store_weights_5::thread_tmp_s_fu_383_p2() {
    tmp_s_fu_383_p2 = (!tmp_1_mid2_cast_fu_369_p1.read().is_01() || !p_shl2_cast_fu_379_p1.read().is_01())? sc_lv<10>(): (sc_biguint<10>(tmp_1_mid2_cast_fu_369_p1.read()) + sc_biguint<10>(p_shl2_cast_fu_379_p1.read()));
}

void store_weights_5::thread_weights_blk_n_AR() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter3.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_flatten1_reg_442_pp0_iter2_reg.read()))) {
        weights_blk_n_AR = m_axi_weights_ARREADY.read();
    } else {
        weights_blk_n_AR = ap_const_logic_1;
    }
}

void store_weights_5::thread_weights_blk_n_R() {
    if ((esl_seteq<1,1,1>(ap_block_pp0_stage0.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter10.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_flatten1_reg_442_pp0_iter9_reg.read()))) {
        weights_blk_n_R = m_axi_weights_RVALID.read();
    } else {
        weights_blk_n_R = ap_const_logic_1;
    }
}

void store_weights_5::thread_weights_oc_address0() {
    weights_oc_address0 =  (sc_lv<12>) (tmp_19_cast_fu_427_p1.read());
}

void store_weights_5::thread_weights_oc_ce0() {
    if ((esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_enable_reg_pp0_iter11.read(), ap_const_logic_1))) {
        weights_oc_ce0 = ap_const_logic_1;
    } else {
        weights_oc_ce0 = ap_const_logic_0;
    }
}

void store_weights_5::thread_weights_oc_d0() {
    weights_oc_d0 = weights_addr_read_reg_500.read();
}

void store_weights_5::thread_weights_oc_we0() {
    if ((esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_enable_reg_pp0_iter11.read(), ap_const_logic_1) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_flatten1_reg_442_pp0_iter10_reg.read()))) {
        weights_oc_we0 = ap_const_logic_1;
    } else {
        weights_oc_we0 = ap_const_logic_0;
    }
}

void store_weights_5::thread_ap_NS_fsm() {
    switch (ap_CS_fsm.read().to_uint64()) {
        case 1 : 
            if ((esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1) && esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()))) {
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            } else {
                ap_NS_fsm = ap_ST_fsm_state1;
            }
            break;
        case 2 : 
            if ((!(esl_seteq<1,1,1>(ap_enable_reg_pp0_iter1.read(), ap_const_logic_0) && esl_seteq<1,1,1>(ap_const_boolean_0, ap_block_pp0_stage0_subdone.read()) && esl_seteq<1,1,1>(ap_enable_reg_pp0_iter0.read(), ap_const_logic_1) && esl_seteq<1,1,1>(exitcond_flatten1_fu_186_p2.read(), ap_const_lv1_1)) && !(esl_seteq<1,1,1>(ap_const_boolean_0, ap_block_pp0_stage0_subdone.read()) && esl_seteq<1,1,1>(ap_enable_reg_pp0_iter11.read(), ap_const_logic_1) && esl_seteq<1,1,1>(ap_enable_reg_pp0_iter10.read(), ap_const_logic_0)))) {
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            } else if (((esl_seteq<1,1,1>(ap_const_boolean_0, ap_block_pp0_stage0_subdone.read()) && 
  esl_seteq<1,1,1>(ap_enable_reg_pp0_iter11.read(), ap_const_logic_1) && 
  esl_seteq<1,1,1>(ap_enable_reg_pp0_iter10.read(), ap_const_logic_0)) || (esl_seteq<1,1,1>(ap_enable_reg_pp0_iter1.read(), ap_const_logic_0) && 
  esl_seteq<1,1,1>(ap_const_boolean_0, ap_block_pp0_stage0_subdone.read()) && 
  esl_seteq<1,1,1>(ap_enable_reg_pp0_iter0.read(), ap_const_logic_1) && 
  esl_seteq<1,1,1>(exitcond_flatten1_fu_186_p2.read(), ap_const_lv1_1)))) {
                ap_NS_fsm = ap_ST_fsm_state14;
            } else {
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            }
            break;
        case 4 : 
            ap_NS_fsm = ap_ST_fsm_state1;
            break;
        default : 
            ap_NS_fsm = "XXX";
            break;
    }
}

}

