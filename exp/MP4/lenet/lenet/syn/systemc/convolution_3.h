// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2018.2
// Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#ifndef _convolution_3_HH_
#define _convolution_3_HH_

#include "systemc.h"
#include "AESL_pkg.h"

#include "conv1_fadd_32ns_3bkb.h"
#include "conv1_fmul_32ns_3cud.h"

namespace ap_rtl {

struct convolution_3 : public sc_module {
    // Port declarations 19
    sc_in_clk ap_clk;
    sc_in< sc_logic > ap_rst;
    sc_in< sc_logic > ap_start;
    sc_out< sc_logic > ap_done;
    sc_out< sc_logic > ap_idle;
    sc_out< sc_logic > ap_ready;
    sc_out< sc_lv<11> > input_r_address0;
    sc_out< sc_logic > input_r_ce0;
    sc_in< sc_lv<32> > input_r_q0;
    sc_out< sc_lv<12> > weights_address0;
    sc_out< sc_logic > weights_ce0;
    sc_in< sc_lv<32> > weights_q0;
    sc_out< sc_lv<4> > bias_address0;
    sc_out< sc_logic > bias_ce0;
    sc_in< sc_lv<32> > bias_q0;
    sc_out< sc_lv<11> > output_r_address0;
    sc_out< sc_logic > output_r_ce0;
    sc_out< sc_logic > output_r_we0;
    sc_out< sc_lv<32> > output_r_d0;
    sc_signal< sc_logic > ap_var_for_const0;


    // Module declarations
    convolution_3(sc_module_name name);
    SC_HAS_PROCESS(convolution_3);

    ~convolution_3();

    sc_trace_file* mVcdFile;

    conv1_fadd_32ns_3bkb<1,5,32,32,32>* conv1_fadd_32ns_3bkb_U40;
    conv1_fmul_32ns_3cud<1,4,32,32,32>* conv1_fmul_32ns_3cud_U41;
    sc_signal< sc_lv<16> > ap_CS_fsm;
    sc_signal< sc_logic > ap_CS_fsm_state1;
    sc_signal< sc_lv<8> > indvar_flatten4_reg_204;
    sc_signal< sc_lv<3> > m_reg_215;
    sc_signal< sc_lv<6> > indvar_flatten_reg_226;
    sc_signal< sc_lv<3> > n_reg_237;
    sc_signal< sc_lv<32> > sum_2_reg_248;
    sc_signal< sc_lv<3> > ci_reg_260;
    sc_signal< sc_lv<11> > indvar_flatten_next3_fu_286_p2;
    sc_signal< sc_lv<11> > indvar_flatten_next3_reg_778;
    sc_signal< sc_logic > ap_CS_fsm_state2;
    sc_signal< sc_lv<1> > exitcond_flatten_fu_292_p2;
    sc_signal< sc_lv<1> > exitcond_flatten_reg_783;
    sc_signal< sc_lv<1> > exitcond_flatten3_fu_280_p2;
    sc_signal< sc_lv<4> > h_mid_fu_298_p3;
    sc_signal< sc_lv<4> > h_mid_reg_791;
    sc_signal< sc_lv<5> > tmp_mid2_v_fu_312_p3;
    sc_signal< sc_lv<5> > tmp_mid2_v_reg_797;
    sc_signal< sc_logic > ap_CS_fsm_state3;
    sc_signal< sc_lv<64> > tmp_mid2_fu_319_p1;
    sc_signal< sc_lv<64> > tmp_mid2_reg_802;
    sc_signal< sc_lv<10> > tmp_180_cast_fu_353_p1;
    sc_signal< sc_lv<10> > tmp_180_cast_reg_807;
    sc_signal< sc_lv<4> > w_mid2_fu_390_p3;
    sc_signal< sc_lv<4> > w_mid2_reg_812;
    sc_signal< sc_lv<4> > tmp_mid2_41_fu_398_p3;
    sc_signal< sc_lv<4> > tmp_mid2_41_reg_821;
    sc_signal< sc_lv<12> > tmp_154_fu_435_p2;
    sc_signal< sc_lv<12> > tmp_154_reg_827;
    sc_signal< sc_lv<1> > exitcond_flatten4_fu_450_p2;
    sc_signal< sc_lv<1> > exitcond_flatten4_reg_832;
    sc_signal< sc_logic > ap_CS_fsm_pp0_stage0;
    sc_signal< bool > ap_block_state4_pp0_stage0_iter0;
    sc_signal< bool > ap_block_state9_pp0_stage0_iter1;
    sc_signal< bool > ap_block_state14_pp0_stage0_iter2;
    sc_signal< bool > ap_block_pp0_stage0_11001;
    sc_signal< sc_lv<1> > exitcond_flatten4_reg_832_pp0_iter1_reg;
    sc_signal< sc_lv<1> > exitcond_flatten4_reg_832_pp0_iter2_reg;
    sc_signal< sc_lv<8> > indvar_flatten_next4_fu_456_p2;
    sc_signal< sc_lv<8> > indvar_flatten_next4_reg_836;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter0;
    sc_signal< sc_lv<3> > tmp_14_mid2_v_fu_482_p3;
    sc_signal< sc_lv<3> > tmp_14_mid2_v_reg_841;
    sc_signal< sc_lv<3> > ci_mid2_fu_520_p3;
    sc_signal< sc_lv<3> > ci_mid2_reg_848;
    sc_signal< sc_lv<3> > tmp_17_mid2_fu_532_p3;
    sc_signal< sc_lv<3> > tmp_17_mid2_reg_855;
    sc_signal< sc_lv<4> > tmp_157_fu_552_p3;
    sc_signal< sc_lv<4> > tmp_157_reg_861;
    sc_signal< sc_lv<10> > tmp_166_fu_564_p2;
    sc_signal< sc_lv<10> > tmp_166_reg_866;
    sc_signal< sc_lv<6> > indvar_flatten_next_fu_575_p3;
    sc_signal< sc_lv<6> > indvar_flatten_next_reg_872;
    sc_signal< sc_lv<12> > tmp_165_fu_672_p2;
    sc_signal< sc_lv<12> > tmp_165_reg_877;
    sc_signal< sc_logic > ap_CS_fsm_pp0_stage1;
    sc_signal< bool > ap_block_state5_pp0_stage1_iter0;
    sc_signal< bool > ap_block_state10_pp0_stage1_iter1;
    sc_signal< bool > ap_block_state15_pp0_stage1_iter2;
    sc_signal< bool > ap_block_pp0_stage1_11001;
    sc_signal< sc_lv<13> > tmp_173_fu_726_p2;
    sc_signal< sc_lv<13> > tmp_173_reg_882;
    sc_signal< sc_logic > ap_CS_fsm_pp0_stage2;
    sc_signal< bool > ap_block_state6_pp0_stage2_iter0;
    sc_signal< bool > ap_block_state11_pp0_stage2_iter1;
    sc_signal< bool > ap_block_state16_pp0_stage2_iter2;
    sc_signal< bool > ap_block_pp0_stage2_11001;
    sc_signal< sc_lv<32> > weights_load_reg_897;
    sc_signal< sc_logic > ap_CS_fsm_pp0_stage3;
    sc_signal< bool > ap_block_state7_pp0_stage3_iter0;
    sc_signal< bool > ap_block_state12_pp0_stage3_iter1;
    sc_signal< bool > ap_block_pp0_stage3_11001;
    sc_signal< sc_lv<32> > input_load_reg_902;
    sc_signal< sc_lv<3> > ci_2_fu_740_p2;
    sc_signal< sc_lv<3> > ci_2_reg_907;
    sc_signal< sc_logic > ap_CS_fsm_pp0_stage4;
    sc_signal< bool > ap_block_state8_pp0_stage4_iter0;
    sc_signal< bool > ap_block_state13_pp0_stage4_iter1;
    sc_signal< bool > ap_block_pp0_stage4_11001;
    sc_signal< sc_lv<32> > grp_fu_276_p2;
    sc_signal< sc_lv<32> > tmp_21_reg_912;
    sc_signal< sc_lv<32> > grp_fu_271_p2;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter2;
    sc_signal< sc_logic > ap_CS_fsm_state17;
    sc_signal< sc_lv<12> > tmp_155_fu_748_p2;
    sc_signal< sc_lv<12> > tmp_155_reg_927;
    sc_signal< sc_lv<4> > w_4_fu_753_p2;
    sc_signal< sc_lv<4> > w_4_reg_932;
    sc_signal< sc_lv<8> > indvar_flatten_next2_fu_764_p3;
    sc_signal< sc_lv<8> > indvar_flatten_next2_reg_937;
    sc_signal< sc_lv<32> > bias_load_reg_942;
    sc_signal< sc_logic > ap_CS_fsm_state18;
    sc_signal< sc_lv<32> > tmp_12_reg_947;
    sc_signal< sc_logic > ap_CS_fsm_state23;
    sc_signal< bool > ap_block_pp0_stage0_subdone;
    sc_signal< sc_logic > ap_condition_pp0_exit_iter0_state4;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter1;
    sc_signal< bool > ap_block_pp0_stage4_subdone;
    sc_signal< bool > ap_block_pp0_stage2_subdone;
    sc_signal< sc_lv<11> > indvar_flatten2_reg_146;
    sc_signal< sc_logic > ap_CS_fsm_state24;
    sc_signal< sc_lv<5> > co_reg_157;
    sc_signal< sc_lv<8> > indvar_flatten3_reg_169;
    sc_signal< sc_lv<4> > h_reg_181;
    sc_signal< sc_lv<4> > w_reg_192;
    sc_signal< sc_lv<8> > ap_phi_mux_indvar_flatten4_phi_fu_208_p4;
    sc_signal< bool > ap_block_pp0_stage0;
    sc_signal< sc_lv<3> > ap_phi_mux_m_phi_fu_219_p4;
    sc_signal< sc_lv<6> > ap_phi_mux_indvar_flatten_phi_fu_230_p4;
    sc_signal< sc_lv<3> > ap_phi_mux_n_phi_fu_241_p4;
    sc_signal< sc_lv<32> > ap_phi_mux_sum_2_phi_fu_252_p4;
    sc_signal< sc_lv<3> > ap_phi_mux_ci_phi_fu_264_p4;
    sc_signal< sc_lv<64> > tmp_198_cast_fu_732_p1;
    sc_signal< bool > ap_block_pp0_stage2;
    sc_signal< sc_lv<64> > tmp_205_cast_fu_736_p1;
    sc_signal< sc_lv<64> > tmp_189_cast_fu_771_p1;
    sc_signal< sc_lv<32> > grp_fu_271_p0;
    sc_signal< sc_lv<32> > grp_fu_271_p1;
    sc_signal< bool > ap_block_pp0_stage3;
    sc_signal< sc_logic > ap_CS_fsm_state19;
    sc_signal< bool > ap_block_pp0_stage4;
    sc_signal< sc_lv<5> > co_3_fu_306_p2;
    sc_signal< sc_lv<8> > tmp_fu_323_p3;
    sc_signal< sc_lv<6> > tmp_s_fu_335_p3;
    sc_signal< sc_lv<9> > p_shl4_cast_fu_331_p1;
    sc_signal< sc_lv<9> > p_shl5_cast_fu_343_p1;
    sc_signal< sc_lv<9> > tmp_150_fu_347_p2;
    sc_signal< sc_lv<1> > exitcond_fu_368_p2;
    sc_signal< sc_lv<1> > not_exitcond_flatten_2_fu_363_p2;
    sc_signal< sc_lv<1> > exitcond3_mid_fu_374_p2;
    sc_signal< sc_lv<1> > tmp_152_fu_385_p2;
    sc_signal< sc_lv<4> > h_3_fu_380_p2;
    sc_signal< sc_lv<9> > tmp_mid2_cast_fu_405_p1;
    sc_signal< sc_lv<9> > tmp_151_fu_357_p2;
    sc_signal< sc_lv<9> > tmp_153_fu_409_p2;
    sc_signal< sc_lv<10> > tmp_148_fu_423_p3;
    sc_signal< sc_lv<12> > p_shl_cast_fu_415_p3;
    sc_signal< sc_lv<12> > p_shl1_cast_fu_431_p1;
    sc_signal< sc_lv<4> > n_cast_fu_441_p1;
    sc_signal< sc_lv<1> > exitcond_flatten1_fu_468_p2;
    sc_signal< sc_lv<3> > m_1_fu_462_p2;
    sc_signal< sc_lv<1> > exitcond1_fu_496_p2;
    sc_signal< sc_lv<1> > not_exitcond_flatten_fu_490_p2;
    sc_signal< sc_lv<3> > n_mid_fu_474_p3;
    sc_signal< sc_lv<1> > exitcond_mid_fu_502_p2;
    sc_signal< sc_lv<1> > tmp_156_fu_514_p2;
    sc_signal< sc_lv<3> > n_2_fu_508_p2;
    sc_signal< sc_lv<4> > n_cast_mid1_fu_528_p1;
    sc_signal< sc_lv<4> > tmp_18_fu_445_p2;
    sc_signal< sc_lv<4> > tmp_18_mid1_fu_540_p2;
    sc_signal< sc_lv<4> > tmp_149_fu_545_p3;
    sc_signal< sc_lv<10> > tmp_20_cast_fu_560_p1;
    sc_signal< sc_lv<6> > indvar_flatten_op_fu_569_p2;
    sc_signal< bool > ap_block_pp0_stage1;
    sc_signal< sc_lv<4> > tmp_16_mid2_v_v_fu_586_p1;
    sc_signal< sc_lv<4> > tmp_16_mid2_v_fu_589_p2;
    sc_signal< sc_lv<7> > tmp_158_fu_604_p3;
    sc_signal< sc_lv<4> > tmp_159_fu_615_p3;
    sc_signal< sc_lv<8> > p_shl10_cast_fu_611_p1;
    sc_signal< sc_lv<8> > p_shl11_cast_fu_622_p1;
    sc_signal< sc_lv<8> > tmp_160_fu_626_p2;
    sc_signal< sc_lv<9> > tmp_193_cast_fu_632_p1;
    sc_signal< sc_lv<9> > tmp_16_mid2_cast_fu_594_p1;
    sc_signal< sc_lv<9> > tmp_161_fu_636_p2;
    sc_signal< sc_lv<8> > tmp_162_fu_642_p1;
    sc_signal< sc_lv<10> > tmp_163_fu_654_p3;
    sc_signal< sc_lv<12> > p_shl8_cast_fu_646_p3;
    sc_signal< sc_lv<12> > p_shl9_cast_fu_662_p1;
    sc_signal< sc_lv<12> > tmp_164_fu_666_p2;
    sc_signal< sc_lv<12> > tmp_19_mid2_cast_fu_601_p1;
    sc_signal< sc_lv<12> > tmp_167_fu_681_p3;
    sc_signal< sc_lv<64> > tmp_199_cast_fu_678_p1;
    sc_signal< sc_lv<64> > p_shl7_fu_688_p1;
    sc_signal< sc_lv<64> > tmp_168_fu_692_p2;
    sc_signal< sc_lv<64> > tmp_14_mid2_fu_583_p1;
    sc_signal< sc_lv<64> > tmp_169_fu_698_p2;
    sc_signal< sc_lv<11> > tmp_171_fu_708_p1;
    sc_signal< sc_lv<13> > tmp_170_fu_704_p1;
    sc_signal< sc_lv<13> > p_shl6_cast_fu_712_p3;
    sc_signal< sc_lv<13> > tmp_172_fu_720_p2;
    sc_signal< sc_lv<13> > tmp_17_mid2_cast_fu_598_p1;
    sc_signal< sc_lv<12> > tmp_13_cast_fu_745_p1;
    sc_signal< sc_lv<8> > indvar_flatten28_op_fu_758_p2;
    sc_signal< sc_lv<16> > ap_NS_fsm;
    sc_signal< bool > ap_block_pp0_stage1_subdone;
    sc_signal< bool > ap_block_pp0_stage3_subdone;
    sc_signal< sc_logic > ap_idle_pp0;
    sc_signal< sc_logic > ap_enable_pp0;
    static const sc_logic ap_const_logic_1;
    static const sc_logic ap_const_logic_0;
    static const sc_lv<16> ap_ST_fsm_state1;
    static const sc_lv<16> ap_ST_fsm_state2;
    static const sc_lv<16> ap_ST_fsm_state3;
    static const sc_lv<16> ap_ST_fsm_pp0_stage0;
    static const sc_lv<16> ap_ST_fsm_pp0_stage1;
    static const sc_lv<16> ap_ST_fsm_pp0_stage2;
    static const sc_lv<16> ap_ST_fsm_pp0_stage3;
    static const sc_lv<16> ap_ST_fsm_pp0_stage4;
    static const sc_lv<16> ap_ST_fsm_state17;
    static const sc_lv<16> ap_ST_fsm_state18;
    static const sc_lv<16> ap_ST_fsm_state19;
    static const sc_lv<16> ap_ST_fsm_state20;
    static const sc_lv<16> ap_ST_fsm_state21;
    static const sc_lv<16> ap_ST_fsm_state22;
    static const sc_lv<16> ap_ST_fsm_state23;
    static const sc_lv<16> ap_ST_fsm_state24;
    static const bool ap_const_boolean_1;
    static const sc_lv<32> ap_const_lv32_0;
    static const sc_lv<32> ap_const_lv32_1;
    static const sc_lv<1> ap_const_lv1_0;
    static const sc_lv<32> ap_const_lv32_2;
    static const sc_lv<32> ap_const_lv32_3;
    static const bool ap_const_boolean_0;
    static const sc_lv<32> ap_const_lv32_4;
    static const sc_lv<32> ap_const_lv32_5;
    static const sc_lv<32> ap_const_lv32_6;
    static const sc_lv<32> ap_const_lv32_7;
    static const sc_lv<32> ap_const_lv32_8;
    static const sc_lv<32> ap_const_lv32_9;
    static const sc_lv<32> ap_const_lv32_E;
    static const sc_lv<1> ap_const_lv1_1;
    static const sc_lv<11> ap_const_lv11_0;
    static const sc_lv<32> ap_const_lv32_F;
    static const sc_lv<5> ap_const_lv5_0;
    static const sc_lv<8> ap_const_lv8_0;
    static const sc_lv<4> ap_const_lv4_0;
    static const sc_lv<3> ap_const_lv3_0;
    static const sc_lv<6> ap_const_lv6_0;
    static const sc_lv<32> ap_const_lv32_A;
    static const sc_lv<11> ap_const_lv11_640;
    static const sc_lv<11> ap_const_lv11_1;
    static const sc_lv<8> ap_const_lv8_64;
    static const sc_lv<5> ap_const_lv5_1;
    static const sc_lv<4> ap_const_lv4_A;
    static const sc_lv<4> ap_const_lv4_1;
    static const sc_lv<8> ap_const_lv8_96;
    static const sc_lv<8> ap_const_lv8_1;
    static const sc_lv<3> ap_const_lv3_1;
    static const sc_lv<6> ap_const_lv6_1E;
    static const sc_lv<3> ap_const_lv3_6;
    static const sc_lv<6> ap_const_lv6_1;
    static const sc_lv<2> ap_const_lv2_0;
    // Thread declarations
    void thread_ap_var_for_const0();
    void thread_ap_clk_no_reset_();
    void thread_ap_CS_fsm_pp0_stage0();
    void thread_ap_CS_fsm_pp0_stage1();
    void thread_ap_CS_fsm_pp0_stage2();
    void thread_ap_CS_fsm_pp0_stage3();
    void thread_ap_CS_fsm_pp0_stage4();
    void thread_ap_CS_fsm_state1();
    void thread_ap_CS_fsm_state17();
    void thread_ap_CS_fsm_state18();
    void thread_ap_CS_fsm_state19();
    void thread_ap_CS_fsm_state2();
    void thread_ap_CS_fsm_state23();
    void thread_ap_CS_fsm_state24();
    void thread_ap_CS_fsm_state3();
    void thread_ap_block_pp0_stage0();
    void thread_ap_block_pp0_stage0_11001();
    void thread_ap_block_pp0_stage0_subdone();
    void thread_ap_block_pp0_stage1();
    void thread_ap_block_pp0_stage1_11001();
    void thread_ap_block_pp0_stage1_subdone();
    void thread_ap_block_pp0_stage2();
    void thread_ap_block_pp0_stage2_11001();
    void thread_ap_block_pp0_stage2_subdone();
    void thread_ap_block_pp0_stage3();
    void thread_ap_block_pp0_stage3_11001();
    void thread_ap_block_pp0_stage3_subdone();
    void thread_ap_block_pp0_stage4();
    void thread_ap_block_pp0_stage4_11001();
    void thread_ap_block_pp0_stage4_subdone();
    void thread_ap_block_state10_pp0_stage1_iter1();
    void thread_ap_block_state11_pp0_stage2_iter1();
    void thread_ap_block_state12_pp0_stage3_iter1();
    void thread_ap_block_state13_pp0_stage4_iter1();
    void thread_ap_block_state14_pp0_stage0_iter2();
    void thread_ap_block_state15_pp0_stage1_iter2();
    void thread_ap_block_state16_pp0_stage2_iter2();
    void thread_ap_block_state4_pp0_stage0_iter0();
    void thread_ap_block_state5_pp0_stage1_iter0();
    void thread_ap_block_state6_pp0_stage2_iter0();
    void thread_ap_block_state7_pp0_stage3_iter0();
    void thread_ap_block_state8_pp0_stage4_iter0();
    void thread_ap_block_state9_pp0_stage0_iter1();
    void thread_ap_condition_pp0_exit_iter0_state4();
    void thread_ap_done();
    void thread_ap_enable_pp0();
    void thread_ap_idle();
    void thread_ap_idle_pp0();
    void thread_ap_phi_mux_ci_phi_fu_264_p4();
    void thread_ap_phi_mux_indvar_flatten4_phi_fu_208_p4();
    void thread_ap_phi_mux_indvar_flatten_phi_fu_230_p4();
    void thread_ap_phi_mux_m_phi_fu_219_p4();
    void thread_ap_phi_mux_n_phi_fu_241_p4();
    void thread_ap_phi_mux_sum_2_phi_fu_252_p4();
    void thread_ap_ready();
    void thread_bias_address0();
    void thread_bias_ce0();
    void thread_ci_2_fu_740_p2();
    void thread_ci_mid2_fu_520_p3();
    void thread_co_3_fu_306_p2();
    void thread_exitcond1_fu_496_p2();
    void thread_exitcond3_mid_fu_374_p2();
    void thread_exitcond_flatten1_fu_468_p2();
    void thread_exitcond_flatten3_fu_280_p2();
    void thread_exitcond_flatten4_fu_450_p2();
    void thread_exitcond_flatten_fu_292_p2();
    void thread_exitcond_fu_368_p2();
    void thread_exitcond_mid_fu_502_p2();
    void thread_grp_fu_271_p0();
    void thread_grp_fu_271_p1();
    void thread_h_3_fu_380_p2();
    void thread_h_mid_fu_298_p3();
    void thread_indvar_flatten28_op_fu_758_p2();
    void thread_indvar_flatten_next2_fu_764_p3();
    void thread_indvar_flatten_next3_fu_286_p2();
    void thread_indvar_flatten_next4_fu_456_p2();
    void thread_indvar_flatten_next_fu_575_p3();
    void thread_indvar_flatten_op_fu_569_p2();
    void thread_input_r_address0();
    void thread_input_r_ce0();
    void thread_m_1_fu_462_p2();
    void thread_n_2_fu_508_p2();
    void thread_n_cast_fu_441_p1();
    void thread_n_cast_mid1_fu_528_p1();
    void thread_n_mid_fu_474_p3();
    void thread_not_exitcond_flatten_2_fu_363_p2();
    void thread_not_exitcond_flatten_fu_490_p2();
    void thread_output_r_address0();
    void thread_output_r_ce0();
    void thread_output_r_d0();
    void thread_output_r_we0();
    void thread_p_shl10_cast_fu_611_p1();
    void thread_p_shl11_cast_fu_622_p1();
    void thread_p_shl1_cast_fu_431_p1();
    void thread_p_shl4_cast_fu_331_p1();
    void thread_p_shl5_cast_fu_343_p1();
    void thread_p_shl6_cast_fu_712_p3();
    void thread_p_shl7_fu_688_p1();
    void thread_p_shl8_cast_fu_646_p3();
    void thread_p_shl9_cast_fu_662_p1();
    void thread_p_shl_cast_fu_415_p3();
    void thread_tmp_13_cast_fu_745_p1();
    void thread_tmp_148_fu_423_p3();
    void thread_tmp_149_fu_545_p3();
    void thread_tmp_14_mid2_fu_583_p1();
    void thread_tmp_14_mid2_v_fu_482_p3();
    void thread_tmp_150_fu_347_p2();
    void thread_tmp_151_fu_357_p2();
    void thread_tmp_152_fu_385_p2();
    void thread_tmp_153_fu_409_p2();
    void thread_tmp_154_fu_435_p2();
    void thread_tmp_155_fu_748_p2();
    void thread_tmp_156_fu_514_p2();
    void thread_tmp_157_fu_552_p3();
    void thread_tmp_158_fu_604_p3();
    void thread_tmp_159_fu_615_p3();
    void thread_tmp_160_fu_626_p2();
    void thread_tmp_161_fu_636_p2();
    void thread_tmp_162_fu_642_p1();
    void thread_tmp_163_fu_654_p3();
    void thread_tmp_164_fu_666_p2();
    void thread_tmp_165_fu_672_p2();
    void thread_tmp_166_fu_564_p2();
    void thread_tmp_167_fu_681_p3();
    void thread_tmp_168_fu_692_p2();
    void thread_tmp_169_fu_698_p2();
    void thread_tmp_16_mid2_cast_fu_594_p1();
    void thread_tmp_16_mid2_v_fu_589_p2();
    void thread_tmp_16_mid2_v_v_fu_586_p1();
    void thread_tmp_170_fu_704_p1();
    void thread_tmp_171_fu_708_p1();
    void thread_tmp_172_fu_720_p2();
    void thread_tmp_173_fu_726_p2();
    void thread_tmp_17_mid2_cast_fu_598_p1();
    void thread_tmp_17_mid2_fu_532_p3();
    void thread_tmp_180_cast_fu_353_p1();
    void thread_tmp_189_cast_fu_771_p1();
    void thread_tmp_18_fu_445_p2();
    void thread_tmp_18_mid1_fu_540_p2();
    void thread_tmp_193_cast_fu_632_p1();
    void thread_tmp_198_cast_fu_732_p1();
    void thread_tmp_199_cast_fu_678_p1();
    void thread_tmp_19_mid2_cast_fu_601_p1();
    void thread_tmp_205_cast_fu_736_p1();
    void thread_tmp_20_cast_fu_560_p1();
    void thread_tmp_fu_323_p3();
    void thread_tmp_mid2_41_fu_398_p3();
    void thread_tmp_mid2_cast_fu_405_p1();
    void thread_tmp_mid2_fu_319_p1();
    void thread_tmp_mid2_v_fu_312_p3();
    void thread_tmp_s_fu_335_p3();
    void thread_w_4_fu_753_p2();
    void thread_w_mid2_fu_390_p3();
    void thread_weights_address0();
    void thread_weights_ce0();
    void thread_ap_NS_fsm();
};

}

using namespace ap_rtl;

#endif
