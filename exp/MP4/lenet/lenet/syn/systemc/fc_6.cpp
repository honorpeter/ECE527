// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2018.2
// Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#include "fc_6.h"
#include "AESL_pkg.h"

using namespace std;

namespace ap_rtl {

const sc_logic fc_6::ap_const_logic_1 = sc_dt::Log_1;
const sc_logic fc_6::ap_const_logic_0 = sc_dt::Log_0;
const sc_lv<13> fc_6::ap_ST_fsm_state1 = "1";
const sc_lv<13> fc_6::ap_ST_fsm_state2 = "10";
const sc_lv<13> fc_6::ap_ST_fsm_state3 = "100";
const sc_lv<13> fc_6::ap_ST_fsm_state4 = "1000";
const sc_lv<13> fc_6::ap_ST_fsm_state5 = "10000";
const sc_lv<13> fc_6::ap_ST_fsm_state6 = "100000";
const sc_lv<13> fc_6::ap_ST_fsm_state7 = "1000000";
const sc_lv<13> fc_6::ap_ST_fsm_pp0_stage0 = "10000000";
const sc_lv<13> fc_6::ap_ST_fsm_pp0_stage1 = "100000000";
const sc_lv<13> fc_6::ap_ST_fsm_pp0_stage2 = "1000000000";
const sc_lv<13> fc_6::ap_ST_fsm_pp0_stage3 = "10000000000";
const sc_lv<13> fc_6::ap_ST_fsm_pp0_stage4 = "100000000000";
const sc_lv<13> fc_6::ap_ST_fsm_state33 = "1000000000000";
const bool fc_6::ap_const_boolean_1 = true;
const sc_lv<32> fc_6::ap_const_lv32_0 = "00000000000000000000000000000000";
const sc_lv<1> fc_6::ap_const_lv1_0 = "0";
const sc_lv<3> fc_6::ap_const_lv3_0 = "000";
const sc_lv<2> fc_6::ap_const_lv2_0 = "00";
const sc_lv<4> fc_6::ap_const_lv4_0 = "0000";
const sc_lv<32> fc_6::ap_const_lv32_8 = "1000";
const bool fc_6::ap_const_boolean_0 = false;
const sc_lv<32> fc_6::ap_const_lv32_A = "1010";
const sc_lv<1> fc_6::ap_const_lv1_1 = "1";
const sc_lv<32> fc_6::ap_const_lv32_6 = "110";
const sc_lv<32> fc_6::ap_const_lv32_7 = "111";
const sc_lv<32> fc_6::ap_const_lv32_B = "1011";
const sc_lv<32> fc_6::ap_const_lv32_9 = "1001";
const sc_lv<11> fc_6::ap_const_lv11_0 = "00000000000";
const sc_lv<7> fc_6::ap_const_lv7_0 = "0000000";
const sc_lv<32> fc_6::ap_const_lv32_1 = "1";
const sc_lv<11> fc_6::ap_const_lv11_4B0 = "10010110000";
const sc_lv<11> fc_6::ap_const_lv11_1 = "1";
const sc_lv<4> fc_6::ap_const_lv4_1 = "1";
const sc_lv<7> fc_6::ap_const_lv7_78 = "1111000";
const sc_lv<7> fc_6::ap_const_lv7_1 = "1";
const sc_lv<32> fc_6::ap_const_lv32_C = "1100";

fc_6::fc_6(sc_module_name name) : sc_module(name), mVcdFile(0) {
    conv1_fadd_32ns_3bkb_U82 = new conv1_fadd_32ns_3bkb<1,5,32,32,32>("conv1_fadd_32ns_3bkb_U82");
    conv1_fadd_32ns_3bkb_U82->clk(ap_clk);
    conv1_fadd_32ns_3bkb_U82->reset(ap_rst);
    conv1_fadd_32ns_3bkb_U82->din0(grp_fu_189_p0);
    conv1_fadd_32ns_3bkb_U82->din1(grp_fu_189_p1);
    conv1_fadd_32ns_3bkb_U82->ce(grp_fu_189_ce);
    conv1_fadd_32ns_3bkb_U82->dout(grp_fu_189_p2);
    conv1_fmul_32ns_3cud_U83 = new conv1_fmul_32ns_3cud<1,4,32,32,32>("conv1_fmul_32ns_3cud_U83");
    conv1_fmul_32ns_3cud_U83->clk(ap_clk);
    conv1_fmul_32ns_3cud_U83->reset(ap_rst);
    conv1_fmul_32ns_3cud_U83->din0(weights_addr_read_reg_404);
    conv1_fmul_32ns_3cud_U83->din1(input_0_0_load_reg_409);
    conv1_fmul_32ns_3cud_U83->ce(grp_fu_193_ce);
    conv1_fmul_32ns_3cud_U83->dout(grp_fu_193_p2);

    SC_METHOD(thread_ap_clk_no_reset_);
    dont_initialize();
    sensitive << ( ap_clk.pos() );

    SC_METHOD(thread_ap_CS_fsm_pp0_stage0);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_pp0_stage1);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_pp0_stage2);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_pp0_stage3);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_pp0_stage4);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state1);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state33);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state7);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_block_pp0_stage0);

    SC_METHOD(thread_ap_block_pp0_stage0_11001);

    SC_METHOD(thread_ap_block_pp0_stage0_subdone);

    SC_METHOD(thread_ap_block_pp0_stage1);

    SC_METHOD(thread_ap_block_pp0_stage1_01001);

    SC_METHOD(thread_ap_block_pp0_stage1_11001);
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_block_state9_io );

    SC_METHOD(thread_ap_block_pp0_stage1_subdone);
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_block_state9_io );

    SC_METHOD(thread_ap_block_pp0_stage2);

    SC_METHOD(thread_ap_block_pp0_stage2_11001);

    SC_METHOD(thread_ap_block_pp0_stage2_subdone);

    SC_METHOD(thread_ap_block_pp0_stage3);

    SC_METHOD(thread_ap_block_pp0_stage3_11001);
    sensitive << ( m_axi_weights_RVALID );
    sensitive << ( m_axi_bias_RVALID );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( exitcond_flatten_reg_352_pp0_iter1_reg );
    sensitive << ( ap_enable_reg_pp0_iter3 );
    sensitive << ( ifzero_reg_395_pp0_iter3_reg );

    SC_METHOD(thread_ap_block_pp0_stage3_subdone);
    sensitive << ( m_axi_weights_RVALID );
    sensitive << ( m_axi_bias_RVALID );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( exitcond_flatten_reg_352_pp0_iter1_reg );
    sensitive << ( ap_enable_reg_pp0_iter3 );
    sensitive << ( ifzero_reg_395_pp0_iter3_reg );

    SC_METHOD(thread_ap_block_pp0_stage4);

    SC_METHOD(thread_ap_block_pp0_stage4_11001);

    SC_METHOD(thread_ap_block_pp0_stage4_subdone);

    SC_METHOD(thread_ap_block_state10_pp0_stage2_iter0);

    SC_METHOD(thread_ap_block_state11_pp0_stage3_iter0);

    SC_METHOD(thread_ap_block_state12_pp0_stage4_iter0);

    SC_METHOD(thread_ap_block_state13_pp0_stage0_iter1);

    SC_METHOD(thread_ap_block_state14_pp0_stage1_iter1);

    SC_METHOD(thread_ap_block_state15_pp0_stage2_iter1);

    SC_METHOD(thread_ap_block_state16_pp0_stage3_iter1);
    sensitive << ( m_axi_weights_RVALID );
    sensitive << ( exitcond_flatten_reg_352_pp0_iter1_reg );

    SC_METHOD(thread_ap_block_state17_pp0_stage4_iter1);

    SC_METHOD(thread_ap_block_state18_pp0_stage0_iter2);

    SC_METHOD(thread_ap_block_state19_pp0_stage1_iter2);

    SC_METHOD(thread_ap_block_state20_pp0_stage2_iter2);

    SC_METHOD(thread_ap_block_state21_pp0_stage3_iter2);

    SC_METHOD(thread_ap_block_state22_pp0_stage4_iter2);

    SC_METHOD(thread_ap_block_state23_pp0_stage0_iter3);

    SC_METHOD(thread_ap_block_state24_pp0_stage1_iter3);

    SC_METHOD(thread_ap_block_state25_pp0_stage2_iter3);

    SC_METHOD(thread_ap_block_state26_pp0_stage3_iter3);
    sensitive << ( m_axi_bias_RVALID );
    sensitive << ( ifzero_reg_395_pp0_iter3_reg );

    SC_METHOD(thread_ap_block_state27_pp0_stage4_iter3);

    SC_METHOD(thread_ap_block_state28_pp0_stage0_iter4);

    SC_METHOD(thread_ap_block_state29_pp0_stage1_iter4);

    SC_METHOD(thread_ap_block_state30_pp0_stage2_iter4);

    SC_METHOD(thread_ap_block_state31_pp0_stage3_iter4);

    SC_METHOD(thread_ap_block_state32_pp0_stage4_iter4);

    SC_METHOD(thread_ap_block_state8_pp0_stage0_iter0);

    SC_METHOD(thread_ap_block_state9_io);
    sensitive << ( exitcond_flatten_reg_352 );
    sensitive << ( ap_sig_ioackin_m_axi_weights_ARREADY );

    SC_METHOD(thread_ap_block_state9_pp0_stage1_iter0);

    SC_METHOD(thread_ap_condition_641);
    sensitive << ( ap_CS_fsm_pp0_stage1 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( exitcond_flatten_reg_352 );

    SC_METHOD(thread_ap_condition_pp0_exit_iter0_state8);
    sensitive << ( exitcond_flatten_fu_212_p2 );

    SC_METHOD(thread_ap_done);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( ap_CS_fsm_state33 );

    SC_METHOD(thread_ap_enable_pp0);
    sensitive << ( ap_idle_pp0 );

    SC_METHOD(thread_ap_idle);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );

    SC_METHOD(thread_ap_idle_pp0);
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_enable_reg_pp0_iter3 );
    sensitive << ( ap_enable_reg_pp0_iter4 );
    sensitive << ( ap_enable_reg_pp0_iter2 );

    SC_METHOD(thread_ap_phi_mux_c_phi_fu_182_p4);
    sensitive << ( exitcond_flatten_reg_352 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( c_reg_178 );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( c_3_reg_389 );
    sensitive << ( ap_block_pp0_stage0 );

    SC_METHOD(thread_ap_phi_mux_indvar_flatten_phi_fu_148_p4);
    sensitive << ( exitcond_flatten_reg_352 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( indvar_flatten_reg_144 );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( indvar_flatten_next_reg_356 );
    sensitive << ( ap_block_pp0_stage0 );

    SC_METHOD(thread_ap_phi_mux_n_phi_fu_159_p4);
    sensitive << ( exitcond_flatten_reg_352 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( n_reg_155 );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( tmp_mid2_v_reg_372 );
    sensitive << ( ap_block_pp0_stage0 );

    SC_METHOD(thread_ap_phi_mux_tmp_s_phi_fu_170_p4);
    sensitive << ( ap_CS_fsm_pp0_stage3 );
    sensitive << ( ap_block_pp0_stage3 );
    sensitive << ( ap_enable_reg_pp0_iter3 );
    sensitive << ( tmp_s_reg_166 );
    sensitive << ( exitcond_flatten_reg_352_pp0_iter3_reg );
    sensitive << ( tmp_9_reg_424 );

    SC_METHOD(thread_ap_ready);
    sensitive << ( ap_CS_fsm_state33 );

    SC_METHOD(thread_ap_sig_ioackin_m_axi_bias_ARREADY);
    sensitive << ( m_axi_bias_ARREADY );
    sensitive << ( ap_reg_ioackin_m_axi_bias_ARREADY );

    SC_METHOD(thread_ap_sig_ioackin_m_axi_weights_ARREADY);
    sensitive << ( m_axi_weights_ARREADY );
    sensitive << ( ap_reg_ioackin_m_axi_weights_ARREADY );

    SC_METHOD(thread_bias_blk_n_AR);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( m_axi_bias_ARREADY );

    SC_METHOD(thread_bias_blk_n_R);
    sensitive << ( m_axi_bias_RVALID );
    sensitive << ( ap_CS_fsm_pp0_stage3 );
    sensitive << ( ap_block_pp0_stage3 );
    sensitive << ( ap_enable_reg_pp0_iter3 );
    sensitive << ( ifzero_reg_395_pp0_iter3_reg );

    SC_METHOD(thread_c_3_fu_315_p2);
    sensitive << ( c_mid2_reg_366 );

    SC_METHOD(thread_c_mid2_fu_236_p3);
    sensitive << ( exitcond_fu_230_p2 );
    sensitive << ( ap_phi_mux_c_phi_fu_182_p4 );

    SC_METHOD(thread_exitcond_flatten_fu_212_p2);
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( ap_phi_mux_indvar_flatten_phi_fu_148_p4 );

    SC_METHOD(thread_exitcond_fu_230_p2);
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( exitcond_flatten_fu_212_p2 );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( ap_phi_mux_c_phi_fu_182_p4 );

    SC_METHOD(thread_grp_fu_189_ce);
    sensitive << ( ap_CS_fsm_pp0_stage1 );
    sensitive << ( ap_CS_fsm_pp0_stage3 );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( ap_block_pp0_stage1_11001 );
    sensitive << ( ap_CS_fsm_pp0_stage4 );
    sensitive << ( ap_block_pp0_stage4_11001 );
    sensitive << ( ap_CS_fsm_pp0_stage2 );
    sensitive << ( ap_block_pp0_stage2_11001 );
    sensitive << ( ap_block_pp0_stage3_11001 );

    SC_METHOD(thread_grp_fu_189_p0);
    sensitive << ( ap_CS_fsm_pp0_stage3 );
    sensitive << ( ap_block_pp0_stage3 );
    sensitive << ( ap_enable_reg_pp0_iter3 );
    sensitive << ( ap_CS_fsm_pp0_stage4 );
    sensitive << ( tmp_mid2_fu_329_p3 );
    sensitive << ( tmp_9_reg_424 );
    sensitive << ( ap_enable_reg_pp0_iter2 );
    sensitive << ( ap_block_pp0_stage4 );

    SC_METHOD(thread_grp_fu_189_p1);
    sensitive << ( ap_CS_fsm_pp0_stage3 );
    sensitive << ( ap_block_pp0_stage3 );
    sensitive << ( ap_enable_reg_pp0_iter3 );
    sensitive << ( ap_CS_fsm_pp0_stage4 );
    sensitive << ( tmp_8_reg_414 );
    sensitive << ( bias_addr_read_reg_430 );
    sensitive << ( ap_enable_reg_pp0_iter2 );
    sensitive << ( ap_block_pp0_stage4 );

    SC_METHOD(thread_grp_fu_193_ce);
    sensitive << ( ap_CS_fsm_pp0_stage1 );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( ap_block_pp0_stage1_11001 );
    sensitive << ( ap_CS_fsm_pp0_stage4 );
    sensitive << ( ap_block_pp0_stage4_11001 );
    sensitive << ( ap_CS_fsm_pp0_stage2 );
    sensitive << ( ap_block_pp0_stage2_11001 );

    SC_METHOD(thread_ifzero_fu_320_p2);
    sensitive << ( exitcond_flatten_reg_352 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( c_3_reg_389 );

    SC_METHOD(thread_indvar_flatten_next_fu_218_p2);
    sensitive << ( ap_phi_mux_indvar_flatten_phi_fu_148_p4 );

    SC_METHOD(thread_input_0_0_address0);
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_CS_fsm_pp0_stage2 );
    sensitive << ( tmp_7_fu_325_p1 );
    sensitive << ( ap_block_pp0_stage2 );

    SC_METHOD(thread_input_0_0_ce0);
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_CS_fsm_pp0_stage2 );
    sensitive << ( ap_block_pp0_stage2_11001 );

    SC_METHOD(thread_m_axi_bias_ARADDR);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( sext2_fu_197_p1 );
    sensitive << ( ap_reg_ioackin_m_axi_bias_ARREADY );

    SC_METHOD(thread_m_axi_bias_ARBURST);

    SC_METHOD(thread_m_axi_bias_ARCACHE);

    SC_METHOD(thread_m_axi_bias_ARID);

    SC_METHOD(thread_m_axi_bias_ARLEN);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( ap_reg_ioackin_m_axi_bias_ARREADY );

    SC_METHOD(thread_m_axi_bias_ARLOCK);

    SC_METHOD(thread_m_axi_bias_ARPROT);

    SC_METHOD(thread_m_axi_bias_ARQOS);

    SC_METHOD(thread_m_axi_bias_ARREGION);

    SC_METHOD(thread_m_axi_bias_ARSIZE);

    SC_METHOD(thread_m_axi_bias_ARUSER);

    SC_METHOD(thread_m_axi_bias_ARVALID);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( ap_reg_ioackin_m_axi_bias_ARREADY );

    SC_METHOD(thread_m_axi_bias_AWADDR);

    SC_METHOD(thread_m_axi_bias_AWBURST);

    SC_METHOD(thread_m_axi_bias_AWCACHE);

    SC_METHOD(thread_m_axi_bias_AWID);

    SC_METHOD(thread_m_axi_bias_AWLEN);

    SC_METHOD(thread_m_axi_bias_AWLOCK);

    SC_METHOD(thread_m_axi_bias_AWPROT);

    SC_METHOD(thread_m_axi_bias_AWQOS);

    SC_METHOD(thread_m_axi_bias_AWREGION);

    SC_METHOD(thread_m_axi_bias_AWSIZE);

    SC_METHOD(thread_m_axi_bias_AWUSER);

    SC_METHOD(thread_m_axi_bias_AWVALID);

    SC_METHOD(thread_m_axi_bias_BREADY);

    SC_METHOD(thread_m_axi_bias_RREADY);
    sensitive << ( ap_CS_fsm_pp0_stage3 );
    sensitive << ( ap_enable_reg_pp0_iter3 );
    sensitive << ( ifzero_reg_395_pp0_iter3_reg );
    sensitive << ( ap_block_pp0_stage3_11001 );

    SC_METHOD(thread_m_axi_bias_WDATA);

    SC_METHOD(thread_m_axi_bias_WID);

    SC_METHOD(thread_m_axi_bias_WLAST);

    SC_METHOD(thread_m_axi_bias_WSTRB);

    SC_METHOD(thread_m_axi_bias_WUSER);

    SC_METHOD(thread_m_axi_bias_WVALID);

    SC_METHOD(thread_m_axi_weights_ARADDR);
    sensitive << ( ap_CS_fsm_pp0_stage1 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( exitcond_flatten_reg_352 );
    sensitive << ( sum_cast_fu_305_p1 );
    sensitive << ( ap_reg_ioackin_m_axi_weights_ARREADY );
    sensitive << ( ap_block_pp0_stage1_01001 );

    SC_METHOD(thread_m_axi_weights_ARBURST);

    SC_METHOD(thread_m_axi_weights_ARCACHE);

    SC_METHOD(thread_m_axi_weights_ARID);

    SC_METHOD(thread_m_axi_weights_ARLEN);
    sensitive << ( ap_CS_fsm_pp0_stage1 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( exitcond_flatten_reg_352 );
    sensitive << ( ap_reg_ioackin_m_axi_weights_ARREADY );
    sensitive << ( ap_block_pp0_stage1_01001 );

    SC_METHOD(thread_m_axi_weights_ARLOCK);

    SC_METHOD(thread_m_axi_weights_ARPROT);

    SC_METHOD(thread_m_axi_weights_ARQOS);

    SC_METHOD(thread_m_axi_weights_ARREGION);

    SC_METHOD(thread_m_axi_weights_ARSIZE);

    SC_METHOD(thread_m_axi_weights_ARUSER);

    SC_METHOD(thread_m_axi_weights_ARVALID);
    sensitive << ( ap_CS_fsm_pp0_stage1 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( exitcond_flatten_reg_352 );
    sensitive << ( ap_reg_ioackin_m_axi_weights_ARREADY );
    sensitive << ( ap_block_pp0_stage1_01001 );

    SC_METHOD(thread_m_axi_weights_AWADDR);

    SC_METHOD(thread_m_axi_weights_AWBURST);

    SC_METHOD(thread_m_axi_weights_AWCACHE);

    SC_METHOD(thread_m_axi_weights_AWID);

    SC_METHOD(thread_m_axi_weights_AWLEN);

    SC_METHOD(thread_m_axi_weights_AWLOCK);

    SC_METHOD(thread_m_axi_weights_AWPROT);

    SC_METHOD(thread_m_axi_weights_AWQOS);

    SC_METHOD(thread_m_axi_weights_AWREGION);

    SC_METHOD(thread_m_axi_weights_AWSIZE);

    SC_METHOD(thread_m_axi_weights_AWUSER);

    SC_METHOD(thread_m_axi_weights_AWVALID);

    SC_METHOD(thread_m_axi_weights_BREADY);

    SC_METHOD(thread_m_axi_weights_RREADY);
    sensitive << ( ap_CS_fsm_pp0_stage3 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( exitcond_flatten_reg_352_pp0_iter1_reg );
    sensitive << ( ap_block_pp0_stage3_11001 );

    SC_METHOD(thread_m_axi_weights_WDATA);

    SC_METHOD(thread_m_axi_weights_WID);

    SC_METHOD(thread_m_axi_weights_WLAST);

    SC_METHOD(thread_m_axi_weights_WSTRB);

    SC_METHOD(thread_m_axi_weights_WUSER);

    SC_METHOD(thread_m_axi_weights_WVALID);

    SC_METHOD(thread_n_1_fu_224_p2);
    sensitive << ( ap_phi_mux_n_phi_fu_159_p4 );

    SC_METHOD(thread_output_r_address0);
    sensitive << ( ap_CS_fsm_pp0_stage4 );
    sensitive << ( ap_enable_reg_pp0_iter4 );
    sensitive << ( tmp_mid2_26_fu_337_p1 );
    sensitive << ( ap_block_pp0_stage4 );

    SC_METHOD(thread_output_r_ce0);
    sensitive << ( ap_CS_fsm_pp0_stage4 );
    sensitive << ( ap_block_pp0_stage4_11001 );
    sensitive << ( ap_enable_reg_pp0_iter4 );

    SC_METHOD(thread_output_r_d0);
    sensitive << ( ap_CS_fsm_pp0_stage4 );
    sensitive << ( tmp_6_reg_435 );
    sensitive << ( ap_enable_reg_pp0_iter4 );
    sensitive << ( ap_block_pp0_stage4 );

    SC_METHOD(thread_output_r_we0);
    sensitive << ( ap_CS_fsm_pp0_stage4 );
    sensitive << ( ap_block_pp0_stage4_11001 );
    sensitive << ( ifzero_reg_395_pp0_iter4_reg );
    sensitive << ( ap_enable_reg_pp0_iter4 );

    SC_METHOD(thread_p_shl6_cast_fu_272_p1);
    sensitive << ( tmp_61_fu_264_p3 );

    SC_METHOD(thread_p_shl_cast_fu_260_p1);
    sensitive << ( tmp_fu_252_p3 );

    SC_METHOD(thread_sext2_fu_197_p1);
    sensitive << ( bias_offset );

    SC_METHOD(thread_sum_cast_fu_305_p1);
    sensitive << ( sum_reg_378 );

    SC_METHOD(thread_sum_fu_300_p2);
    sensitive << ( weights_offset_cast_reg_347 );
    sensitive << ( tmp_88_cast_fu_296_p1 );

    SC_METHOD(thread_tmp_61_fu_264_p3);
    sensitive << ( tmp_mid2_v_fu_244_p3 );

    SC_METHOD(thread_tmp_62_fu_276_p2);
    sensitive << ( p_shl_cast_fu_260_p1 );
    sensitive << ( p_shl6_cast_fu_272_p1 );

    SC_METHOD(thread_tmp_63_fu_290_p2);
    sensitive << ( tmp_87_cast_fu_282_p1 );
    sensitive << ( tmp_7_cast_fu_286_p1 );

    SC_METHOD(thread_tmp_7_cast_fu_286_p1);
    sensitive << ( c_mid2_fu_236_p3 );

    SC_METHOD(thread_tmp_7_fu_325_p1);
    sensitive << ( c_mid2_reg_366_pp0_iter1_reg );

    SC_METHOD(thread_tmp_87_cast_fu_282_p1);
    sensitive << ( tmp_62_fu_276_p2 );

    SC_METHOD(thread_tmp_88_cast_fu_296_p1);
    sensitive << ( tmp_63_fu_290_p2 );

    SC_METHOD(thread_tmp_fu_252_p3);
    sensitive << ( tmp_mid2_v_fu_244_p3 );

    SC_METHOD(thread_tmp_mid2_26_fu_337_p1);
    sensitive << ( tmp_mid2_v_reg_372_pp0_iter4_reg );

    SC_METHOD(thread_tmp_mid2_fu_329_p3);
    sensitive << ( exitcond_reg_361_pp0_iter2_reg );
    sensitive << ( ap_phi_mux_tmp_s_phi_fu_170_p4 );

    SC_METHOD(thread_tmp_mid2_v_fu_244_p3);
    sensitive << ( exitcond_fu_230_p2 );
    sensitive << ( ap_phi_mux_n_phi_fu_159_p4 );
    sensitive << ( n_1_fu_224_p2 );

    SC_METHOD(thread_weights_blk_n_AR);
    sensitive << ( m_axi_weights_ARREADY );
    sensitive << ( ap_CS_fsm_pp0_stage1 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_block_pp0_stage1 );
    sensitive << ( exitcond_flatten_reg_352 );

    SC_METHOD(thread_weights_blk_n_R);
    sensitive << ( m_axi_weights_RVALID );
    sensitive << ( ap_CS_fsm_pp0_stage3 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_block_pp0_stage3 );
    sensitive << ( exitcond_flatten_reg_352_pp0_iter1_reg );

    SC_METHOD(thread_weights_offset_cast_fu_208_p1);
    sensitive << ( weights_offset );

    SC_METHOD(thread_ap_NS_fsm);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_enable_reg_pp0_iter3 );
    sensitive << ( ap_sig_ioackin_m_axi_bias_ARREADY );
    sensitive << ( exitcond_flatten_fu_212_p2 );
    sensitive << ( ap_CS_fsm_pp0_stage4 );
    sensitive << ( ap_enable_reg_pp0_iter4 );
    sensitive << ( ap_block_pp0_stage0_subdone );
    sensitive << ( ap_block_pp0_stage4_subdone );
    sensitive << ( ap_block_pp0_stage1_subdone );
    sensitive << ( ap_block_pp0_stage2_subdone );
    sensitive << ( ap_block_pp0_stage3_subdone );

    ap_CS_fsm = "0000000000001";
    ap_enable_reg_pp0_iter0 = SC_LOGIC_0;
    ap_enable_reg_pp0_iter1 = SC_LOGIC_0;
    ap_enable_reg_pp0_iter3 = SC_LOGIC_0;
    ap_enable_reg_pp0_iter4 = SC_LOGIC_0;
    ap_enable_reg_pp0_iter2 = SC_LOGIC_0;
    ap_reg_ioackin_m_axi_bias_ARREADY = SC_LOGIC_0;
    ap_reg_ioackin_m_axi_weights_ARREADY = SC_LOGIC_0;
    static int apTFileNum = 0;
    stringstream apTFilenSS;
    apTFilenSS << "fc_6_sc_trace_" << apTFileNum ++;
    string apTFn = apTFilenSS.str();
    mVcdFile = sc_create_vcd_trace_file(apTFn.c_str());
    mVcdFile->set_time_unit(1, SC_PS);
    if (1) {
#ifdef __HLS_TRACE_LEVEL_PORT_HIER__
    sc_trace(mVcdFile, ap_clk, "(port)ap_clk");
    sc_trace(mVcdFile, ap_rst, "(port)ap_rst");
    sc_trace(mVcdFile, ap_start, "(port)ap_start");
    sc_trace(mVcdFile, ap_done, "(port)ap_done");
    sc_trace(mVcdFile, ap_idle, "(port)ap_idle");
    sc_trace(mVcdFile, ap_ready, "(port)ap_ready");
    sc_trace(mVcdFile, input_0_0_address0, "(port)input_0_0_address0");
    sc_trace(mVcdFile, input_0_0_ce0, "(port)input_0_0_ce0");
    sc_trace(mVcdFile, input_0_0_q0, "(port)input_0_0_q0");
    sc_trace(mVcdFile, m_axi_weights_AWVALID, "(port)m_axi_weights_AWVALID");
    sc_trace(mVcdFile, m_axi_weights_AWREADY, "(port)m_axi_weights_AWREADY");
    sc_trace(mVcdFile, m_axi_weights_AWADDR, "(port)m_axi_weights_AWADDR");
    sc_trace(mVcdFile, m_axi_weights_AWID, "(port)m_axi_weights_AWID");
    sc_trace(mVcdFile, m_axi_weights_AWLEN, "(port)m_axi_weights_AWLEN");
    sc_trace(mVcdFile, m_axi_weights_AWSIZE, "(port)m_axi_weights_AWSIZE");
    sc_trace(mVcdFile, m_axi_weights_AWBURST, "(port)m_axi_weights_AWBURST");
    sc_trace(mVcdFile, m_axi_weights_AWLOCK, "(port)m_axi_weights_AWLOCK");
    sc_trace(mVcdFile, m_axi_weights_AWCACHE, "(port)m_axi_weights_AWCACHE");
    sc_trace(mVcdFile, m_axi_weights_AWPROT, "(port)m_axi_weights_AWPROT");
    sc_trace(mVcdFile, m_axi_weights_AWQOS, "(port)m_axi_weights_AWQOS");
    sc_trace(mVcdFile, m_axi_weights_AWREGION, "(port)m_axi_weights_AWREGION");
    sc_trace(mVcdFile, m_axi_weights_AWUSER, "(port)m_axi_weights_AWUSER");
    sc_trace(mVcdFile, m_axi_weights_WVALID, "(port)m_axi_weights_WVALID");
    sc_trace(mVcdFile, m_axi_weights_WREADY, "(port)m_axi_weights_WREADY");
    sc_trace(mVcdFile, m_axi_weights_WDATA, "(port)m_axi_weights_WDATA");
    sc_trace(mVcdFile, m_axi_weights_WSTRB, "(port)m_axi_weights_WSTRB");
    sc_trace(mVcdFile, m_axi_weights_WLAST, "(port)m_axi_weights_WLAST");
    sc_trace(mVcdFile, m_axi_weights_WID, "(port)m_axi_weights_WID");
    sc_trace(mVcdFile, m_axi_weights_WUSER, "(port)m_axi_weights_WUSER");
    sc_trace(mVcdFile, m_axi_weights_ARVALID, "(port)m_axi_weights_ARVALID");
    sc_trace(mVcdFile, m_axi_weights_ARREADY, "(port)m_axi_weights_ARREADY");
    sc_trace(mVcdFile, m_axi_weights_ARADDR, "(port)m_axi_weights_ARADDR");
    sc_trace(mVcdFile, m_axi_weights_ARID, "(port)m_axi_weights_ARID");
    sc_trace(mVcdFile, m_axi_weights_ARLEN, "(port)m_axi_weights_ARLEN");
    sc_trace(mVcdFile, m_axi_weights_ARSIZE, "(port)m_axi_weights_ARSIZE");
    sc_trace(mVcdFile, m_axi_weights_ARBURST, "(port)m_axi_weights_ARBURST");
    sc_trace(mVcdFile, m_axi_weights_ARLOCK, "(port)m_axi_weights_ARLOCK");
    sc_trace(mVcdFile, m_axi_weights_ARCACHE, "(port)m_axi_weights_ARCACHE");
    sc_trace(mVcdFile, m_axi_weights_ARPROT, "(port)m_axi_weights_ARPROT");
    sc_trace(mVcdFile, m_axi_weights_ARQOS, "(port)m_axi_weights_ARQOS");
    sc_trace(mVcdFile, m_axi_weights_ARREGION, "(port)m_axi_weights_ARREGION");
    sc_trace(mVcdFile, m_axi_weights_ARUSER, "(port)m_axi_weights_ARUSER");
    sc_trace(mVcdFile, m_axi_weights_RVALID, "(port)m_axi_weights_RVALID");
    sc_trace(mVcdFile, m_axi_weights_RREADY, "(port)m_axi_weights_RREADY");
    sc_trace(mVcdFile, m_axi_weights_RDATA, "(port)m_axi_weights_RDATA");
    sc_trace(mVcdFile, m_axi_weights_RLAST, "(port)m_axi_weights_RLAST");
    sc_trace(mVcdFile, m_axi_weights_RID, "(port)m_axi_weights_RID");
    sc_trace(mVcdFile, m_axi_weights_RUSER, "(port)m_axi_weights_RUSER");
    sc_trace(mVcdFile, m_axi_weights_RRESP, "(port)m_axi_weights_RRESP");
    sc_trace(mVcdFile, m_axi_weights_BVALID, "(port)m_axi_weights_BVALID");
    sc_trace(mVcdFile, m_axi_weights_BREADY, "(port)m_axi_weights_BREADY");
    sc_trace(mVcdFile, m_axi_weights_BRESP, "(port)m_axi_weights_BRESP");
    sc_trace(mVcdFile, m_axi_weights_BID, "(port)m_axi_weights_BID");
    sc_trace(mVcdFile, m_axi_weights_BUSER, "(port)m_axi_weights_BUSER");
    sc_trace(mVcdFile, weights_offset, "(port)weights_offset");
    sc_trace(mVcdFile, m_axi_bias_AWVALID, "(port)m_axi_bias_AWVALID");
    sc_trace(mVcdFile, m_axi_bias_AWREADY, "(port)m_axi_bias_AWREADY");
    sc_trace(mVcdFile, m_axi_bias_AWADDR, "(port)m_axi_bias_AWADDR");
    sc_trace(mVcdFile, m_axi_bias_AWID, "(port)m_axi_bias_AWID");
    sc_trace(mVcdFile, m_axi_bias_AWLEN, "(port)m_axi_bias_AWLEN");
    sc_trace(mVcdFile, m_axi_bias_AWSIZE, "(port)m_axi_bias_AWSIZE");
    sc_trace(mVcdFile, m_axi_bias_AWBURST, "(port)m_axi_bias_AWBURST");
    sc_trace(mVcdFile, m_axi_bias_AWLOCK, "(port)m_axi_bias_AWLOCK");
    sc_trace(mVcdFile, m_axi_bias_AWCACHE, "(port)m_axi_bias_AWCACHE");
    sc_trace(mVcdFile, m_axi_bias_AWPROT, "(port)m_axi_bias_AWPROT");
    sc_trace(mVcdFile, m_axi_bias_AWQOS, "(port)m_axi_bias_AWQOS");
    sc_trace(mVcdFile, m_axi_bias_AWREGION, "(port)m_axi_bias_AWREGION");
    sc_trace(mVcdFile, m_axi_bias_AWUSER, "(port)m_axi_bias_AWUSER");
    sc_trace(mVcdFile, m_axi_bias_WVALID, "(port)m_axi_bias_WVALID");
    sc_trace(mVcdFile, m_axi_bias_WREADY, "(port)m_axi_bias_WREADY");
    sc_trace(mVcdFile, m_axi_bias_WDATA, "(port)m_axi_bias_WDATA");
    sc_trace(mVcdFile, m_axi_bias_WSTRB, "(port)m_axi_bias_WSTRB");
    sc_trace(mVcdFile, m_axi_bias_WLAST, "(port)m_axi_bias_WLAST");
    sc_trace(mVcdFile, m_axi_bias_WID, "(port)m_axi_bias_WID");
    sc_trace(mVcdFile, m_axi_bias_WUSER, "(port)m_axi_bias_WUSER");
    sc_trace(mVcdFile, m_axi_bias_ARVALID, "(port)m_axi_bias_ARVALID");
    sc_trace(mVcdFile, m_axi_bias_ARREADY, "(port)m_axi_bias_ARREADY");
    sc_trace(mVcdFile, m_axi_bias_ARADDR, "(port)m_axi_bias_ARADDR");
    sc_trace(mVcdFile, m_axi_bias_ARID, "(port)m_axi_bias_ARID");
    sc_trace(mVcdFile, m_axi_bias_ARLEN, "(port)m_axi_bias_ARLEN");
    sc_trace(mVcdFile, m_axi_bias_ARSIZE, "(port)m_axi_bias_ARSIZE");
    sc_trace(mVcdFile, m_axi_bias_ARBURST, "(port)m_axi_bias_ARBURST");
    sc_trace(mVcdFile, m_axi_bias_ARLOCK, "(port)m_axi_bias_ARLOCK");
    sc_trace(mVcdFile, m_axi_bias_ARCACHE, "(port)m_axi_bias_ARCACHE");
    sc_trace(mVcdFile, m_axi_bias_ARPROT, "(port)m_axi_bias_ARPROT");
    sc_trace(mVcdFile, m_axi_bias_ARQOS, "(port)m_axi_bias_ARQOS");
    sc_trace(mVcdFile, m_axi_bias_ARREGION, "(port)m_axi_bias_ARREGION");
    sc_trace(mVcdFile, m_axi_bias_ARUSER, "(port)m_axi_bias_ARUSER");
    sc_trace(mVcdFile, m_axi_bias_RVALID, "(port)m_axi_bias_RVALID");
    sc_trace(mVcdFile, m_axi_bias_RREADY, "(port)m_axi_bias_RREADY");
    sc_trace(mVcdFile, m_axi_bias_RDATA, "(port)m_axi_bias_RDATA");
    sc_trace(mVcdFile, m_axi_bias_RLAST, "(port)m_axi_bias_RLAST");
    sc_trace(mVcdFile, m_axi_bias_RID, "(port)m_axi_bias_RID");
    sc_trace(mVcdFile, m_axi_bias_RUSER, "(port)m_axi_bias_RUSER");
    sc_trace(mVcdFile, m_axi_bias_RRESP, "(port)m_axi_bias_RRESP");
    sc_trace(mVcdFile, m_axi_bias_BVALID, "(port)m_axi_bias_BVALID");
    sc_trace(mVcdFile, m_axi_bias_BREADY, "(port)m_axi_bias_BREADY");
    sc_trace(mVcdFile, m_axi_bias_BRESP, "(port)m_axi_bias_BRESP");
    sc_trace(mVcdFile, m_axi_bias_BID, "(port)m_axi_bias_BID");
    sc_trace(mVcdFile, m_axi_bias_BUSER, "(port)m_axi_bias_BUSER");
    sc_trace(mVcdFile, bias_offset, "(port)bias_offset");
    sc_trace(mVcdFile, output_r_address0, "(port)output_r_address0");
    sc_trace(mVcdFile, output_r_ce0, "(port)output_r_ce0");
    sc_trace(mVcdFile, output_r_we0, "(port)output_r_we0");
    sc_trace(mVcdFile, output_r_d0, "(port)output_r_d0");
#endif
#ifdef __HLS_TRACE_LEVEL_INT__
    sc_trace(mVcdFile, ap_CS_fsm, "ap_CS_fsm");
    sc_trace(mVcdFile, ap_CS_fsm_state1, "ap_CS_fsm_state1");
    sc_trace(mVcdFile, weights_blk_n_AR, "weights_blk_n_AR");
    sc_trace(mVcdFile, ap_CS_fsm_pp0_stage1, "ap_CS_fsm_pp0_stage1");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter0, "ap_enable_reg_pp0_iter0");
    sc_trace(mVcdFile, ap_block_pp0_stage1, "ap_block_pp0_stage1");
    sc_trace(mVcdFile, exitcond_flatten_reg_352, "exitcond_flatten_reg_352");
    sc_trace(mVcdFile, weights_blk_n_R, "weights_blk_n_R");
    sc_trace(mVcdFile, ap_CS_fsm_pp0_stage3, "ap_CS_fsm_pp0_stage3");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter1, "ap_enable_reg_pp0_iter1");
    sc_trace(mVcdFile, ap_block_pp0_stage3, "ap_block_pp0_stage3");
    sc_trace(mVcdFile, exitcond_flatten_reg_352_pp0_iter1_reg, "exitcond_flatten_reg_352_pp0_iter1_reg");
    sc_trace(mVcdFile, bias_blk_n_AR, "bias_blk_n_AR");
    sc_trace(mVcdFile, bias_blk_n_R, "bias_blk_n_R");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter3, "ap_enable_reg_pp0_iter3");
    sc_trace(mVcdFile, ifzero_reg_395, "ifzero_reg_395");
    sc_trace(mVcdFile, ifzero_reg_395_pp0_iter3_reg, "ifzero_reg_395_pp0_iter3_reg");
    sc_trace(mVcdFile, indvar_flatten_reg_144, "indvar_flatten_reg_144");
    sc_trace(mVcdFile, n_reg_155, "n_reg_155");
    sc_trace(mVcdFile, tmp_s_reg_166, "tmp_s_reg_166");
    sc_trace(mVcdFile, c_reg_178, "c_reg_178");
    sc_trace(mVcdFile, ap_sig_ioackin_m_axi_bias_ARREADY, "ap_sig_ioackin_m_axi_bias_ARREADY");
    sc_trace(mVcdFile, weights_offset_cast_fu_208_p1, "weights_offset_cast_fu_208_p1");
    sc_trace(mVcdFile, weights_offset_cast_reg_347, "weights_offset_cast_reg_347");
    sc_trace(mVcdFile, ap_CS_fsm_state7, "ap_CS_fsm_state7");
    sc_trace(mVcdFile, exitcond_flatten_fu_212_p2, "exitcond_flatten_fu_212_p2");
    sc_trace(mVcdFile, ap_CS_fsm_pp0_stage0, "ap_CS_fsm_pp0_stage0");
    sc_trace(mVcdFile, ap_block_state8_pp0_stage0_iter0, "ap_block_state8_pp0_stage0_iter0");
    sc_trace(mVcdFile, ap_block_state13_pp0_stage0_iter1, "ap_block_state13_pp0_stage0_iter1");
    sc_trace(mVcdFile, ap_block_state18_pp0_stage0_iter2, "ap_block_state18_pp0_stage0_iter2");
    sc_trace(mVcdFile, ap_block_state23_pp0_stage0_iter3, "ap_block_state23_pp0_stage0_iter3");
    sc_trace(mVcdFile, ap_block_state28_pp0_stage0_iter4, "ap_block_state28_pp0_stage0_iter4");
    sc_trace(mVcdFile, ap_block_pp0_stage0_11001, "ap_block_pp0_stage0_11001");
    sc_trace(mVcdFile, exitcond_flatten_reg_352_pp0_iter2_reg, "exitcond_flatten_reg_352_pp0_iter2_reg");
    sc_trace(mVcdFile, exitcond_flatten_reg_352_pp0_iter3_reg, "exitcond_flatten_reg_352_pp0_iter3_reg");
    sc_trace(mVcdFile, indvar_flatten_next_fu_218_p2, "indvar_flatten_next_fu_218_p2");
    sc_trace(mVcdFile, indvar_flatten_next_reg_356, "indvar_flatten_next_reg_356");
    sc_trace(mVcdFile, exitcond_fu_230_p2, "exitcond_fu_230_p2");
    sc_trace(mVcdFile, exitcond_reg_361, "exitcond_reg_361");
    sc_trace(mVcdFile, exitcond_reg_361_pp0_iter1_reg, "exitcond_reg_361_pp0_iter1_reg");
    sc_trace(mVcdFile, exitcond_reg_361_pp0_iter2_reg, "exitcond_reg_361_pp0_iter2_reg");
    sc_trace(mVcdFile, c_mid2_fu_236_p3, "c_mid2_fu_236_p3");
    sc_trace(mVcdFile, c_mid2_reg_366, "c_mid2_reg_366");
    sc_trace(mVcdFile, c_mid2_reg_366_pp0_iter1_reg, "c_mid2_reg_366_pp0_iter1_reg");
    sc_trace(mVcdFile, tmp_mid2_v_fu_244_p3, "tmp_mid2_v_fu_244_p3");
    sc_trace(mVcdFile, tmp_mid2_v_reg_372, "tmp_mid2_v_reg_372");
    sc_trace(mVcdFile, tmp_mid2_v_reg_372_pp0_iter1_reg, "tmp_mid2_v_reg_372_pp0_iter1_reg");
    sc_trace(mVcdFile, tmp_mid2_v_reg_372_pp0_iter2_reg, "tmp_mid2_v_reg_372_pp0_iter2_reg");
    sc_trace(mVcdFile, tmp_mid2_v_reg_372_pp0_iter3_reg, "tmp_mid2_v_reg_372_pp0_iter3_reg");
    sc_trace(mVcdFile, tmp_mid2_v_reg_372_pp0_iter4_reg, "tmp_mid2_v_reg_372_pp0_iter4_reg");
    sc_trace(mVcdFile, sum_fu_300_p2, "sum_fu_300_p2");
    sc_trace(mVcdFile, sum_reg_378, "sum_reg_378");
    sc_trace(mVcdFile, ap_block_state9_pp0_stage1_iter0, "ap_block_state9_pp0_stage1_iter0");
    sc_trace(mVcdFile, ap_sig_ioackin_m_axi_weights_ARREADY, "ap_sig_ioackin_m_axi_weights_ARREADY");
    sc_trace(mVcdFile, ap_block_state9_io, "ap_block_state9_io");
    sc_trace(mVcdFile, ap_block_state14_pp0_stage1_iter1, "ap_block_state14_pp0_stage1_iter1");
    sc_trace(mVcdFile, ap_block_state19_pp0_stage1_iter2, "ap_block_state19_pp0_stage1_iter2");
    sc_trace(mVcdFile, ap_block_state24_pp0_stage1_iter3, "ap_block_state24_pp0_stage1_iter3");
    sc_trace(mVcdFile, ap_block_state29_pp0_stage1_iter4, "ap_block_state29_pp0_stage1_iter4");
    sc_trace(mVcdFile, ap_block_pp0_stage1_11001, "ap_block_pp0_stage1_11001");
    sc_trace(mVcdFile, c_3_fu_315_p2, "c_3_fu_315_p2");
    sc_trace(mVcdFile, c_3_reg_389, "c_3_reg_389");
    sc_trace(mVcdFile, ap_CS_fsm_pp0_stage4, "ap_CS_fsm_pp0_stage4");
    sc_trace(mVcdFile, ap_block_state12_pp0_stage4_iter0, "ap_block_state12_pp0_stage4_iter0");
    sc_trace(mVcdFile, ap_block_state17_pp0_stage4_iter1, "ap_block_state17_pp0_stage4_iter1");
    sc_trace(mVcdFile, ap_block_state22_pp0_stage4_iter2, "ap_block_state22_pp0_stage4_iter2");
    sc_trace(mVcdFile, ap_block_state27_pp0_stage4_iter3, "ap_block_state27_pp0_stage4_iter3");
    sc_trace(mVcdFile, ap_block_state32_pp0_stage4_iter4, "ap_block_state32_pp0_stage4_iter4");
    sc_trace(mVcdFile, ap_block_pp0_stage4_11001, "ap_block_pp0_stage4_11001");
    sc_trace(mVcdFile, ifzero_fu_320_p2, "ifzero_fu_320_p2");
    sc_trace(mVcdFile, ifzero_reg_395_pp0_iter2_reg, "ifzero_reg_395_pp0_iter2_reg");
    sc_trace(mVcdFile, ifzero_reg_395_pp0_iter4_reg, "ifzero_reg_395_pp0_iter4_reg");
    sc_trace(mVcdFile, ap_CS_fsm_pp0_stage2, "ap_CS_fsm_pp0_stage2");
    sc_trace(mVcdFile, ap_block_state10_pp0_stage2_iter0, "ap_block_state10_pp0_stage2_iter0");
    sc_trace(mVcdFile, ap_block_state15_pp0_stage2_iter1, "ap_block_state15_pp0_stage2_iter1");
    sc_trace(mVcdFile, ap_block_state20_pp0_stage2_iter2, "ap_block_state20_pp0_stage2_iter2");
    sc_trace(mVcdFile, ap_block_state25_pp0_stage2_iter3, "ap_block_state25_pp0_stage2_iter3");
    sc_trace(mVcdFile, ap_block_state30_pp0_stage2_iter4, "ap_block_state30_pp0_stage2_iter4");
    sc_trace(mVcdFile, ap_block_pp0_stage2_11001, "ap_block_pp0_stage2_11001");
    sc_trace(mVcdFile, weights_addr_read_reg_404, "weights_addr_read_reg_404");
    sc_trace(mVcdFile, ap_block_state11_pp0_stage3_iter0, "ap_block_state11_pp0_stage3_iter0");
    sc_trace(mVcdFile, ap_block_state16_pp0_stage3_iter1, "ap_block_state16_pp0_stage3_iter1");
    sc_trace(mVcdFile, ap_block_state21_pp0_stage3_iter2, "ap_block_state21_pp0_stage3_iter2");
    sc_trace(mVcdFile, ap_block_state26_pp0_stage3_iter3, "ap_block_state26_pp0_stage3_iter3");
    sc_trace(mVcdFile, ap_block_state31_pp0_stage3_iter4, "ap_block_state31_pp0_stage3_iter4");
    sc_trace(mVcdFile, ap_block_pp0_stage3_11001, "ap_block_pp0_stage3_11001");
    sc_trace(mVcdFile, input_0_0_load_reg_409, "input_0_0_load_reg_409");
    sc_trace(mVcdFile, grp_fu_193_p2, "grp_fu_193_p2");
    sc_trace(mVcdFile, tmp_8_reg_414, "tmp_8_reg_414");
    sc_trace(mVcdFile, tmp_mid2_fu_329_p3, "tmp_mid2_fu_329_p3");
    sc_trace(mVcdFile, grp_fu_189_p2, "grp_fu_189_p2");
    sc_trace(mVcdFile, tmp_9_reg_424, "tmp_9_reg_424");
    sc_trace(mVcdFile, bias_addr_read_reg_430, "bias_addr_read_reg_430");
    sc_trace(mVcdFile, tmp_6_reg_435, "tmp_6_reg_435");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter4, "ap_enable_reg_pp0_iter4");
    sc_trace(mVcdFile, ap_block_pp0_stage0_subdone, "ap_block_pp0_stage0_subdone");
    sc_trace(mVcdFile, ap_condition_pp0_exit_iter0_state8, "ap_condition_pp0_exit_iter0_state8");
    sc_trace(mVcdFile, ap_block_pp0_stage4_subdone, "ap_block_pp0_stage4_subdone");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter2, "ap_enable_reg_pp0_iter2");
    sc_trace(mVcdFile, ap_phi_mux_indvar_flatten_phi_fu_148_p4, "ap_phi_mux_indvar_flatten_phi_fu_148_p4");
    sc_trace(mVcdFile, ap_block_pp0_stage0, "ap_block_pp0_stage0");
    sc_trace(mVcdFile, ap_phi_mux_n_phi_fu_159_p4, "ap_phi_mux_n_phi_fu_159_p4");
    sc_trace(mVcdFile, ap_phi_mux_tmp_s_phi_fu_170_p4, "ap_phi_mux_tmp_s_phi_fu_170_p4");
    sc_trace(mVcdFile, ap_phi_mux_c_phi_fu_182_p4, "ap_phi_mux_c_phi_fu_182_p4");
    sc_trace(mVcdFile, tmp_7_fu_325_p1, "tmp_7_fu_325_p1");
    sc_trace(mVcdFile, ap_block_pp0_stage2, "ap_block_pp0_stage2");
    sc_trace(mVcdFile, tmp_mid2_26_fu_337_p1, "tmp_mid2_26_fu_337_p1");
    sc_trace(mVcdFile, ap_block_pp0_stage4, "ap_block_pp0_stage4");
    sc_trace(mVcdFile, sext2_fu_197_p1, "sext2_fu_197_p1");
    sc_trace(mVcdFile, sum_cast_fu_305_p1, "sum_cast_fu_305_p1");
    sc_trace(mVcdFile, ap_reg_ioackin_m_axi_bias_ARREADY, "ap_reg_ioackin_m_axi_bias_ARREADY");
    sc_trace(mVcdFile, ap_reg_ioackin_m_axi_weights_ARREADY, "ap_reg_ioackin_m_axi_weights_ARREADY");
    sc_trace(mVcdFile, ap_block_pp0_stage1_01001, "ap_block_pp0_stage1_01001");
    sc_trace(mVcdFile, grp_fu_189_p0, "grp_fu_189_p0");
    sc_trace(mVcdFile, grp_fu_189_p1, "grp_fu_189_p1");
    sc_trace(mVcdFile, n_1_fu_224_p2, "n_1_fu_224_p2");
    sc_trace(mVcdFile, tmp_fu_252_p3, "tmp_fu_252_p3");
    sc_trace(mVcdFile, tmp_61_fu_264_p3, "tmp_61_fu_264_p3");
    sc_trace(mVcdFile, p_shl_cast_fu_260_p1, "p_shl_cast_fu_260_p1");
    sc_trace(mVcdFile, p_shl6_cast_fu_272_p1, "p_shl6_cast_fu_272_p1");
    sc_trace(mVcdFile, tmp_62_fu_276_p2, "tmp_62_fu_276_p2");
    sc_trace(mVcdFile, tmp_87_cast_fu_282_p1, "tmp_87_cast_fu_282_p1");
    sc_trace(mVcdFile, tmp_7_cast_fu_286_p1, "tmp_7_cast_fu_286_p1");
    sc_trace(mVcdFile, tmp_63_fu_290_p2, "tmp_63_fu_290_p2");
    sc_trace(mVcdFile, tmp_88_cast_fu_296_p1, "tmp_88_cast_fu_296_p1");
    sc_trace(mVcdFile, grp_fu_189_ce, "grp_fu_189_ce");
    sc_trace(mVcdFile, grp_fu_193_ce, "grp_fu_193_ce");
    sc_trace(mVcdFile, ap_CS_fsm_state33, "ap_CS_fsm_state33");
    sc_trace(mVcdFile, ap_NS_fsm, "ap_NS_fsm");
    sc_trace(mVcdFile, ap_block_pp0_stage1_subdone, "ap_block_pp0_stage1_subdone");
    sc_trace(mVcdFile, ap_block_pp0_stage2_subdone, "ap_block_pp0_stage2_subdone");
    sc_trace(mVcdFile, ap_block_pp0_stage3_subdone, "ap_block_pp0_stage3_subdone");
    sc_trace(mVcdFile, ap_idle_pp0, "ap_idle_pp0");
    sc_trace(mVcdFile, ap_enable_pp0, "ap_enable_pp0");
    sc_trace(mVcdFile, ap_condition_641, "ap_condition_641");
#endif

    }
}

fc_6::~fc_6() {
    if (mVcdFile) 
        sc_close_vcd_trace_file(mVcdFile);

    delete conv1_fadd_32ns_3bkb_U82;
    delete conv1_fmul_32ns_3cud_U83;
}

void fc_6::thread_ap_clk_no_reset_() {
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_CS_fsm = ap_ST_fsm_state1;
    } else {
        ap_CS_fsm = ap_NS_fsm.read();
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter0 = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_boolean_0, ap_block_pp0_stage0_subdone.read()) && 
             esl_seteq<1,1,1>(ap_const_logic_1, ap_condition_pp0_exit_iter0_state8.read()) && 
             esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()))) {
            ap_enable_reg_pp0_iter0 = ap_const_logic_0;
        } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read())) {
            ap_enable_reg_pp0_iter0 = ap_const_logic_1;
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter1 = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_boolean_0, ap_block_pp0_stage4_subdone.read()) && esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage4.read()))) {
            if (esl_seteq<1,1,1>(ap_const_logic_1, ap_condition_pp0_exit_iter0_state8.read())) {
                ap_enable_reg_pp0_iter1 = (ap_condition_pp0_exit_iter0_state8.read() ^ ap_const_logic_1);
            } else if (esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1)) {
                ap_enable_reg_pp0_iter1 = ap_enable_reg_pp0_iter0.read();
            }
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter2 = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_boolean_0, ap_block_pp0_stage4_subdone.read()) && 
             esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage4.read()))) {
            ap_enable_reg_pp0_iter2 = ap_enable_reg_pp0_iter1.read();
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter3 = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_boolean_0, ap_block_pp0_stage4_subdone.read()) && 
             esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage4.read()))) {
            ap_enable_reg_pp0_iter3 = ap_enable_reg_pp0_iter2.read();
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter4 = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_boolean_0, ap_block_pp0_stage4_subdone.read()) && 
             esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage4.read()))) {
            ap_enable_reg_pp0_iter4 = ap_enable_reg_pp0_iter3.read();
        } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read())) {
            ap_enable_reg_pp0_iter4 = ap_const_logic_0;
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_reg_ioackin_m_axi_bias_ARREADY = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read())) {
            if (!(esl_seteq<1,1,1>(ap_sig_ioackin_m_axi_bias_ARREADY.read(), ap_const_logic_0) || esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_0))) {
                ap_reg_ioackin_m_axi_bias_ARREADY = ap_const_logic_0;
            } else if ((esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1) && 
                        esl_seteq<1,1,1>(ap_const_logic_1, m_axi_bias_ARREADY.read()))) {
                ap_reg_ioackin_m_axi_bias_ARREADY = ap_const_logic_1;
            }
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_reg_ioackin_m_axi_weights_ARREADY = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_condition_641.read(), ap_const_boolean_1)) {
            if (esl_seteq<1,1,1>(ap_block_pp0_stage1_11001.read(), ap_const_boolean_0)) {
                ap_reg_ioackin_m_axi_weights_ARREADY = ap_const_logic_0;
            } else if ((esl_seteq<1,1,1>(ap_const_logic_1, m_axi_weights_ARREADY.read()) && 
                        esl_seteq<1,1,1>(ap_block_pp0_stage1_01001.read(), ap_const_boolean_0))) {
                ap_reg_ioackin_m_axi_weights_ARREADY = ap_const_logic_1;
            }
        }
    }
    if ((esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_flatten_reg_352.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0))) {
        c_reg_178 = c_3_reg_389.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read())) {
        c_reg_178 = ap_const_lv7_0;
    }
    if ((esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_flatten_reg_352.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0))) {
        indvar_flatten_reg_144 = indvar_flatten_next_reg_356.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read())) {
        indvar_flatten_reg_144 = ap_const_lv11_0;
    }
    if ((esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_flatten_reg_352.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0))) {
        n_reg_155 = tmp_mid2_v_reg_372.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read())) {
        n_reg_155 = ap_const_lv4_0;
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage3.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter3.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage3_11001.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_flatten_reg_352_pp0_iter3_reg.read()))) {
        tmp_s_reg_166 = tmp_9_reg_424.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read())) {
        tmp_s_reg_166 = ap_const_lv32_0;
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage3.read()) && esl_seteq<1,1,1>(ifzero_reg_395_pp0_iter3_reg.read(), ap_const_lv1_1) && esl_seteq<1,1,1>(ap_block_pp0_stage3_11001.read(), ap_const_boolean_0))) {
        bias_addr_read_reg_430 = m_axi_bias_RDATA.read();
    }
    if ((esl_seteq<1,1,1>(ap_enable_reg_pp0_iter0.read(), ap_const_logic_1) && esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_flatten_reg_352.read()) && esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage4.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage4_11001.read(), ap_const_boolean_0))) {
        c_3_reg_389 = c_3_fu_315_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_flatten_fu_212_p2.read()))) {
        c_mid2_reg_366 = c_mid2_fu_236_p3.read();
        exitcond_reg_361 = exitcond_fu_230_p2.read();
        sum_reg_378 = sum_fu_300_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0))) {
        c_mid2_reg_366_pp0_iter1_reg = c_mid2_reg_366.read();
        exitcond_flatten_reg_352 = exitcond_flatten_fu_212_p2.read();
        exitcond_flatten_reg_352_pp0_iter1_reg = exitcond_flatten_reg_352.read();
        exitcond_flatten_reg_352_pp0_iter2_reg = exitcond_flatten_reg_352_pp0_iter1_reg.read();
        exitcond_flatten_reg_352_pp0_iter3_reg = exitcond_flatten_reg_352_pp0_iter2_reg.read();
        exitcond_reg_361_pp0_iter1_reg = exitcond_reg_361.read();
        exitcond_reg_361_pp0_iter2_reg = exitcond_reg_361_pp0_iter1_reg.read();
        ifzero_reg_395_pp0_iter2_reg = ifzero_reg_395.read();
        ifzero_reg_395_pp0_iter3_reg = ifzero_reg_395_pp0_iter2_reg.read();
        ifzero_reg_395_pp0_iter4_reg = ifzero_reg_395_pp0_iter3_reg.read();
        tmp_mid2_v_reg_372_pp0_iter1_reg = tmp_mid2_v_reg_372.read();
        tmp_mid2_v_reg_372_pp0_iter2_reg = tmp_mid2_v_reg_372_pp0_iter1_reg.read();
        tmp_mid2_v_reg_372_pp0_iter3_reg = tmp_mid2_v_reg_372_pp0_iter2_reg.read();
        tmp_mid2_v_reg_372_pp0_iter4_reg = tmp_mid2_v_reg_372_pp0_iter3_reg.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_flatten_reg_352.read()) && esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0))) {
        ifzero_reg_395 = ifzero_fu_320_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_enable_reg_pp0_iter0.read(), ap_const_logic_1) && esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0))) {
        indvar_flatten_next_reg_356 = indvar_flatten_next_fu_218_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage3.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_flatten_reg_352_pp0_iter1_reg.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage3_11001.read(), ap_const_boolean_0))) {
        input_0_0_load_reg_409 = input_0_0_q0.read();
        weights_addr_read_reg_404 = m_axi_weights_RDATA.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage3.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage3_11001.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(ap_enable_reg_pp0_iter4.read(), ap_const_logic_1) && esl_seteq<1,1,1>(ap_const_lv1_1, ifzero_reg_395_pp0_iter4_reg.read()))) {
        tmp_6_reg_435 = grp_fu_189_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage2.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage2_11001.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_flatten_reg_352_pp0_iter2_reg.read()))) {
        tmp_8_reg_414 = grp_fu_193_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter3.read()) && esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage2.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage2_11001.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_flatten_reg_352_pp0_iter3_reg.read()))) {
        tmp_9_reg_424 = grp_fu_189_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_enable_reg_pp0_iter0.read(), ap_const_logic_1) && esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_flatten_fu_212_p2.read()))) {
        tmp_mid2_v_reg_372 = tmp_mid2_v_fu_244_p3.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read())) {
        weights_offset_cast_reg_347 = weights_offset_cast_fu_208_p1.read();
    }
}

void fc_6::thread_ap_CS_fsm_pp0_stage0() {
    ap_CS_fsm_pp0_stage0 = ap_CS_fsm.read()[7];
}

void fc_6::thread_ap_CS_fsm_pp0_stage1() {
    ap_CS_fsm_pp0_stage1 = ap_CS_fsm.read()[8];
}

void fc_6::thread_ap_CS_fsm_pp0_stage2() {
    ap_CS_fsm_pp0_stage2 = ap_CS_fsm.read()[9];
}

void fc_6::thread_ap_CS_fsm_pp0_stage3() {
    ap_CS_fsm_pp0_stage3 = ap_CS_fsm.read()[10];
}

void fc_6::thread_ap_CS_fsm_pp0_stage4() {
    ap_CS_fsm_pp0_stage4 = ap_CS_fsm.read()[11];
}

void fc_6::thread_ap_CS_fsm_state1() {
    ap_CS_fsm_state1 = ap_CS_fsm.read()[0];
}

void fc_6::thread_ap_CS_fsm_state33() {
    ap_CS_fsm_state33 = ap_CS_fsm.read()[12];
}

void fc_6::thread_ap_CS_fsm_state7() {
    ap_CS_fsm_state7 = ap_CS_fsm.read()[6];
}

void fc_6::thread_ap_block_pp0_stage0() {
    ap_block_pp0_stage0 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void fc_6::thread_ap_block_pp0_stage0_11001() {
    ap_block_pp0_stage0_11001 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void fc_6::thread_ap_block_pp0_stage0_subdone() {
    ap_block_pp0_stage0_subdone = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void fc_6::thread_ap_block_pp0_stage1() {
    ap_block_pp0_stage1 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void fc_6::thread_ap_block_pp0_stage1_01001() {
    ap_block_pp0_stage1_01001 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void fc_6::thread_ap_block_pp0_stage1_11001() {
    ap_block_pp0_stage1_11001 = (esl_seteq<1,1,1>(ap_enable_reg_pp0_iter0.read(), ap_const_logic_1) && esl_seteq<1,1,1>(ap_const_boolean_1, ap_block_state9_io.read()));
}

void fc_6::thread_ap_block_pp0_stage1_subdone() {
    ap_block_pp0_stage1_subdone = (esl_seteq<1,1,1>(ap_enable_reg_pp0_iter0.read(), ap_const_logic_1) && esl_seteq<1,1,1>(ap_const_boolean_1, ap_block_state9_io.read()));
}

void fc_6::thread_ap_block_pp0_stage2() {
    ap_block_pp0_stage2 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void fc_6::thread_ap_block_pp0_stage2_11001() {
    ap_block_pp0_stage2_11001 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void fc_6::thread_ap_block_pp0_stage2_subdone() {
    ap_block_pp0_stage2_subdone = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void fc_6::thread_ap_block_pp0_stage3() {
    ap_block_pp0_stage3 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void fc_6::thread_ap_block_pp0_stage3_11001() {
    ap_block_pp0_stage3_11001 = ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
  esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_flatten_reg_352_pp0_iter1_reg.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_0, m_axi_weights_RVALID.read())) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter3.read()) && 
  esl_seteq<1,1,1>(ifzero_reg_395_pp0_iter3_reg.read(), ap_const_lv1_1) && 
  esl_seteq<1,1,1>(ap_const_logic_0, m_axi_bias_RVALID.read())));
}

void fc_6::thread_ap_block_pp0_stage3_subdone() {
    ap_block_pp0_stage3_subdone = ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
  esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_flatten_reg_352_pp0_iter1_reg.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_0, m_axi_weights_RVALID.read())) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter3.read()) && 
  esl_seteq<1,1,1>(ifzero_reg_395_pp0_iter3_reg.read(), ap_const_lv1_1) && 
  esl_seteq<1,1,1>(ap_const_logic_0, m_axi_bias_RVALID.read())));
}

void fc_6::thread_ap_block_pp0_stage4() {
    ap_block_pp0_stage4 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void fc_6::thread_ap_block_pp0_stage4_11001() {
    ap_block_pp0_stage4_11001 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void fc_6::thread_ap_block_pp0_stage4_subdone() {
    ap_block_pp0_stage4_subdone = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void fc_6::thread_ap_block_state10_pp0_stage2_iter0() {
    ap_block_state10_pp0_stage2_iter0 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void fc_6::thread_ap_block_state11_pp0_stage3_iter0() {
    ap_block_state11_pp0_stage3_iter0 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void fc_6::thread_ap_block_state12_pp0_stage4_iter0() {
    ap_block_state12_pp0_stage4_iter0 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void fc_6::thread_ap_block_state13_pp0_stage0_iter1() {
    ap_block_state13_pp0_stage0_iter1 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void fc_6::thread_ap_block_state14_pp0_stage1_iter1() {
    ap_block_state14_pp0_stage1_iter1 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void fc_6::thread_ap_block_state15_pp0_stage2_iter1() {
    ap_block_state15_pp0_stage2_iter1 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void fc_6::thread_ap_block_state16_pp0_stage3_iter1() {
    ap_block_state16_pp0_stage3_iter1 = (esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_flatten_reg_352_pp0_iter1_reg.read()) && esl_seteq<1,1,1>(ap_const_logic_0, m_axi_weights_RVALID.read()));
}

void fc_6::thread_ap_block_state17_pp0_stage4_iter1() {
    ap_block_state17_pp0_stage4_iter1 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void fc_6::thread_ap_block_state18_pp0_stage0_iter2() {
    ap_block_state18_pp0_stage0_iter2 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void fc_6::thread_ap_block_state19_pp0_stage1_iter2() {
    ap_block_state19_pp0_stage1_iter2 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void fc_6::thread_ap_block_state20_pp0_stage2_iter2() {
    ap_block_state20_pp0_stage2_iter2 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void fc_6::thread_ap_block_state21_pp0_stage3_iter2() {
    ap_block_state21_pp0_stage3_iter2 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void fc_6::thread_ap_block_state22_pp0_stage4_iter2() {
    ap_block_state22_pp0_stage4_iter2 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void fc_6::thread_ap_block_state23_pp0_stage0_iter3() {
    ap_block_state23_pp0_stage0_iter3 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void fc_6::thread_ap_block_state24_pp0_stage1_iter3() {
    ap_block_state24_pp0_stage1_iter3 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void fc_6::thread_ap_block_state25_pp0_stage2_iter3() {
    ap_block_state25_pp0_stage2_iter3 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void fc_6::thread_ap_block_state26_pp0_stage3_iter3() {
    ap_block_state26_pp0_stage3_iter3 = (esl_seteq<1,1,1>(ifzero_reg_395_pp0_iter3_reg.read(), ap_const_lv1_1) && esl_seteq<1,1,1>(ap_const_logic_0, m_axi_bias_RVALID.read()));
}

void fc_6::thread_ap_block_state27_pp0_stage4_iter3() {
    ap_block_state27_pp0_stage4_iter3 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void fc_6::thread_ap_block_state28_pp0_stage0_iter4() {
    ap_block_state28_pp0_stage0_iter4 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void fc_6::thread_ap_block_state29_pp0_stage1_iter4() {
    ap_block_state29_pp0_stage1_iter4 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void fc_6::thread_ap_block_state30_pp0_stage2_iter4() {
    ap_block_state30_pp0_stage2_iter4 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void fc_6::thread_ap_block_state31_pp0_stage3_iter4() {
    ap_block_state31_pp0_stage3_iter4 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void fc_6::thread_ap_block_state32_pp0_stage4_iter4() {
    ap_block_state32_pp0_stage4_iter4 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void fc_6::thread_ap_block_state8_pp0_stage0_iter0() {
    ap_block_state8_pp0_stage0_iter0 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void fc_6::thread_ap_block_state9_io() {
    ap_block_state9_io = (esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_flatten_reg_352.read()) && esl_seteq<1,1,1>(ap_const_logic_0, ap_sig_ioackin_m_axi_weights_ARREADY.read()));
}

void fc_6::thread_ap_block_state9_pp0_stage1_iter0() {
    ap_block_state9_pp0_stage1_iter0 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void fc_6::thread_ap_condition_641() {
    ap_condition_641 = (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage1.read()) && esl_seteq<1,1,1>(ap_enable_reg_pp0_iter0.read(), ap_const_logic_1) && esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_flatten_reg_352.read()));
}

void fc_6::thread_ap_condition_pp0_exit_iter0_state8() {
    if (esl_seteq<1,1,1>(exitcond_flatten_fu_212_p2.read(), ap_const_lv1_1)) {
        ap_condition_pp0_exit_iter0_state8 = ap_const_logic_1;
    } else {
        ap_condition_pp0_exit_iter0_state8 = ap_const_logic_0;
    }
}

void fc_6::thread_ap_done() {
    if (((esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_0) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read())) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state33.read()))) {
        ap_done = ap_const_logic_1;
    } else {
        ap_done = ap_const_logic_0;
    }
}

void fc_6::thread_ap_enable_pp0() {
    ap_enable_pp0 = (ap_idle_pp0.read() ^ ap_const_logic_1);
}

void fc_6::thread_ap_idle() {
    if ((esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()))) {
        ap_idle = ap_const_logic_1;
    } else {
        ap_idle = ap_const_logic_0;
    }
}

void fc_6::thread_ap_idle_pp0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter1.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter2.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter3.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter4.read()))) {
        ap_idle_pp0 = ap_const_logic_1;
    } else {
        ap_idle_pp0 = ap_const_logic_0;
    }
}

void fc_6::thread_ap_phi_mux_c_phi_fu_182_p4() {
    if ((esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_flatten_reg_352.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0.read(), ap_const_boolean_0))) {
        ap_phi_mux_c_phi_fu_182_p4 = c_3_reg_389.read();
    } else {
        ap_phi_mux_c_phi_fu_182_p4 = c_reg_178.read();
    }
}

void fc_6::thread_ap_phi_mux_indvar_flatten_phi_fu_148_p4() {
    if ((esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_flatten_reg_352.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0.read(), ap_const_boolean_0))) {
        ap_phi_mux_indvar_flatten_phi_fu_148_p4 = indvar_flatten_next_reg_356.read();
    } else {
        ap_phi_mux_indvar_flatten_phi_fu_148_p4 = indvar_flatten_reg_144.read();
    }
}

void fc_6::thread_ap_phi_mux_n_phi_fu_159_p4() {
    if ((esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_flatten_reg_352.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0.read(), ap_const_boolean_0))) {
        ap_phi_mux_n_phi_fu_159_p4 = tmp_mid2_v_reg_372.read();
    } else {
        ap_phi_mux_n_phi_fu_159_p4 = n_reg_155.read();
    }
}

void fc_6::thread_ap_phi_mux_tmp_s_phi_fu_170_p4() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage3.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage3.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter3.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_flatten_reg_352_pp0_iter3_reg.read()))) {
        ap_phi_mux_tmp_s_phi_fu_170_p4 = tmp_9_reg_424.read();
    } else {
        ap_phi_mux_tmp_s_phi_fu_170_p4 = tmp_s_reg_166.read();
    }
}

void fc_6::thread_ap_ready() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state33.read())) {
        ap_ready = ap_const_logic_1;
    } else {
        ap_ready = ap_const_logic_0;
    }
}

void fc_6::thread_ap_sig_ioackin_m_axi_bias_ARREADY() {
    if (esl_seteq<1,1,1>(ap_const_logic_0, ap_reg_ioackin_m_axi_bias_ARREADY.read())) {
        ap_sig_ioackin_m_axi_bias_ARREADY = m_axi_bias_ARREADY.read();
    } else {
        ap_sig_ioackin_m_axi_bias_ARREADY = ap_const_logic_1;
    }
}

void fc_6::thread_ap_sig_ioackin_m_axi_weights_ARREADY() {
    if (esl_seteq<1,1,1>(ap_const_logic_0, ap_reg_ioackin_m_axi_weights_ARREADY.read())) {
        ap_sig_ioackin_m_axi_weights_ARREADY = m_axi_weights_ARREADY.read();
    } else {
        ap_sig_ioackin_m_axi_weights_ARREADY = ap_const_logic_1;
    }
}

void fc_6::thread_bias_blk_n_AR() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
         esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
        bias_blk_n_AR = m_axi_bias_ARREADY.read();
    } else {
        bias_blk_n_AR = ap_const_logic_1;
    }
}

void fc_6::thread_bias_blk_n_R() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage3.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage3.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter3.read()) && 
         esl_seteq<1,1,1>(ifzero_reg_395_pp0_iter3_reg.read(), ap_const_lv1_1))) {
        bias_blk_n_R = m_axi_bias_RVALID.read();
    } else {
        bias_blk_n_R = ap_const_logic_1;
    }
}

void fc_6::thread_c_3_fu_315_p2() {
    c_3_fu_315_p2 = (!c_mid2_reg_366.read().is_01() || !ap_const_lv7_1.is_01())? sc_lv<7>(): (sc_biguint<7>(c_mid2_reg_366.read()) + sc_biguint<7>(ap_const_lv7_1));
}

void fc_6::thread_c_mid2_fu_236_p3() {
    c_mid2_fu_236_p3 = (!exitcond_fu_230_p2.read()[0].is_01())? sc_lv<7>(): ((exitcond_fu_230_p2.read()[0].to_bool())? ap_const_lv7_0: ap_phi_mux_c_phi_fu_182_p4.read());
}

void fc_6::thread_exitcond_flatten_fu_212_p2() {
    exitcond_flatten_fu_212_p2 = (!ap_phi_mux_indvar_flatten_phi_fu_148_p4.read().is_01() || !ap_const_lv11_4B0.is_01())? sc_lv<1>(): sc_lv<1>(ap_phi_mux_indvar_flatten_phi_fu_148_p4.read() == ap_const_lv11_4B0);
}

void fc_6::thread_exitcond_fu_230_p2() {
    exitcond_fu_230_p2 = (!ap_phi_mux_c_phi_fu_182_p4.read().is_01() || !ap_const_lv7_78.is_01())? sc_lv<1>(): sc_lv<1>(ap_phi_mux_c_phi_fu_182_p4.read() == ap_const_lv7_78);
}

void fc_6::thread_grp_fu_189_ce() {
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage1.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage1_11001.read(), ap_const_boolean_0)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage2.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage2_11001.read(), ap_const_boolean_0)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage3.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage3_11001.read(), ap_const_boolean_0)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage4.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage4_11001.read(), ap_const_boolean_0)))) {
        grp_fu_189_ce = ap_const_logic_1;
    } else {
        grp_fu_189_ce = ap_const_logic_0;
    }
}

void fc_6::thread_grp_fu_189_p0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter3.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage4.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage4.read(), ap_const_boolean_0))) {
        grp_fu_189_p0 = tmp_9_reg_424.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage3.read()) && 
                esl_seteq<1,1,1>(ap_block_pp0_stage3.read(), ap_const_boolean_0) && 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter2.read()))) {
        grp_fu_189_p0 = tmp_mid2_fu_329_p3.read();
    } else {
        grp_fu_189_p0 = "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
    }
}

void fc_6::thread_grp_fu_189_p1() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter3.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage4.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage4.read(), ap_const_boolean_0))) {
        grp_fu_189_p1 = bias_addr_read_reg_430.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage3.read()) && 
                esl_seteq<1,1,1>(ap_block_pp0_stage3.read(), ap_const_boolean_0) && 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter2.read()))) {
        grp_fu_189_p1 = tmp_8_reg_414.read();
    } else {
        grp_fu_189_p1 = "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
    }
}

void fc_6::thread_grp_fu_193_ce() {
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage1.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage1_11001.read(), ap_const_boolean_0)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage2.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage2_11001.read(), ap_const_boolean_0)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage4.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage4_11001.read(), ap_const_boolean_0)))) {
        grp_fu_193_ce = ap_const_logic_1;
    } else {
        grp_fu_193_ce = ap_const_logic_0;
    }
}

void fc_6::thread_ifzero_fu_320_p2() {
    ifzero_fu_320_p2 = (!c_3_reg_389.read().is_01() || !ap_const_lv7_78.is_01())? sc_lv<1>(): sc_lv<1>(c_3_reg_389.read() == ap_const_lv7_78);
}

void fc_6::thread_indvar_flatten_next_fu_218_p2() {
    indvar_flatten_next_fu_218_p2 = (!ap_phi_mux_indvar_flatten_phi_fu_148_p4.read().is_01() || !ap_const_lv11_1.is_01())? sc_lv<11>(): (sc_biguint<11>(ap_phi_mux_indvar_flatten_phi_fu_148_p4.read()) + sc_biguint<11>(ap_const_lv11_1));
}

void fc_6::thread_input_0_0_address0() {
    input_0_0_address0 =  (sc_lv<7>) (tmp_7_fu_325_p1.read());
}

void fc_6::thread_input_0_0_ce0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage2.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage2_11001.read(), ap_const_boolean_0))) {
        input_0_0_ce0 = ap_const_logic_1;
    } else {
        input_0_0_ce0 = ap_const_logic_0;
    }
}

void fc_6::thread_m_axi_bias_ARADDR() {
    m_axi_bias_ARADDR =  (sc_lv<32>) (sext2_fu_197_p1.read());
}

void fc_6::thread_m_axi_bias_ARBURST() {
    m_axi_bias_ARBURST = ap_const_lv2_0;
}

void fc_6::thread_m_axi_bias_ARCACHE() {
    m_axi_bias_ARCACHE = ap_const_lv4_0;
}

void fc_6::thread_m_axi_bias_ARID() {
    m_axi_bias_ARID = ap_const_lv1_0;
}

void fc_6::thread_m_axi_bias_ARLEN() {
    m_axi_bias_ARLEN = ap_const_lv32_A;
}

void fc_6::thread_m_axi_bias_ARLOCK() {
    m_axi_bias_ARLOCK = ap_const_lv2_0;
}

void fc_6::thread_m_axi_bias_ARPROT() {
    m_axi_bias_ARPROT = ap_const_lv3_0;
}

void fc_6::thread_m_axi_bias_ARQOS() {
    m_axi_bias_ARQOS = ap_const_lv4_0;
}

void fc_6::thread_m_axi_bias_ARREGION() {
    m_axi_bias_ARREGION = ap_const_lv4_0;
}

void fc_6::thread_m_axi_bias_ARSIZE() {
    m_axi_bias_ARSIZE = ap_const_lv3_0;
}

void fc_6::thread_m_axi_bias_ARUSER() {
    m_axi_bias_ARUSER = ap_const_lv1_0;
}

void fc_6::thread_m_axi_bias_ARVALID() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
         esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_reg_ioackin_m_axi_bias_ARREADY.read()))) {
        m_axi_bias_ARVALID = ap_const_logic_1;
    } else {
        m_axi_bias_ARVALID = ap_const_logic_0;
    }
}

void fc_6::thread_m_axi_bias_AWADDR() {
    m_axi_bias_AWADDR = ap_const_lv32_0;
}

void fc_6::thread_m_axi_bias_AWBURST() {
    m_axi_bias_AWBURST = ap_const_lv2_0;
}

void fc_6::thread_m_axi_bias_AWCACHE() {
    m_axi_bias_AWCACHE = ap_const_lv4_0;
}

void fc_6::thread_m_axi_bias_AWID() {
    m_axi_bias_AWID = ap_const_lv1_0;
}

void fc_6::thread_m_axi_bias_AWLEN() {
    m_axi_bias_AWLEN = ap_const_lv32_0;
}

void fc_6::thread_m_axi_bias_AWLOCK() {
    m_axi_bias_AWLOCK = ap_const_lv2_0;
}

void fc_6::thread_m_axi_bias_AWPROT() {
    m_axi_bias_AWPROT = ap_const_lv3_0;
}

void fc_6::thread_m_axi_bias_AWQOS() {
    m_axi_bias_AWQOS = ap_const_lv4_0;
}

void fc_6::thread_m_axi_bias_AWREGION() {
    m_axi_bias_AWREGION = ap_const_lv4_0;
}

void fc_6::thread_m_axi_bias_AWSIZE() {
    m_axi_bias_AWSIZE = ap_const_lv3_0;
}

void fc_6::thread_m_axi_bias_AWUSER() {
    m_axi_bias_AWUSER = ap_const_lv1_0;
}

void fc_6::thread_m_axi_bias_AWVALID() {
    m_axi_bias_AWVALID = ap_const_logic_0;
}

void fc_6::thread_m_axi_bias_BREADY() {
    m_axi_bias_BREADY = ap_const_logic_0;
}

void fc_6::thread_m_axi_bias_RREADY() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage3.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter3.read()) && 
         esl_seteq<1,1,1>(ifzero_reg_395_pp0_iter3_reg.read(), ap_const_lv1_1) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage3_11001.read(), ap_const_boolean_0))) {
        m_axi_bias_RREADY = ap_const_logic_1;
    } else {
        m_axi_bias_RREADY = ap_const_logic_0;
    }
}

void fc_6::thread_m_axi_bias_WDATA() {
    m_axi_bias_WDATA = ap_const_lv32_0;
}

void fc_6::thread_m_axi_bias_WID() {
    m_axi_bias_WID = ap_const_lv1_0;
}

void fc_6::thread_m_axi_bias_WLAST() {
    m_axi_bias_WLAST = ap_const_logic_0;
}

void fc_6::thread_m_axi_bias_WSTRB() {
    m_axi_bias_WSTRB = ap_const_lv4_0;
}

void fc_6::thread_m_axi_bias_WUSER() {
    m_axi_bias_WUSER = ap_const_lv1_0;
}

void fc_6::thread_m_axi_bias_WVALID() {
    m_axi_bias_WVALID = ap_const_logic_0;
}

void fc_6::thread_m_axi_weights_ARADDR() {
    m_axi_weights_ARADDR =  (sc_lv<32>) (sum_cast_fu_305_p1.read());
}

void fc_6::thread_m_axi_weights_ARBURST() {
    m_axi_weights_ARBURST = ap_const_lv2_0;
}

void fc_6::thread_m_axi_weights_ARCACHE() {
    m_axi_weights_ARCACHE = ap_const_lv4_0;
}

void fc_6::thread_m_axi_weights_ARID() {
    m_axi_weights_ARID = ap_const_lv1_0;
}

void fc_6::thread_m_axi_weights_ARLEN() {
    m_axi_weights_ARLEN = ap_const_lv32_1;
}

void fc_6::thread_m_axi_weights_ARLOCK() {
    m_axi_weights_ARLOCK = ap_const_lv2_0;
}

void fc_6::thread_m_axi_weights_ARPROT() {
    m_axi_weights_ARPROT = ap_const_lv3_0;
}

void fc_6::thread_m_axi_weights_ARQOS() {
    m_axi_weights_ARQOS = ap_const_lv4_0;
}

void fc_6::thread_m_axi_weights_ARREGION() {
    m_axi_weights_ARREGION = ap_const_lv4_0;
}

void fc_6::thread_m_axi_weights_ARSIZE() {
    m_axi_weights_ARSIZE = ap_const_lv3_0;
}

void fc_6::thread_m_axi_weights_ARUSER() {
    m_axi_weights_ARUSER = ap_const_lv1_0;
}

void fc_6::thread_m_axi_weights_ARVALID() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage1.read()) && 
         esl_seteq<1,1,1>(ap_enable_reg_pp0_iter0.read(), ap_const_logic_1) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_flatten_reg_352.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage1_01001.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_reg_ioackin_m_axi_weights_ARREADY.read()))) {
        m_axi_weights_ARVALID = ap_const_logic_1;
    } else {
        m_axi_weights_ARVALID = ap_const_logic_0;
    }
}

void fc_6::thread_m_axi_weights_AWADDR() {
    m_axi_weights_AWADDR = ap_const_lv32_0;
}

void fc_6::thread_m_axi_weights_AWBURST() {
    m_axi_weights_AWBURST = ap_const_lv2_0;
}

void fc_6::thread_m_axi_weights_AWCACHE() {
    m_axi_weights_AWCACHE = ap_const_lv4_0;
}

void fc_6::thread_m_axi_weights_AWID() {
    m_axi_weights_AWID = ap_const_lv1_0;
}

void fc_6::thread_m_axi_weights_AWLEN() {
    m_axi_weights_AWLEN = ap_const_lv32_0;
}

void fc_6::thread_m_axi_weights_AWLOCK() {
    m_axi_weights_AWLOCK = ap_const_lv2_0;
}

void fc_6::thread_m_axi_weights_AWPROT() {
    m_axi_weights_AWPROT = ap_const_lv3_0;
}

void fc_6::thread_m_axi_weights_AWQOS() {
    m_axi_weights_AWQOS = ap_const_lv4_0;
}

void fc_6::thread_m_axi_weights_AWREGION() {
    m_axi_weights_AWREGION = ap_const_lv4_0;
}

void fc_6::thread_m_axi_weights_AWSIZE() {
    m_axi_weights_AWSIZE = ap_const_lv3_0;
}

void fc_6::thread_m_axi_weights_AWUSER() {
    m_axi_weights_AWUSER = ap_const_lv1_0;
}

void fc_6::thread_m_axi_weights_AWVALID() {
    m_axi_weights_AWVALID = ap_const_logic_0;
}

void fc_6::thread_m_axi_weights_BREADY() {
    m_axi_weights_BREADY = ap_const_logic_0;
}

void fc_6::thread_m_axi_weights_RREADY() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage3.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_flatten_reg_352_pp0_iter1_reg.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage3_11001.read(), ap_const_boolean_0))) {
        m_axi_weights_RREADY = ap_const_logic_1;
    } else {
        m_axi_weights_RREADY = ap_const_logic_0;
    }
}

void fc_6::thread_m_axi_weights_WDATA() {
    m_axi_weights_WDATA = ap_const_lv32_0;
}

void fc_6::thread_m_axi_weights_WID() {
    m_axi_weights_WID = ap_const_lv1_0;
}

void fc_6::thread_m_axi_weights_WLAST() {
    m_axi_weights_WLAST = ap_const_logic_0;
}

void fc_6::thread_m_axi_weights_WSTRB() {
    m_axi_weights_WSTRB = ap_const_lv4_0;
}

void fc_6::thread_m_axi_weights_WUSER() {
    m_axi_weights_WUSER = ap_const_lv1_0;
}

void fc_6::thread_m_axi_weights_WVALID() {
    m_axi_weights_WVALID = ap_const_logic_0;
}

void fc_6::thread_n_1_fu_224_p2() {
    n_1_fu_224_p2 = (!ap_phi_mux_n_phi_fu_159_p4.read().is_01() || !ap_const_lv4_1.is_01())? sc_lv<4>(): (sc_biguint<4>(ap_phi_mux_n_phi_fu_159_p4.read()) + sc_biguint<4>(ap_const_lv4_1));
}

void fc_6::thread_output_r_address0() {
    output_r_address0 =  (sc_lv<4>) (tmp_mid2_26_fu_337_p1.read());
}

void fc_6::thread_output_r_ce0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage4.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage4_11001.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_enable_reg_pp0_iter4.read(), ap_const_logic_1))) {
        output_r_ce0 = ap_const_logic_1;
    } else {
        output_r_ce0 = ap_const_logic_0;
    }
}

void fc_6::thread_output_r_d0() {
    output_r_d0 = tmp_6_reg_435.read();
}

void fc_6::thread_output_r_we0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage4.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage4_11001.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_enable_reg_pp0_iter4.read(), ap_const_logic_1) && 
         esl_seteq<1,1,1>(ap_const_lv1_1, ifzero_reg_395_pp0_iter4_reg.read()))) {
        output_r_we0 = ap_const_logic_1;
    } else {
        output_r_we0 = ap_const_logic_0;
    }
}

void fc_6::thread_p_shl6_cast_fu_272_p1() {
    p_shl6_cast_fu_272_p1 = esl_zext<12,7>(tmp_61_fu_264_p3.read());
}

void fc_6::thread_p_shl_cast_fu_260_p1() {
    p_shl_cast_fu_260_p1 = esl_zext<12,11>(tmp_fu_252_p3.read());
}

void fc_6::thread_sext2_fu_197_p1() {
    sext2_fu_197_p1 = esl_zext<64,30>(bias_offset.read());
}

void fc_6::thread_sum_cast_fu_305_p1() {
    sum_cast_fu_305_p1 = esl_sext<64,32>(sum_reg_378.read());
}

void fc_6::thread_sum_fu_300_p2() {
    sum_fu_300_p2 = (!weights_offset_cast_reg_347.read().is_01() || !tmp_88_cast_fu_296_p1.read().is_01())? sc_lv<32>(): (sc_biguint<32>(weights_offset_cast_reg_347.read()) + sc_bigint<32>(tmp_88_cast_fu_296_p1.read()));
}

void fc_6::thread_tmp_61_fu_264_p3() {
    tmp_61_fu_264_p3 = esl_concat<4,3>(tmp_mid2_v_fu_244_p3.read(), ap_const_lv3_0);
}

void fc_6::thread_tmp_62_fu_276_p2() {
    tmp_62_fu_276_p2 = (!p_shl_cast_fu_260_p1.read().is_01() || !p_shl6_cast_fu_272_p1.read().is_01())? sc_lv<12>(): (sc_biguint<12>(p_shl_cast_fu_260_p1.read()) - sc_biguint<12>(p_shl6_cast_fu_272_p1.read()));
}

void fc_6::thread_tmp_63_fu_290_p2() {
    tmp_63_fu_290_p2 = (!tmp_87_cast_fu_282_p1.read().is_01() || !tmp_7_cast_fu_286_p1.read().is_01())? sc_lv<13>(): (sc_bigint<13>(tmp_87_cast_fu_282_p1.read()) + sc_biguint<13>(tmp_7_cast_fu_286_p1.read()));
}

void fc_6::thread_tmp_7_cast_fu_286_p1() {
    tmp_7_cast_fu_286_p1 = esl_zext<13,7>(c_mid2_fu_236_p3.read());
}

void fc_6::thread_tmp_7_fu_325_p1() {
    tmp_7_fu_325_p1 = esl_zext<64,7>(c_mid2_reg_366_pp0_iter1_reg.read());
}

void fc_6::thread_tmp_87_cast_fu_282_p1() {
    tmp_87_cast_fu_282_p1 = esl_sext<13,12>(tmp_62_fu_276_p2.read());
}

void fc_6::thread_tmp_88_cast_fu_296_p1() {
    tmp_88_cast_fu_296_p1 = esl_sext<32,13>(tmp_63_fu_290_p2.read());
}

void fc_6::thread_tmp_fu_252_p3() {
    tmp_fu_252_p3 = esl_concat<4,7>(tmp_mid2_v_fu_244_p3.read(), ap_const_lv7_0);
}

void fc_6::thread_tmp_mid2_26_fu_337_p1() {
    tmp_mid2_26_fu_337_p1 = esl_zext<64,4>(tmp_mid2_v_reg_372_pp0_iter4_reg.read());
}

void fc_6::thread_tmp_mid2_fu_329_p3() {
    tmp_mid2_fu_329_p3 = (!exitcond_reg_361_pp0_iter2_reg.read()[0].is_01())? sc_lv<32>(): ((exitcond_reg_361_pp0_iter2_reg.read()[0].to_bool())? ap_const_lv32_0: ap_phi_mux_tmp_s_phi_fu_170_p4.read());
}

void fc_6::thread_tmp_mid2_v_fu_244_p3() {
    tmp_mid2_v_fu_244_p3 = (!exitcond_fu_230_p2.read()[0].is_01())? sc_lv<4>(): ((exitcond_fu_230_p2.read()[0].to_bool())? n_1_fu_224_p2.read(): ap_phi_mux_n_phi_fu_159_p4.read());
}

void fc_6::thread_weights_blk_n_AR() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage1.read()) && 
         esl_seteq<1,1,1>(ap_enable_reg_pp0_iter0.read(), ap_const_logic_1) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage1.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_flatten_reg_352.read()))) {
        weights_blk_n_AR = m_axi_weights_ARREADY.read();
    } else {
        weights_blk_n_AR = ap_const_logic_1;
    }
}

void fc_6::thread_weights_blk_n_R() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage3.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage3.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_flatten_reg_352_pp0_iter1_reg.read()))) {
        weights_blk_n_R = m_axi_weights_RVALID.read();
    } else {
        weights_blk_n_R = ap_const_logic_1;
    }
}

void fc_6::thread_weights_offset_cast_fu_208_p1() {
    weights_offset_cast_fu_208_p1 = esl_zext<32,30>(weights_offset.read());
}

void fc_6::thread_ap_NS_fsm() {
    switch (ap_CS_fsm.read().to_uint64()) {
        case 1 : 
            if ((!(esl_seteq<1,1,1>(ap_sig_ioackin_m_axi_bias_ARREADY.read(), ap_const_logic_0) || esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_0)) && esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()))) {
                ap_NS_fsm = ap_ST_fsm_state2;
            } else {
                ap_NS_fsm = ap_ST_fsm_state1;
            }
            break;
        case 2 : 
            ap_NS_fsm = ap_ST_fsm_state3;
            break;
        case 4 : 
            ap_NS_fsm = ap_ST_fsm_state4;
            break;
        case 8 : 
            ap_NS_fsm = ap_ST_fsm_state5;
            break;
        case 16 : 
            ap_NS_fsm = ap_ST_fsm_state6;
            break;
        case 32 : 
            ap_NS_fsm = ap_ST_fsm_state7;
            break;
        case 64 : 
            ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            break;
        case 128 : 
            if ((!(esl_seteq<1,1,1>(ap_const_boolean_0, ap_block_pp0_stage0_subdone.read()) && esl_seteq<1,1,1>(ap_enable_reg_pp0_iter0.read(), ap_const_logic_1) && esl_seteq<1,1,1>(exitcond_flatten_fu_212_p2.read(), ap_const_lv1_1) && esl_seteq<1,1,1>(ap_enable_reg_pp0_iter1.read(), ap_const_logic_0)) && esl_seteq<1,1,1>(ap_const_boolean_0, ap_block_pp0_stage0_subdone.read()))) {
                ap_NS_fsm = ap_ST_fsm_pp0_stage1;
            } else if ((esl_seteq<1,1,1>(ap_const_boolean_0, ap_block_pp0_stage0_subdone.read()) && esl_seteq<1,1,1>(ap_enable_reg_pp0_iter0.read(), ap_const_logic_1) && esl_seteq<1,1,1>(exitcond_flatten_fu_212_p2.read(), ap_const_lv1_1) && esl_seteq<1,1,1>(ap_enable_reg_pp0_iter1.read(), ap_const_logic_0))) {
                ap_NS_fsm = ap_ST_fsm_state33;
            } else {
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            }
            break;
        case 256 : 
            if (esl_seteq<1,1,1>(ap_const_boolean_0, ap_block_pp0_stage1_subdone.read())) {
                ap_NS_fsm = ap_ST_fsm_pp0_stage2;
            } else {
                ap_NS_fsm = ap_ST_fsm_pp0_stage1;
            }
            break;
        case 512 : 
            if (esl_seteq<1,1,1>(ap_const_boolean_0, ap_block_pp0_stage2_subdone.read())) {
                ap_NS_fsm = ap_ST_fsm_pp0_stage3;
            } else {
                ap_NS_fsm = ap_ST_fsm_pp0_stage2;
            }
            break;
        case 1024 : 
            if (esl_seteq<1,1,1>(ap_const_boolean_0, ap_block_pp0_stage3_subdone.read())) {
                ap_NS_fsm = ap_ST_fsm_pp0_stage4;
            } else {
                ap_NS_fsm = ap_ST_fsm_pp0_stage3;
            }
            break;
        case 2048 : 
            if ((!(esl_seteq<1,1,1>(ap_const_boolean_0, ap_block_pp0_stage4_subdone.read()) && esl_seteq<1,1,1>(ap_enable_reg_pp0_iter4.read(), ap_const_logic_1) && esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage4.read()) && esl_seteq<1,1,1>(ap_enable_reg_pp0_iter3.read(), ap_const_logic_0)) && esl_seteq<1,1,1>(ap_const_boolean_0, ap_block_pp0_stage4_subdone.read()))) {
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            } else if ((esl_seteq<1,1,1>(ap_const_boolean_0, ap_block_pp0_stage4_subdone.read()) && esl_seteq<1,1,1>(ap_enable_reg_pp0_iter4.read(), ap_const_logic_1) && esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage4.read()) && esl_seteq<1,1,1>(ap_enable_reg_pp0_iter3.read(), ap_const_logic_0))) {
                ap_NS_fsm = ap_ST_fsm_state33;
            } else {
                ap_NS_fsm = ap_ST_fsm_pp0_stage4;
            }
            break;
        case 4096 : 
            ap_NS_fsm = ap_ST_fsm_state1;
            break;
        default : 
            ap_NS_fsm =  (sc_lv<13>) ("XXXXXXXXXXXXX");
            break;
    }
}

}

