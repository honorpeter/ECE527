// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2018.2
// Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module convolution_5 (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        input_r_address0,
        input_r_ce0,
        input_r_q0,
        input_r_address1,
        input_r_ce1,
        input_r_q1,
        weights_0_address0,
        weights_0_ce0,
        weights_0_q0,
        weights_1_address0,
        weights_1_ce0,
        weights_1_q0,
        weights_2_address0,
        weights_2_ce0,
        weights_2_q0,
        weights_3_address0,
        weights_3_ce0,
        weights_3_q0,
        weights_4_address0,
        weights_4_ce0,
        weights_4_q0,
        weights_5_address0,
        weights_5_ce0,
        weights_5_q0,
        weights_6_address0,
        weights_6_ce0,
        weights_6_q0,
        weights_7_address0,
        weights_7_ce0,
        weights_7_q0,
        weights_8_address0,
        weights_8_ce0,
        weights_8_q0,
        weights_9_address0,
        weights_9_ce0,
        weights_9_q0,
        weights_10_address0,
        weights_10_ce0,
        weights_10_q0,
        weights_11_address0,
        weights_11_ce0,
        weights_11_q0,
        weights_12_address0,
        weights_12_ce0,
        weights_12_q0,
        weights_13_address0,
        weights_13_ce0,
        weights_13_q0,
        weights_14_address0,
        weights_14_ce0,
        weights_14_q0,
        weights_15_address0,
        weights_15_ce0,
        weights_15_q0,
        bias_address0,
        bias_ce0,
        bias_q0,
        output_0_0_address0,
        output_0_0_ce0,
        output_0_0_we0,
        output_0_0_d0
);

parameter    ap_ST_fsm_state1 = 10'd1;
parameter    ap_ST_fsm_pp0_stage0 = 10'd2;
parameter    ap_ST_fsm_pp0_stage1 = 10'd4;
parameter    ap_ST_fsm_pp0_stage2 = 10'd8;
parameter    ap_ST_fsm_pp0_stage3 = 10'd16;
parameter    ap_ST_fsm_pp0_stage4 = 10'd32;
parameter    ap_ST_fsm_pp0_stage5 = 10'd64;
parameter    ap_ST_fsm_pp0_stage6 = 10'd128;
parameter    ap_ST_fsm_pp0_stage7 = 10'd256;
parameter    ap_ST_fsm_state96 = 10'd512;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
output  [8:0] input_r_address0;
output   input_r_ce0;
input  [31:0] input_r_q0;
output  [8:0] input_r_address1;
output   input_r_ce1;
input  [31:0] input_r_q1;
output  [11:0] weights_0_address0;
output   weights_0_ce0;
input  [31:0] weights_0_q0;
output  [11:0] weights_1_address0;
output   weights_1_ce0;
input  [31:0] weights_1_q0;
output  [11:0] weights_2_address0;
output   weights_2_ce0;
input  [31:0] weights_2_q0;
output  [11:0] weights_3_address0;
output   weights_3_ce0;
input  [31:0] weights_3_q0;
output  [11:0] weights_4_address0;
output   weights_4_ce0;
input  [31:0] weights_4_q0;
output  [11:0] weights_5_address0;
output   weights_5_ce0;
input  [31:0] weights_5_q0;
output  [11:0] weights_6_address0;
output   weights_6_ce0;
input  [31:0] weights_6_q0;
output  [11:0] weights_7_address0;
output   weights_7_ce0;
input  [31:0] weights_7_q0;
output  [11:0] weights_8_address0;
output   weights_8_ce0;
input  [31:0] weights_8_q0;
output  [11:0] weights_9_address0;
output   weights_9_ce0;
input  [31:0] weights_9_q0;
output  [11:0] weights_10_address0;
output   weights_10_ce0;
input  [31:0] weights_10_q0;
output  [11:0] weights_11_address0;
output   weights_11_ce0;
input  [31:0] weights_11_q0;
output  [11:0] weights_12_address0;
output   weights_12_ce0;
input  [31:0] weights_12_q0;
output  [11:0] weights_13_address0;
output   weights_13_ce0;
input  [31:0] weights_13_q0;
output  [11:0] weights_14_address0;
output   weights_14_ce0;
input  [31:0] weights_14_q0;
output  [11:0] weights_15_address0;
output   weights_15_ce0;
input  [31:0] weights_15_q0;
output  [6:0] bias_address0;
output   bias_ce0;
input  [31:0] bias_q0;
output  [6:0] output_0_0_address0;
output   output_0_0_ce0;
output   output_0_0_we0;
output  [31:0] output_0_0_d0;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg[8:0] input_r_address0;
reg input_r_ce0;
reg[8:0] input_r_address1;
reg input_r_ce1;
reg weights_0_ce0;
reg weights_1_ce0;
reg weights_2_ce0;
reg weights_3_ce0;
reg weights_4_ce0;
reg weights_5_ce0;
reg weights_6_ce0;
reg weights_7_ce0;
reg weights_8_ce0;
reg weights_9_ce0;
reg weights_10_ce0;
reg weights_11_ce0;
reg weights_12_ce0;
reg weights_13_ce0;
reg weights_14_ce0;
reg weights_15_ce0;
reg bias_ce0;
reg output_0_0_ce0;
reg output_0_0_we0;

(* fsm_encoding = "none" *) reg   [9:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
reg   [11:0] indvar_flatten3_reg_499;
reg   [6:0] co_reg_510;
reg   [5:0] indvar_flatten_reg_522;
reg   [2:0] i_reg_533;
reg   [31:0] tmp_22_reg_544;
reg   [31:0] tmp_23_reg_556;
reg   [31:0] tmp_24_reg_568;
reg   [31:0] tmp_25_reg_580;
reg   [31:0] tmp_26_reg_592;
reg   [31:0] tmp_27_reg_604;
reg   [31:0] tmp_28_reg_616;
reg   [31:0] tmp_29_reg_628;
reg   [31:0] tmp_s_reg_640;
reg   [31:0] tmp_30_reg_652;
reg   [31:0] tmp_31_reg_664;
reg   [31:0] tmp_32_reg_676;
reg   [31:0] tmp_33_reg_688;
reg   [31:0] tmp_34_reg_700;
reg   [31:0] tmp_35_reg_712;
reg   [31:0] tmp_36_reg_724;
reg   [2:0] j_reg_736;
wire   [31:0] grp_fu_759_p2;
reg   [31:0] reg_771;
wire    ap_CS_fsm_pp0_stage6;
reg    ap_enable_reg_pp0_iter7;
wire    ap_block_state8_pp0_stage6_iter0;
wire    ap_block_state16_pp0_stage6_iter1;
wire    ap_block_state24_pp0_stage6_iter2;
wire    ap_block_state32_pp0_stage6_iter3;
wire    ap_block_state40_pp0_stage6_iter4;
wire    ap_block_state48_pp0_stage6_iter5;
wire    ap_block_state56_pp0_stage6_iter6;
wire    ap_block_state64_pp0_stage6_iter7;
wire    ap_block_state72_pp0_stage6_iter8;
wire    ap_block_state80_pp0_stage6_iter9;
wire    ap_block_state88_pp0_stage6_iter10;
wire    ap_block_pp0_stage6_11001;
reg   [0:0] or_cond3_reg_1441;
reg   [0:0] or_cond3_reg_1441_pp0_iter7_reg;
wire    ap_CS_fsm_pp0_stage4;
reg    ap_enable_reg_pp0_iter11;
wire    ap_block_state6_pp0_stage4_iter0;
wire    ap_block_state14_pp0_stage4_iter1;
wire    ap_block_state22_pp0_stage4_iter2;
wire    ap_block_state30_pp0_stage4_iter3;
wire    ap_block_state38_pp0_stage4_iter4;
wire    ap_block_state46_pp0_stage4_iter5;
wire    ap_block_state54_pp0_stage4_iter6;
wire    ap_block_state62_pp0_stage4_iter7;
wire    ap_block_state70_pp0_stage4_iter8;
wire    ap_block_state78_pp0_stage4_iter9;
wire    ap_block_state86_pp0_stage4_iter10;
wire    ap_block_state94_pp0_stage4_iter11;
wire    ap_block_pp0_stage4_11001;
reg   [0:0] or_cond3_reg_1441_pp0_iter11_reg;
wire   [0:0] exitcond_flatten3_fu_777_p2;
reg   [0:0] exitcond_flatten3_reg_1407;
wire    ap_CS_fsm_pp0_stage0;
wire    ap_block_state2_pp0_stage0_iter0;
wire    ap_block_state10_pp0_stage0_iter1;
wire    ap_block_state18_pp0_stage0_iter2;
wire    ap_block_state26_pp0_stage0_iter3;
wire    ap_block_state34_pp0_stage0_iter4;
wire    ap_block_state42_pp0_stage0_iter5;
wire    ap_block_state50_pp0_stage0_iter6;
wire    ap_block_state58_pp0_stage0_iter7;
wire    ap_block_state66_pp0_stage0_iter8;
wire    ap_block_state74_pp0_stage0_iter9;
wire    ap_block_state82_pp0_stage0_iter10;
wire    ap_block_state90_pp0_stage0_iter11;
wire    ap_block_pp0_stage0_11001;
reg   [0:0] exitcond_flatten3_reg_1407_pp0_iter1_reg;
reg   [0:0] exitcond_flatten3_reg_1407_pp0_iter2_reg;
reg   [0:0] exitcond_flatten3_reg_1407_pp0_iter3_reg;
reg   [0:0] exitcond_flatten3_reg_1407_pp0_iter4_reg;
reg   [0:0] exitcond_flatten3_reg_1407_pp0_iter5_reg;
reg   [0:0] exitcond_flatten3_reg_1407_pp0_iter6_reg;
reg   [0:0] exitcond_flatten3_reg_1407_pp0_iter7_reg;
reg   [0:0] exitcond_flatten3_reg_1407_pp0_iter8_reg;
reg   [0:0] exitcond_flatten3_reg_1407_pp0_iter9_reg;
reg   [0:0] exitcond_flatten3_reg_1407_pp0_iter10_reg;
wire   [11:0] indvar_flatten_next3_fu_783_p2;
reg   [11:0] indvar_flatten_next3_reg_1411;
reg    ap_enable_reg_pp0_iter0;
wire   [0:0] exitcond_flatten_fu_789_p2;
reg   [0:0] exitcond_flatten_reg_1416;
wire   [2:0] j_mid2_fu_845_p3;
reg   [2:0] j_mid2_reg_1423;
wire   [2:0] tmp_20_mid2_fu_853_p3;
reg   [2:0] tmp_20_mid2_reg_1431;
wire   [0:0] or_cond3_fu_881_p2;
reg   [0:0] or_cond3_reg_1441_pp0_iter1_reg;
reg   [0:0] or_cond3_reg_1441_pp0_iter2_reg;
reg   [0:0] or_cond3_reg_1441_pp0_iter3_reg;
reg   [0:0] or_cond3_reg_1441_pp0_iter4_reg;
reg   [0:0] or_cond3_reg_1441_pp0_iter5_reg;
reg   [0:0] or_cond3_reg_1441_pp0_iter6_reg;
reg   [0:0] or_cond3_reg_1441_pp0_iter8_reg;
reg   [0:0] or_cond3_reg_1441_pp0_iter9_reg;
reg   [0:0] or_cond3_reg_1441_pp0_iter10_reg;
wire   [5:0] indvar_flatten_op_fu_887_p2;
reg   [5:0] indvar_flatten_op_reg_1445;
wire   [6:0] tmp_mid2_v_fu_899_p3;
reg   [6:0] tmp_mid2_v_reg_1450;
wire    ap_CS_fsm_pp0_stage1;
wire    ap_block_state3_pp0_stage1_iter0;
wire    ap_block_state11_pp0_stage1_iter1;
wire    ap_block_state19_pp0_stage1_iter2;
wire    ap_block_state27_pp0_stage1_iter3;
wire    ap_block_state35_pp0_stage1_iter4;
wire    ap_block_state43_pp0_stage1_iter5;
wire    ap_block_state51_pp0_stage1_iter6;
wire    ap_block_state59_pp0_stage1_iter7;
wire    ap_block_state67_pp0_stage1_iter8;
wire    ap_block_state75_pp0_stage1_iter9;
wire    ap_block_state83_pp0_stage1_iter10;
wire    ap_block_state91_pp0_stage1_iter11;
wire    ap_block_pp0_stage1_11001;
reg   [6:0] tmp_mid2_v_reg_1450_pp0_iter1_reg;
reg   [6:0] tmp_mid2_v_reg_1450_pp0_iter2_reg;
reg   [6:0] tmp_mid2_v_reg_1450_pp0_iter3_reg;
reg   [6:0] tmp_mid2_v_reg_1450_pp0_iter4_reg;
reg   [6:0] tmp_mid2_v_reg_1450_pp0_iter5_reg;
reg   [6:0] tmp_mid2_v_reg_1450_pp0_iter6_reg;
reg   [6:0] tmp_mid2_v_reg_1450_pp0_iter7_reg;
reg   [6:0] tmp_mid2_v_reg_1450_pp0_iter8_reg;
reg   [6:0] tmp_mid2_v_reg_1450_pp0_iter9_reg;
reg   [6:0] tmp_mid2_v_reg_1450_pp0_iter10_reg;
wire   [9:0] tmp_130_fu_942_p2;
reg   [9:0] tmp_130_reg_1456;
wire   [9:0] tmp_147_fu_954_p2;
reg   [9:0] tmp_147_reg_1473;
wire   [9:0] tmp_39_cast_fu_960_p1;
reg   [9:0] tmp_39_cast_reg_1479;
wire    ap_CS_fsm_pp0_stage2;
wire    ap_block_state4_pp0_stage2_iter0;
wire    ap_block_state12_pp0_stage2_iter1;
wire    ap_block_state20_pp0_stage2_iter2;
wire    ap_block_state28_pp0_stage2_iter3;
wire    ap_block_state36_pp0_stage2_iter4;
wire    ap_block_state44_pp0_stage2_iter5;
wire    ap_block_state52_pp0_stage2_iter6;
wire    ap_block_state60_pp0_stage2_iter7;
wire    ap_block_state68_pp0_stage2_iter8;
wire    ap_block_state76_pp0_stage2_iter9;
wire    ap_block_state84_pp0_stage2_iter10;
wire    ap_block_state92_pp0_stage2_iter11;
wire    ap_block_pp0_stage2_11001;
wire   [63:0] tmp_220_cast_fu_1044_p1;
reg   [63:0] tmp_220_cast_reg_1517;
reg   [31:0] input_load_reg_1545;
reg   [31:0] input_load_1_reg_1550;
wire    ap_CS_fsm_pp0_stage3;
wire    ap_block_state5_pp0_stage3_iter0;
wire    ap_block_state13_pp0_stage3_iter1;
wire    ap_block_state21_pp0_stage3_iter2;
wire    ap_block_state29_pp0_stage3_iter3;
wire    ap_block_state37_pp0_stage3_iter4;
wire    ap_block_state45_pp0_stage3_iter5;
wire    ap_block_state53_pp0_stage3_iter6;
wire    ap_block_state61_pp0_stage3_iter7;
wire    ap_block_state69_pp0_stage3_iter8;
wire    ap_block_state77_pp0_stage3_iter9;
wire    ap_block_state85_pp0_stage3_iter10;
wire    ap_block_state93_pp0_stage3_iter11;
wire    ap_block_pp0_stage3_11001;
reg   [31:0] weights_0_load_reg_1575;
reg   [31:0] weights_1_load_reg_1580;
reg   [31:0] input_load_2_reg_1585;
reg   [31:0] input_load_3_reg_1590;
reg   [31:0] weights_2_load_reg_1615;
reg   [31:0] weights_3_load_reg_1620;
reg   [31:0] input_load_4_reg_1625;
reg   [31:0] input_load_5_reg_1630;
wire   [0:0] tmp_149_fu_1155_p2;
reg   [0:0] tmp_149_reg_1635;
wire    ap_CS_fsm_pp0_stage5;
wire    ap_block_state7_pp0_stage5_iter0;
wire    ap_block_state15_pp0_stage5_iter1;
wire    ap_block_state23_pp0_stage5_iter2;
wire    ap_block_state31_pp0_stage5_iter3;
wire    ap_block_state39_pp0_stage5_iter4;
wire    ap_block_state47_pp0_stage5_iter5;
wire    ap_block_state55_pp0_stage5_iter6;
wire    ap_block_state63_pp0_stage5_iter7;
wire    ap_block_state71_pp0_stage5_iter8;
wire    ap_block_state79_pp0_stage5_iter9;
wire    ap_block_state87_pp0_stage5_iter10;
wire    ap_block_state95_pp0_stage5_iter11;
wire    ap_block_pp0_stage5_11001;
wire   [31:0] p_14_fu_1160_p3;
reg   [31:0] p_14_reg_1653;
wire   [31:0] p_15_fu_1168_p3;
reg   [31:0] p_15_reg_1658;
reg   [31:0] weights_4_load_reg_1683;
reg   [31:0] weights_5_load_reg_1688;
reg   [31:0] input_load_6_reg_1693;
reg   [31:0] input_load_7_reg_1698;
wire   [2:0] j_10_fu_1196_p2;
reg   [2:0] j_10_reg_1703;
wire   [5:0] indvar_flatten_next_fu_1201_p3;
reg   [5:0] indvar_flatten_next_reg_1708;
reg   [31:0] weights_6_load_reg_1733;
reg   [31:0] weights_7_load_reg_1738;
reg   [31:0] input_load_8_reg_1743;
reg   [31:0] input_load_9_reg_1748;
wire    ap_CS_fsm_pp0_stage7;
wire    ap_block_state9_pp0_stage7_iter0;
wire    ap_block_state17_pp0_stage7_iter1;
wire    ap_block_state25_pp0_stage7_iter2;
wire    ap_block_state33_pp0_stage7_iter3;
wire    ap_block_state41_pp0_stage7_iter4;
wire    ap_block_state49_pp0_stage7_iter5;
wire    ap_block_state57_pp0_stage7_iter6;
wire    ap_block_state65_pp0_stage7_iter7;
wire    ap_block_state73_pp0_stage7_iter8;
wire    ap_block_state81_pp0_stage7_iter9;
wire    ap_block_state89_pp0_stage7_iter10;
wire    ap_block_pp0_stage7_11001;
wire   [31:0] grp_fu_763_p2;
reg   [31:0] tmp_40_reg_1773;
wire   [31:0] grp_fu_767_p2;
reg   [31:0] tmp_42_reg_1778;
reg   [31:0] weights_8_load_reg_1783;
reg   [31:0] weights_9_load_reg_1788;
reg   [31:0] input_load_10_reg_1793;
reg   [31:0] input_load_11_reg_1798;
reg   [31:0] tmp_44_reg_1823;
reg    ap_enable_reg_pp0_iter1;
reg   [31:0] tmp_46_reg_1828;
reg   [31:0] weights_10_load_reg_1833;
reg   [31:0] weights_11_load_reg_1838;
reg   [31:0] input_load_12_reg_1843;
reg   [31:0] input_load_13_reg_1848;
wire   [31:0] p_12_fu_1297_p3;
wire   [31:0] p_13_fu_1305_p3;
reg   [31:0] tmp_48_reg_1873;
reg   [31:0] tmp_50_reg_1878;
reg   [31:0] weights_12_load_reg_1883;
reg   [31:0] weights_13_load_reg_1888;
reg   [31:0] input_load_14_reg_1893;
reg   [31:0] input_load_15_reg_1898;
wire   [31:0] p_10_fu_1313_p3;
wire   [31:0] p_11_fu_1321_p3;
reg   [31:0] tmp_52_reg_1913;
reg   [31:0] tmp_54_reg_1918;
reg   [31:0] weights_14_load_reg_1923;
reg   [31:0] weights_15_load_reg_1928;
wire   [31:0] p_8_fu_1329_p3;
wire   [31:0] p_9_fu_1337_p3;
reg   [31:0] tmp_56_reg_1943;
reg   [31:0] tmp_58_reg_1948;
wire   [31:0] p_s_fu_1345_p3;
reg   [31:0] p_s_reg_1953;
wire   [31:0] p_1_fu_1352_p3;
reg   [31:0] p_1_reg_1958;
wire   [31:0] p_2_fu_1359_p3;
reg   [31:0] p_2_reg_1963;
wire   [31:0] p_3_fu_1366_p3;
reg   [31:0] p_3_reg_1968;
wire   [31:0] p_4_fu_1373_p3;
reg   [31:0] p_4_reg_1973;
wire   [31:0] p_5_fu_1380_p3;
reg   [31:0] p_5_reg_1978;
wire   [31:0] p_6_fu_1387_p3;
wire   [31:0] p_7_fu_1395_p3;
wire   [31:0] grp_fu_747_p2;
reg   [31:0] tmp_41_reg_1993;
wire   [31:0] grp_fu_751_p2;
reg   [31:0] tmp_43_reg_1999;
reg   [31:0] tmp_60_reg_2005;
reg   [31:0] tmp_62_reg_2010;
reg   [31:0] tmp_45_reg_2015;
reg   [31:0] tmp_47_reg_2021;
reg   [31:0] tmp_47_reg_2021_pp0_iter2_reg;
reg   [31:0] tmp_64_reg_2027;
reg   [31:0] tmp_66_reg_2032;
reg   [31:0] tmp_49_reg_2037;
reg   [31:0] tmp_49_reg_2037_pp0_iter2_reg;
reg   [31:0] tmp_51_reg_2043;
reg   [31:0] tmp_51_reg_2043_pp0_iter2_reg;
reg   [31:0] tmp_51_reg_2043_pp0_iter3_reg;
reg   [31:0] tmp_68_reg_2049;
reg   [31:0] tmp_70_reg_2054;
reg   [31:0] tmp_53_reg_2059;
reg   [31:0] tmp_53_reg_2059_pp0_iter2_reg;
reg   [31:0] tmp_53_reg_2059_pp0_iter3_reg;
reg   [31:0] tmp_55_reg_2065;
reg   [31:0] tmp_55_reg_2065_pp0_iter2_reg;
reg   [31:0] tmp_55_reg_2065_pp0_iter3_reg;
reg   [31:0] tmp_55_reg_2065_pp0_iter4_reg;
reg   [31:0] tmp_57_reg_2071;
reg    ap_enable_reg_pp0_iter2;
reg   [31:0] tmp_57_reg_2071_pp0_iter3_reg;
reg   [31:0] tmp_57_reg_2071_pp0_iter4_reg;
reg   [31:0] tmp_57_reg_2071_pp0_iter5_reg;
reg   [31:0] tmp_59_reg_2077;
reg   [31:0] tmp_59_reg_2077_pp0_iter3_reg;
reg   [31:0] tmp_59_reg_2077_pp0_iter4_reg;
reg   [31:0] tmp_59_reg_2077_pp0_iter5_reg;
reg   [31:0] tmp_59_reg_2077_pp0_iter6_reg;
reg   [31:0] tmp_61_reg_2083;
reg   [31:0] tmp_61_reg_2083_pp0_iter3_reg;
reg   [31:0] tmp_61_reg_2083_pp0_iter4_reg;
reg   [31:0] tmp_61_reg_2083_pp0_iter5_reg;
reg   [31:0] tmp_61_reg_2083_pp0_iter6_reg;
reg   [31:0] tmp_61_reg_2083_pp0_iter7_reg;
reg   [31:0] tmp_63_reg_2089;
reg   [31:0] tmp_63_reg_2089_pp0_iter3_reg;
reg   [31:0] tmp_63_reg_2089_pp0_iter4_reg;
reg   [31:0] tmp_63_reg_2089_pp0_iter5_reg;
reg   [31:0] tmp_63_reg_2089_pp0_iter6_reg;
reg   [31:0] tmp_63_reg_2089_pp0_iter7_reg;
wire   [31:0] grp_fu_755_p2;
reg   [31:0] tmp_73_reg_2095;
reg   [31:0] tmp_65_reg_2100;
reg   [31:0] tmp_65_reg_2100_pp0_iter3_reg;
reg   [31:0] tmp_65_reg_2100_pp0_iter4_reg;
reg   [31:0] tmp_65_reg_2100_pp0_iter5_reg;
reg   [31:0] tmp_65_reg_2100_pp0_iter6_reg;
reg   [31:0] tmp_65_reg_2100_pp0_iter7_reg;
reg   [31:0] tmp_65_reg_2100_pp0_iter8_reg;
reg   [31:0] tmp_67_reg_2106;
reg   [31:0] tmp_67_reg_2106_pp0_iter3_reg;
reg   [31:0] tmp_67_reg_2106_pp0_iter4_reg;
reg   [31:0] tmp_67_reg_2106_pp0_iter5_reg;
reg   [31:0] tmp_67_reg_2106_pp0_iter6_reg;
reg   [31:0] tmp_67_reg_2106_pp0_iter7_reg;
reg   [31:0] tmp_67_reg_2106_pp0_iter8_reg;
reg   [31:0] tmp_69_reg_2112;
reg   [31:0] tmp_69_reg_2112_pp0_iter3_reg;
reg   [31:0] tmp_69_reg_2112_pp0_iter4_reg;
reg   [31:0] tmp_69_reg_2112_pp0_iter5_reg;
reg   [31:0] tmp_69_reg_2112_pp0_iter6_reg;
reg   [31:0] tmp_69_reg_2112_pp0_iter7_reg;
reg   [31:0] tmp_69_reg_2112_pp0_iter8_reg;
reg   [31:0] tmp_69_reg_2112_pp0_iter9_reg;
reg   [31:0] tmp_71_reg_2118;
reg   [31:0] tmp_71_reg_2118_pp0_iter3_reg;
reg   [31:0] tmp_71_reg_2118_pp0_iter4_reg;
reg   [31:0] tmp_71_reg_2118_pp0_iter5_reg;
reg   [31:0] tmp_71_reg_2118_pp0_iter6_reg;
reg   [31:0] tmp_71_reg_2118_pp0_iter7_reg;
reg   [31:0] tmp_71_reg_2118_pp0_iter8_reg;
reg   [31:0] tmp_71_reg_2118_pp0_iter9_reg;
reg   [31:0] tmp_74_reg_2124;
reg   [31:0] tmp_75_reg_2129;
reg    ap_enable_reg_pp0_iter3;
reg   [31:0] tmp_76_reg_2134;
reg    ap_enable_reg_pp0_iter4;
reg   [31:0] tmp_77_reg_2139;
reg   [31:0] tmp_78_reg_2144;
reg    ap_enable_reg_pp0_iter5;
reg   [31:0] tmp_79_reg_2149;
reg   [31:0] tmp_80_reg_2154;
reg    ap_enable_reg_pp0_iter6;
reg   [31:0] tmp_81_reg_2159;
reg   [31:0] tmp_83_reg_2164;
reg    ap_enable_reg_pp0_iter8;
reg   [31:0] tmp_84_reg_2169;
reg    ap_enable_reg_pp0_iter9;
reg   [31:0] tmp_85_reg_2174;
reg   [31:0] tmp_86_reg_2179;
reg    ap_enable_reg_pp0_iter10;
wire   [63:0] tmp_mid2_fu_1403_p1;
reg   [63:0] tmp_mid2_reg_2184;
reg   [31:0] tmp_87_reg_2194;
reg   [31:0] bias_load_reg_2199;
wire    ap_block_pp0_stage0_subdone;
reg    ap_condition_pp0_exit_iter0_state2;
wire    ap_block_pp0_stage7_subdone;
wire    ap_block_pp0_stage5_subdone;
reg   [11:0] ap_phi_mux_indvar_flatten3_phi_fu_503_p4;
wire    ap_block_pp0_stage0;
reg   [6:0] ap_phi_mux_co_phi_fu_514_p4;
wire    ap_block_pp0_stage1;
reg   [5:0] ap_phi_mux_indvar_flatten_phi_fu_526_p4;
reg   [2:0] ap_phi_mux_i_phi_fu_537_p4;
reg   [31:0] ap_phi_mux_tmp_22_phi_fu_548_p4;
wire    ap_block_pp0_stage4;
reg   [31:0] ap_phi_mux_tmp_23_phi_fu_560_p4;
reg   [31:0] ap_phi_mux_tmp_24_phi_fu_572_p4;
reg   [31:0] ap_phi_mux_tmp_25_phi_fu_584_p4;
reg   [31:0] ap_phi_mux_tmp_26_phi_fu_596_p4;
reg   [31:0] ap_phi_mux_tmp_27_phi_fu_608_p4;
reg   [31:0] ap_phi_mux_tmp_28_phi_fu_620_p4;
reg   [31:0] ap_phi_mux_tmp_29_phi_fu_632_p4;
reg   [31:0] ap_phi_mux_tmp_s_phi_fu_644_p4;
wire    ap_block_pp0_stage3;
reg   [31:0] ap_phi_mux_tmp_30_phi_fu_656_p4;
reg   [31:0] ap_phi_mux_tmp_31_phi_fu_668_p4;
wire    ap_block_pp0_stage2;
reg   [31:0] ap_phi_mux_tmp_32_phi_fu_680_p4;
reg   [31:0] ap_phi_mux_tmp_33_phi_fu_692_p4;
reg   [31:0] ap_phi_mux_tmp_34_phi_fu_704_p4;
reg   [31:0] ap_phi_mux_tmp_35_phi_fu_716_p4;
wire    ap_block_pp0_stage5;
reg   [31:0] ap_phi_mux_tmp_36_phi_fu_728_p4;
reg   [2:0] ap_phi_mux_j_phi_fu_740_p4;
wire   [63:0] tmp_204_cast_fu_969_p1;
wire   [63:0] tmp_205_cast_fu_980_p1;
wire   [63:0] tmp_206_cast_fu_1023_p1;
wire   [63:0] tmp_207_cast_fu_1033_p1;
wire   [63:0] tmp_208_cast_fu_1065_p1;
wire   [63:0] tmp_209_cast_fu_1075_p1;
wire   [63:0] tmp_210_cast_fu_1095_p1;
wire   [63:0] tmp_211_cast_fu_1105_p1;
wire   [63:0] tmp_212_cast_fu_1181_p1;
wire   [63:0] tmp_213_cast_fu_1191_p1;
wire   [63:0] tmp_214_cast_fu_1222_p1;
wire    ap_block_pp0_stage6;
wire   [63:0] tmp_215_cast_fu_1232_p1;
wire   [63:0] tmp_216_cast_fu_1252_p1;
wire    ap_block_pp0_stage7;
wire   [63:0] tmp_217_cast_fu_1262_p1;
wire   [63:0] tmp_218_cast_fu_1282_p1;
wire   [63:0] tmp_219_cast_fu_1292_p1;
reg   [31:0] grp_fu_747_p0;
reg   [31:0] grp_fu_747_p1;
reg   [31:0] grp_fu_751_p0;
reg   [31:0] grp_fu_751_p1;
reg   [31:0] grp_fu_755_p0;
reg   [31:0] grp_fu_755_p1;
reg   [31:0] grp_fu_759_p0;
reg   [31:0] grp_fu_759_p1;
reg   [31:0] grp_fu_763_p0;
reg   [31:0] grp_fu_763_p1;
reg   [31:0] grp_fu_767_p0;
reg   [31:0] grp_fu_767_p1;
wire   [0:0] tmp_128_fu_809_p2;
wire   [0:0] not_exitcond_flatten_fu_803_p2;
wire   [0:0] exitcond_fu_821_p2;
wire   [2:0] i_mid_fu_795_p3;
wire   [0:0] exitcond_mid_fu_827_p2;
wire   [0:0] tmp_129_fu_839_p2;
wire   [2:0] i_15_fu_833_p2;
wire   [0:0] tmp_21_mid1_fu_861_p2;
wire   [0:0] tmp_21_mid_fu_815_p2;
wire   [0:0] tmp_72_fu_875_p2;
wire   [0:0] tmp_21_mid2_fu_867_p3;
wire   [6:0] co_2_fu_893_p2;
wire   [8:0] tmp_fu_910_p3;
wire   [9:0] tmp_mid2_cast_fu_906_p1;
wire   [9:0] p_shl4_cast_fu_918_p1;
wire   [4:0] tmp_89_fu_931_p3;
wire   [9:0] tmp_20_mid2_cast_fu_928_p1;
wire   [9:0] p_shl3_cast_fu_938_p1;
wire   [9:0] tmp_127_fu_922_p2;
wire   [9:0] tmp_150_fu_963_p2;
wire   [9:0] tmp_131_fu_948_p2;
wire   [9:0] tmp_151_fu_974_p2;
wire   [11:0] tmp_91_fu_998_p3;
wire   [12:0] tmp_185_cast_fu_995_p1;
wire   [12:0] p_shl_cast_fu_1005_p1;
wire   [9:0] tmp_132_fu_985_p2;
wire   [9:0] tmp_152_fu_1018_p2;
wire   [9:0] tmp_133_fu_990_p2;
wire   [9:0] tmp_153_fu_1028_p2;
wire   [12:0] tmp_148_fu_1009_p2;
wire   [12:0] tmp_39_cast1_fu_1015_p1;
wire   [12:0] tmp_166_fu_1038_p2;
wire   [9:0] tmp_134_fu_1050_p2;
wire   [9:0] tmp_154_fu_1060_p2;
wire   [9:0] tmp_135_fu_1055_p2;
wire   [9:0] tmp_155_fu_1070_p2;
wire   [9:0] tmp_136_fu_1080_p2;
wire   [9:0] tmp_156_fu_1090_p2;
wire   [9:0] tmp_137_fu_1085_p2;
wire   [9:0] tmp_157_fu_1100_p2;
wire   [5:0] tmp_138_fu_1110_p3;
wire   [7:0] tmp_90_fu_1121_p4;
wire   [9:0] tmp_175_cast_fu_1117_p1;
wire   [9:0] p_shl2_cast_fu_1130_p1;
wire   [2:0] tmp_37_fu_1145_p2;
wire   [0:0] tmp_38_fu_1149_p2;
wire   [9:0] tmp_139_fu_1134_p2;
wire   [9:0] tmp_158_fu_1176_p2;
wire   [9:0] tmp_140_fu_1140_p2;
wire   [9:0] tmp_159_fu_1186_p2;
wire   [9:0] tmp_141_fu_1207_p2;
wire   [9:0] tmp_160_fu_1217_p2;
wire   [9:0] tmp_142_fu_1212_p2;
wire   [9:0] tmp_161_fu_1227_p2;
wire   [9:0] tmp_143_fu_1237_p2;
wire   [9:0] tmp_162_fu_1247_p2;
wire   [9:0] tmp_144_fu_1242_p2;
wire   [9:0] tmp_163_fu_1257_p2;
wire   [9:0] tmp_145_fu_1267_p2;
wire   [9:0] tmp_164_fu_1277_p2;
wire   [9:0] tmp_146_fu_1272_p2;
wire   [9:0] tmp_165_fu_1287_p2;
wire    ap_CS_fsm_state96;
reg   [9:0] ap_NS_fsm;
wire    ap_block_pp0_stage1_subdone;
wire    ap_block_pp0_stage2_subdone;
wire    ap_block_pp0_stage3_subdone;
wire    ap_block_pp0_stage4_subdone;
wire    ap_block_pp0_stage6_subdone;
reg    ap_idle_pp0;
wire    ap_enable_pp0;

// power-on initialization
initial begin
#0 ap_CS_fsm = 10'd1;
#0 ap_enable_reg_pp0_iter7 = 1'b0;
#0 ap_enable_reg_pp0_iter11 = 1'b0;
#0 ap_enable_reg_pp0_iter0 = 1'b0;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp0_iter2 = 1'b0;
#0 ap_enable_reg_pp0_iter3 = 1'b0;
#0 ap_enable_reg_pp0_iter4 = 1'b0;
#0 ap_enable_reg_pp0_iter5 = 1'b0;
#0 ap_enable_reg_pp0_iter6 = 1'b0;
#0 ap_enable_reg_pp0_iter8 = 1'b0;
#0 ap_enable_reg_pp0_iter9 = 1'b0;
#0 ap_enable_reg_pp0_iter10 = 1'b0;
end

conv1_fadd_32ns_3bkb #(
    .ID( 1 ),
    .NUM_STAGE( 5 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
conv1_fadd_32ns_3bkb_U59(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_747_p0),
    .din1(grp_fu_747_p1),
    .ce(1'b1),
    .dout(grp_fu_747_p2)
);

conv1_fadd_32ns_3bkb #(
    .ID( 1 ),
    .NUM_STAGE( 5 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
conv1_fadd_32ns_3bkb_U60(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_751_p0),
    .din1(grp_fu_751_p1),
    .ce(1'b1),
    .dout(grp_fu_751_p2)
);

conv1_fadd_32ns_3bkb #(
    .ID( 1 ),
    .NUM_STAGE( 5 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
conv1_fadd_32ns_3bkb_U61(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_755_p0),
    .din1(grp_fu_755_p1),
    .ce(1'b1),
    .dout(grp_fu_755_p2)
);

conv1_fadd_32ns_3bkb #(
    .ID( 1 ),
    .NUM_STAGE( 5 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
conv1_fadd_32ns_3bkb_U62(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_759_p0),
    .din1(grp_fu_759_p1),
    .ce(1'b1),
    .dout(grp_fu_759_p2)
);

conv1_fmul_32ns_3cud #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
conv1_fmul_32ns_3cud_U63(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_763_p0),
    .din1(grp_fu_763_p1),
    .ce(1'b1),
    .dout(grp_fu_763_p2)
);

conv1_fmul_32ns_3cud #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
conv1_fmul_32ns_3cud_U64(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_767_p0),
    .din1(grp_fu_767_p1),
    .ce(1'b1),
    .dout(grp_fu_767_p2)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter0 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_condition_pp0_exit_iter0_state2) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            ap_enable_reg_pp0_iter0 <= 1'b0;
        end else if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
            ap_enable_reg_pp0_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage7_subdone) & (1'b1 == ap_CS_fsm_pp0_stage7))) begin
            if ((1'b1 == ap_condition_pp0_exit_iter0_state2)) begin
                ap_enable_reg_pp0_iter1 <= (1'b1 ^ ap_condition_pp0_exit_iter0_state2);
            end else if ((1'b1 == 1'b1)) begin
                ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
            end
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter10 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage7_subdone) & (1'b1 == ap_CS_fsm_pp0_stage7))) begin
            ap_enable_reg_pp0_iter10 <= ap_enable_reg_pp0_iter9;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter11 <= 1'b0;
    end else begin
        if ((((1'b0 == ap_block_pp0_stage7_subdone) & (1'b1 == ap_CS_fsm_pp0_stage7)) | ((1'b0 == ap_block_pp0_stage5_subdone) & (1'b1 == ap_CS_fsm_pp0_stage5)))) begin
            ap_enable_reg_pp0_iter11 <= ap_enable_reg_pp0_iter10;
        end else if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
            ap_enable_reg_pp0_iter11 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter2 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage7_subdone) & (1'b1 == ap_CS_fsm_pp0_stage7))) begin
            ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter3 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage7_subdone) & (1'b1 == ap_CS_fsm_pp0_stage7))) begin
            ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter4 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage7_subdone) & (1'b1 == ap_CS_fsm_pp0_stage7))) begin
            ap_enable_reg_pp0_iter4 <= ap_enable_reg_pp0_iter3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter5 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage7_subdone) & (1'b1 == ap_CS_fsm_pp0_stage7))) begin
            ap_enable_reg_pp0_iter5 <= ap_enable_reg_pp0_iter4;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter6 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage7_subdone) & (1'b1 == ap_CS_fsm_pp0_stage7))) begin
            ap_enable_reg_pp0_iter6 <= ap_enable_reg_pp0_iter5;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter7 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage7_subdone) & (1'b1 == ap_CS_fsm_pp0_stage7))) begin
            ap_enable_reg_pp0_iter7 <= ap_enable_reg_pp0_iter6;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter8 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage7_subdone) & (1'b1 == ap_CS_fsm_pp0_stage7))) begin
            ap_enable_reg_pp0_iter8 <= ap_enable_reg_pp0_iter7;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter9 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage7_subdone) & (1'b1 == ap_CS_fsm_pp0_stage7))) begin
            ap_enable_reg_pp0_iter9 <= ap_enable_reg_pp0_iter8;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (exitcond_flatten3_reg_1407_pp0_iter1_reg == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        co_reg_510 <= tmp_mid2_v_reg_1450;
    end else if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
        co_reg_510 <= 7'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (exitcond_flatten3_reg_1407 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        i_reg_533 <= tmp_20_mid2_reg_1431;
    end else if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
        i_reg_533 <= 3'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (exitcond_flatten3_reg_1407 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        indvar_flatten3_reg_499 <= indvar_flatten_next3_reg_1411;
    end else if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
        indvar_flatten3_reg_499 <= 12'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (exitcond_flatten3_reg_1407 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        indvar_flatten_reg_522 <= indvar_flatten_next_reg_1708;
    end else if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
        indvar_flatten_reg_522 <= 6'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (exitcond_flatten3_reg_1407 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        j_reg_736 <= j_10_reg_1703;
    end else if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
        j_reg_736 <= 3'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond_flatten3_reg_1407_pp0_iter2_reg == 1'd0) & (1'b0 == ap_block_pp0_stage4_11001) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
        tmp_22_reg_544 <= tmp_71_reg_2118;
    end else if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
        tmp_22_reg_544 <= 32'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond_flatten3_reg_1407_pp0_iter2_reg == 1'd0) & (1'b0 == ap_block_pp0_stage4_11001) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
        tmp_23_reg_556 <= tmp_69_reg_2112;
    end else if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
        tmp_23_reg_556 <= 32'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond_flatten3_reg_1407_pp0_iter2_reg == 1'd0) & (1'b0 == ap_block_pp0_stage4_11001) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
        tmp_24_reg_568 <= tmp_67_reg_2106;
    end else if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
        tmp_24_reg_568 <= 32'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond_flatten3_reg_1407_pp0_iter2_reg == 1'd0) & (1'b0 == ap_block_pp0_stage4_11001) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
        tmp_25_reg_580 <= tmp_65_reg_2100;
    end else if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
        tmp_25_reg_580 <= 32'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond_flatten3_reg_1407_pp0_iter2_reg == 1'd0) & (1'b0 == ap_block_pp0_stage4_11001) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
        tmp_26_reg_592 <= tmp_63_reg_2089;
    end else if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
        tmp_26_reg_592 <= 32'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond_flatten3_reg_1407_pp0_iter2_reg == 1'd0) & (1'b0 == ap_block_pp0_stage4_11001) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
        tmp_27_reg_604 <= tmp_61_reg_2083;
    end else if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
        tmp_27_reg_604 <= 32'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond_flatten3_reg_1407_pp0_iter2_reg == 1'd0) & (1'b0 == ap_block_pp0_stage4_11001) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
        tmp_28_reg_616 <= tmp_59_reg_2077;
    end else if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
        tmp_28_reg_616 <= 32'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond_flatten3_reg_1407_pp0_iter2_reg == 1'd0) & (1'b0 == ap_block_pp0_stage4_11001) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
        tmp_29_reg_628 <= tmp_57_reg_2071;
    end else if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
        tmp_29_reg_628 <= 32'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage3_11001) & (exitcond_flatten3_reg_1407_pp0_iter2_reg == 1'd0) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
        tmp_30_reg_652 <= tmp_53_reg_2059;
    end else if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
        tmp_30_reg_652 <= 32'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage2_11001) & (exitcond_flatten3_reg_1407_pp0_iter2_reg == 1'd0) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        tmp_31_reg_664 <= tmp_51_reg_2043;
    end else if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
        tmp_31_reg_664 <= 32'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage2_11001) & (exitcond_flatten3_reg_1407_pp0_iter2_reg == 1'd0) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        tmp_32_reg_676 <= tmp_49_reg_2037;
    end else if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
        tmp_32_reg_676 <= 32'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (exitcond_flatten3_reg_1407_pp0_iter2_reg == 1'd0) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        tmp_33_reg_688 <= tmp_47_reg_2021;
    end else if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
        tmp_33_reg_688 <= 32'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (exitcond_flatten3_reg_1407_pp0_iter2_reg == 1'd0) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        tmp_34_reg_700 <= tmp_45_reg_2015;
    end else if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
        tmp_34_reg_700 <= 32'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage5_11001) & (exitcond_flatten3_reg_1407_pp0_iter1_reg == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage5))) begin
        tmp_35_reg_712 <= tmp_43_reg_1999;
    end else if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
        tmp_35_reg_712 <= 32'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage5_11001) & (exitcond_flatten3_reg_1407_pp0_iter1_reg == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage5))) begin
        tmp_36_reg_724 <= tmp_41_reg_1993;
    end else if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
        tmp_36_reg_724 <= 32'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage3_11001) & (exitcond_flatten3_reg_1407_pp0_iter2_reg == 1'd0) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
        tmp_s_reg_640 <= tmp_55_reg_2065;
    end else if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
        tmp_s_reg_640 <= 32'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage7_11001) & (or_cond3_reg_1441_pp0_iter10_reg == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage7))) begin
        bias_load_reg_2199 <= bias_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        exitcond_flatten3_reg_1407 <= exitcond_flatten3_fu_777_p2;
        exitcond_flatten3_reg_1407_pp0_iter10_reg <= exitcond_flatten3_reg_1407_pp0_iter9_reg;
        exitcond_flatten3_reg_1407_pp0_iter1_reg <= exitcond_flatten3_reg_1407;
        exitcond_flatten3_reg_1407_pp0_iter2_reg <= exitcond_flatten3_reg_1407_pp0_iter1_reg;
        exitcond_flatten3_reg_1407_pp0_iter3_reg <= exitcond_flatten3_reg_1407_pp0_iter2_reg;
        exitcond_flatten3_reg_1407_pp0_iter4_reg <= exitcond_flatten3_reg_1407_pp0_iter3_reg;
        exitcond_flatten3_reg_1407_pp0_iter5_reg <= exitcond_flatten3_reg_1407_pp0_iter4_reg;
        exitcond_flatten3_reg_1407_pp0_iter6_reg <= exitcond_flatten3_reg_1407_pp0_iter5_reg;
        exitcond_flatten3_reg_1407_pp0_iter7_reg <= exitcond_flatten3_reg_1407_pp0_iter6_reg;
        exitcond_flatten3_reg_1407_pp0_iter8_reg <= exitcond_flatten3_reg_1407_pp0_iter7_reg;
        exitcond_flatten3_reg_1407_pp0_iter9_reg <= exitcond_flatten3_reg_1407_pp0_iter8_reg;
        or_cond3_reg_1441_pp0_iter10_reg <= or_cond3_reg_1441_pp0_iter9_reg;
        or_cond3_reg_1441_pp0_iter11_reg <= or_cond3_reg_1441_pp0_iter10_reg;
        or_cond3_reg_1441_pp0_iter1_reg <= or_cond3_reg_1441;
        or_cond3_reg_1441_pp0_iter2_reg <= or_cond3_reg_1441_pp0_iter1_reg;
        or_cond3_reg_1441_pp0_iter3_reg <= or_cond3_reg_1441_pp0_iter2_reg;
        or_cond3_reg_1441_pp0_iter4_reg <= or_cond3_reg_1441_pp0_iter3_reg;
        or_cond3_reg_1441_pp0_iter5_reg <= or_cond3_reg_1441_pp0_iter4_reg;
        or_cond3_reg_1441_pp0_iter6_reg <= or_cond3_reg_1441_pp0_iter5_reg;
        or_cond3_reg_1441_pp0_iter7_reg <= or_cond3_reg_1441_pp0_iter6_reg;
        or_cond3_reg_1441_pp0_iter8_reg <= or_cond3_reg_1441_pp0_iter7_reg;
        or_cond3_reg_1441_pp0_iter9_reg <= or_cond3_reg_1441_pp0_iter8_reg;
        tmp_57_reg_2071_pp0_iter3_reg <= tmp_57_reg_2071;
        tmp_57_reg_2071_pp0_iter4_reg <= tmp_57_reg_2071_pp0_iter3_reg;
        tmp_57_reg_2071_pp0_iter5_reg <= tmp_57_reg_2071_pp0_iter4_reg;
        tmp_59_reg_2077_pp0_iter3_reg <= tmp_59_reg_2077;
        tmp_59_reg_2077_pp0_iter4_reg <= tmp_59_reg_2077_pp0_iter3_reg;
        tmp_59_reg_2077_pp0_iter5_reg <= tmp_59_reg_2077_pp0_iter4_reg;
        tmp_59_reg_2077_pp0_iter6_reg <= tmp_59_reg_2077_pp0_iter5_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (exitcond_flatten3_fu_777_p2 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        exitcond_flatten_reg_1416 <= exitcond_flatten_fu_789_p2;
        indvar_flatten_op_reg_1445 <= indvar_flatten_op_fu_887_p2;
        j_mid2_reg_1423 <= j_mid2_fu_845_p3;
        or_cond3_reg_1441 <= or_cond3_fu_881_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        indvar_flatten_next3_reg_1411 <= indvar_flatten_next3_fu_783_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage5_11001) & (exitcond_flatten3_reg_1407 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage5) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        indvar_flatten_next_reg_1708 <= indvar_flatten_next_fu_1201_p3;
        input_load_6_reg_1693 <= input_r_q0;
        input_load_7_reg_1698 <= input_r_q1;
        j_10_reg_1703 <= j_10_fu_1196_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage7_11001) & (exitcond_flatten3_reg_1407 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage7) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        input_load_10_reg_1793 <= input_r_q0;
        input_load_11_reg_1798 <= input_r_q1;
        tmp_40_reg_1773 <= grp_fu_763_p2;
        tmp_42_reg_1778 <= grp_fu_767_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (exitcond_flatten3_reg_1407 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        input_load_12_reg_1843 <= input_r_q0;
        input_load_13_reg_1848 <= input_r_q1;
        tmp_44_reg_1823 <= grp_fu_763_p2;
        tmp_46_reg_1828 <= grp_fu_767_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (exitcond_flatten3_reg_1407_pp0_iter1_reg == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        input_load_14_reg_1893 <= input_r_q0;
        input_load_15_reg_1898 <= input_r_q1;
        tmp_48_reg_1873 <= grp_fu_763_p2;
        tmp_50_reg_1878 <= grp_fu_767_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage2_11001) & (exitcond_flatten3_reg_1407 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage2) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        input_load_1_reg_1550 <= input_r_q1;
        input_load_reg_1545 <= input_r_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage3_11001) & (exitcond_flatten3_reg_1407 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage3) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        input_load_2_reg_1585 <= input_r_q0;
        input_load_3_reg_1590 <= input_r_q1;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond_flatten3_reg_1407 == 1'd0) & (1'b0 == ap_block_pp0_stage4_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
        input_load_4_reg_1625 <= input_r_q0;
        input_load_5_reg_1630 <= input_r_q1;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond_flatten3_reg_1407 == 1'd0) & (1'b0 == ap_block_pp0_stage6_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage6))) begin
        input_load_8_reg_1743 <= input_r_q0;
        input_load_9_reg_1748 <= input_r_q1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage5_11001) & (exitcond_flatten3_reg_1407 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage5))) begin
        p_14_reg_1653 <= p_14_fu_1160_p3;
        p_15_reg_1658 <= p_15_fu_1168_p3;
        tmp_149_reg_1635 <= tmp_149_fu_1155_p2;
        weights_4_load_reg_1683 <= weights_4_q0;
        weights_5_load_reg_1688 <= weights_5_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond_flatten3_reg_1407_pp0_iter1_reg == 1'd0) & (1'b0 == ap_block_pp0_stage4_11001) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
        p_1_reg_1958 <= p_1_fu_1352_p3;
        p_2_reg_1963 <= p_2_fu_1359_p3;
        p_3_reg_1968 <= p_3_fu_1366_p3;
        p_4_reg_1973 <= p_4_fu_1373_p3;
        p_5_reg_1978 <= p_5_fu_1380_p3;
        p_s_reg_1953 <= p_s_fu_1345_p3;
    end
end

always @ (posedge ap_clk) begin
    if ((((1'b0 == ap_block_pp0_stage4_11001) & (or_cond3_reg_1441_pp0_iter11_reg == 1'd1) & (ap_enable_reg_pp0_iter11 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4)) | ((or_cond3_reg_1441_pp0_iter7_reg == 1'd1) & (1'b0 == ap_block_pp0_stage6_11001) & (ap_enable_reg_pp0_iter7 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage6)))) begin
        reg_771 <= grp_fu_759_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (exitcond_flatten3_reg_1407 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        tmp_130_reg_1456 <= tmp_130_fu_942_p2;
        tmp_147_reg_1473 <= tmp_147_fu_954_p2;
        tmp_39_cast_reg_1479[2 : 0] <= tmp_39_cast_fu_960_p1[2 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (exitcond_flatten3_fu_777_p2 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        tmp_20_mid2_reg_1431 <= tmp_20_mid2_fu_853_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage2_11001) & (exitcond_flatten3_reg_1407 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        tmp_220_cast_reg_1517[12 : 0] <= tmp_220_cast_fu_1044_p1[12 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond_flatten3_reg_1407_pp0_iter1_reg == 1'd0) & (1'b0 == ap_block_pp0_stage4_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
        tmp_41_reg_1993 <= grp_fu_747_p2;
        tmp_43_reg_1999 <= grp_fu_751_p2;
        tmp_60_reg_2005 <= grp_fu_763_p2;
        tmp_62_reg_2010 <= grp_fu_767_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage5_11001) & (exitcond_flatten3_reg_1407_pp0_iter1_reg == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage5))) begin
        tmp_45_reg_2015 <= grp_fu_747_p2;
        tmp_47_reg_2021 <= grp_fu_751_p2;
        tmp_64_reg_2027 <= grp_fu_763_p2;
        tmp_66_reg_2032 <= grp_fu_767_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage5_11001) & (1'b1 == ap_CS_fsm_pp0_stage5))) begin
        tmp_47_reg_2021_pp0_iter2_reg <= tmp_47_reg_2021;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond_flatten3_reg_1407_pp0_iter1_reg == 1'd0) & (1'b0 == ap_block_pp0_stage6_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage6))) begin
        tmp_49_reg_2037 <= grp_fu_747_p2;
        tmp_51_reg_2043 <= grp_fu_751_p2;
        tmp_68_reg_2049 <= grp_fu_763_p2;
        tmp_70_reg_2054 <= grp_fu_767_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage6_11001) & (1'b1 == ap_CS_fsm_pp0_stage6))) begin
        tmp_49_reg_2037_pp0_iter2_reg <= tmp_49_reg_2037;
        tmp_51_reg_2043_pp0_iter2_reg <= tmp_51_reg_2043;
        tmp_51_reg_2043_pp0_iter3_reg <= tmp_51_reg_2043_pp0_iter2_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage2_11001) & (exitcond_flatten3_reg_1407_pp0_iter1_reg == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        tmp_52_reg_1913 <= grp_fu_763_p2;
        tmp_54_reg_1918 <= grp_fu_767_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage7_11001) & (exitcond_flatten3_reg_1407_pp0_iter1_reg == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage7))) begin
        tmp_53_reg_2059 <= grp_fu_747_p2;
        tmp_55_reg_2065 <= grp_fu_751_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage7_11001) & (1'b1 == ap_CS_fsm_pp0_stage7))) begin
        tmp_53_reg_2059_pp0_iter2_reg <= tmp_53_reg_2059;
        tmp_53_reg_2059_pp0_iter3_reg <= tmp_53_reg_2059_pp0_iter2_reg;
        tmp_55_reg_2065_pp0_iter2_reg <= tmp_55_reg_2065;
        tmp_55_reg_2065_pp0_iter3_reg <= tmp_55_reg_2065_pp0_iter2_reg;
        tmp_55_reg_2065_pp0_iter4_reg <= tmp_55_reg_2065_pp0_iter3_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage3_11001) & (exitcond_flatten3_reg_1407_pp0_iter1_reg == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
        tmp_56_reg_1943 <= grp_fu_763_p2;
        tmp_58_reg_1948 <= grp_fu_767_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond_flatten3_reg_1407_pp0_iter1_reg == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        tmp_57_reg_2071 <= grp_fu_747_p2;
        tmp_59_reg_2077 <= grp_fu_751_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (exitcond_flatten3_reg_1407_pp0_iter2_reg == 1'd0) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        tmp_61_reg_2083 <= grp_fu_747_p2;
        tmp_63_reg_2089 <= grp_fu_751_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        tmp_61_reg_2083_pp0_iter3_reg <= tmp_61_reg_2083;
        tmp_61_reg_2083_pp0_iter4_reg <= tmp_61_reg_2083_pp0_iter3_reg;
        tmp_61_reg_2083_pp0_iter5_reg <= tmp_61_reg_2083_pp0_iter4_reg;
        tmp_61_reg_2083_pp0_iter6_reg <= tmp_61_reg_2083_pp0_iter5_reg;
        tmp_61_reg_2083_pp0_iter7_reg <= tmp_61_reg_2083_pp0_iter6_reg;
        tmp_63_reg_2089_pp0_iter3_reg <= tmp_63_reg_2089;
        tmp_63_reg_2089_pp0_iter4_reg <= tmp_63_reg_2089_pp0_iter3_reg;
        tmp_63_reg_2089_pp0_iter5_reg <= tmp_63_reg_2089_pp0_iter4_reg;
        tmp_63_reg_2089_pp0_iter6_reg <= tmp_63_reg_2089_pp0_iter5_reg;
        tmp_63_reg_2089_pp0_iter7_reg <= tmp_63_reg_2089_pp0_iter6_reg;
        tmp_mid2_v_reg_1450_pp0_iter10_reg <= tmp_mid2_v_reg_1450_pp0_iter9_reg;
        tmp_mid2_v_reg_1450_pp0_iter1_reg <= tmp_mid2_v_reg_1450;
        tmp_mid2_v_reg_1450_pp0_iter2_reg <= tmp_mid2_v_reg_1450_pp0_iter1_reg;
        tmp_mid2_v_reg_1450_pp0_iter3_reg <= tmp_mid2_v_reg_1450_pp0_iter2_reg;
        tmp_mid2_v_reg_1450_pp0_iter4_reg <= tmp_mid2_v_reg_1450_pp0_iter3_reg;
        tmp_mid2_v_reg_1450_pp0_iter5_reg <= tmp_mid2_v_reg_1450_pp0_iter4_reg;
        tmp_mid2_v_reg_1450_pp0_iter6_reg <= tmp_mid2_v_reg_1450_pp0_iter5_reg;
        tmp_mid2_v_reg_1450_pp0_iter7_reg <= tmp_mid2_v_reg_1450_pp0_iter6_reg;
        tmp_mid2_v_reg_1450_pp0_iter8_reg <= tmp_mid2_v_reg_1450_pp0_iter7_reg;
        tmp_mid2_v_reg_1450_pp0_iter9_reg <= tmp_mid2_v_reg_1450_pp0_iter8_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage2_11001) & (exitcond_flatten3_reg_1407_pp0_iter2_reg == 1'd0) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        tmp_65_reg_2100 <= grp_fu_747_p2;
        tmp_67_reg_2106 <= grp_fu_751_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage2_11001) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        tmp_65_reg_2100_pp0_iter3_reg <= tmp_65_reg_2100;
        tmp_65_reg_2100_pp0_iter4_reg <= tmp_65_reg_2100_pp0_iter3_reg;
        tmp_65_reg_2100_pp0_iter5_reg <= tmp_65_reg_2100_pp0_iter4_reg;
        tmp_65_reg_2100_pp0_iter6_reg <= tmp_65_reg_2100_pp0_iter5_reg;
        tmp_65_reg_2100_pp0_iter7_reg <= tmp_65_reg_2100_pp0_iter6_reg;
        tmp_65_reg_2100_pp0_iter8_reg <= tmp_65_reg_2100_pp0_iter7_reg;
        tmp_67_reg_2106_pp0_iter3_reg <= tmp_67_reg_2106;
        tmp_67_reg_2106_pp0_iter4_reg <= tmp_67_reg_2106_pp0_iter3_reg;
        tmp_67_reg_2106_pp0_iter5_reg <= tmp_67_reg_2106_pp0_iter4_reg;
        tmp_67_reg_2106_pp0_iter6_reg <= tmp_67_reg_2106_pp0_iter5_reg;
        tmp_67_reg_2106_pp0_iter7_reg <= tmp_67_reg_2106_pp0_iter6_reg;
        tmp_67_reg_2106_pp0_iter8_reg <= tmp_67_reg_2106_pp0_iter7_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage3_11001) & (exitcond_flatten3_reg_1407_pp0_iter2_reg == 1'd0) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
        tmp_69_reg_2112 <= grp_fu_747_p2;
        tmp_71_reg_2118 <= grp_fu_751_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage3_11001) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
        tmp_69_reg_2112_pp0_iter3_reg <= tmp_69_reg_2112;
        tmp_69_reg_2112_pp0_iter4_reg <= tmp_69_reg_2112_pp0_iter3_reg;
        tmp_69_reg_2112_pp0_iter5_reg <= tmp_69_reg_2112_pp0_iter4_reg;
        tmp_69_reg_2112_pp0_iter6_reg <= tmp_69_reg_2112_pp0_iter5_reg;
        tmp_69_reg_2112_pp0_iter7_reg <= tmp_69_reg_2112_pp0_iter6_reg;
        tmp_69_reg_2112_pp0_iter8_reg <= tmp_69_reg_2112_pp0_iter7_reg;
        tmp_69_reg_2112_pp0_iter9_reg <= tmp_69_reg_2112_pp0_iter8_reg;
        tmp_71_reg_2118_pp0_iter3_reg <= tmp_71_reg_2118;
        tmp_71_reg_2118_pp0_iter4_reg <= tmp_71_reg_2118_pp0_iter3_reg;
        tmp_71_reg_2118_pp0_iter5_reg <= tmp_71_reg_2118_pp0_iter4_reg;
        tmp_71_reg_2118_pp0_iter6_reg <= tmp_71_reg_2118_pp0_iter5_reg;
        tmp_71_reg_2118_pp0_iter7_reg <= tmp_71_reg_2118_pp0_iter6_reg;
        tmp_71_reg_2118_pp0_iter8_reg <= tmp_71_reg_2118_pp0_iter7_reg;
        tmp_71_reg_2118_pp0_iter9_reg <= tmp_71_reg_2118_pp0_iter8_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (or_cond3_reg_1441_pp0_iter2_reg == 1'd1) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        tmp_73_reg_2095 <= grp_fu_755_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((or_cond3_reg_1441_pp0_iter2_reg == 1'd1) & (1'b0 == ap_block_pp0_stage6_11001) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage6))) begin
        tmp_74_reg_2124 <= grp_fu_755_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage3_11001) & (or_cond3_reg_1441_pp0_iter3_reg == 1'd1) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
        tmp_75_reg_2129 <= grp_fu_755_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (or_cond3_reg_1441_pp0_iter3_reg == 1'd1) & (ap_enable_reg_pp0_iter4 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        tmp_76_reg_2134 <= grp_fu_755_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage5_11001) & (or_cond3_reg_1441_pp0_iter4_reg == 1'd1) & (ap_enable_reg_pp0_iter4 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage5))) begin
        tmp_77_reg_2139 <= grp_fu_755_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage2_11001) & (or_cond3_reg_1441_pp0_iter5_reg == 1'd1) & (ap_enable_reg_pp0_iter5 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        tmp_78_reg_2144 <= grp_fu_755_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage7_11001) & (or_cond3_reg_1441_pp0_iter5_reg == 1'd1) & (ap_enable_reg_pp0_iter5 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage7))) begin
        tmp_79_reg_2149 <= grp_fu_755_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage4_11001) & (or_cond3_reg_1441_pp0_iter6_reg == 1'd1) & (ap_enable_reg_pp0_iter6 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
        tmp_80_reg_2154 <= grp_fu_755_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (or_cond3_reg_1441_pp0_iter7_reg == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter7 == 1'b1))) begin
        tmp_81_reg_2159 <= grp_fu_759_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage3_11001) & (or_cond3_reg_1441_pp0_iter8_reg == 1'd1) & (ap_enable_reg_pp0_iter8 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
        tmp_83_reg_2164 <= grp_fu_759_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (or_cond3_reg_1441_pp0_iter8_reg == 1'd1) & (ap_enable_reg_pp0_iter9 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        tmp_84_reg_2169 <= grp_fu_759_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage5_11001) & (or_cond3_reg_1441_pp0_iter9_reg == 1'd1) & (ap_enable_reg_pp0_iter9 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage5))) begin
        tmp_85_reg_2174 <= grp_fu_759_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage2_11001) & (or_cond3_reg_1441_pp0_iter10_reg == 1'd1) & (ap_enable_reg_pp0_iter10 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        tmp_86_reg_2179 <= grp_fu_759_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage7_11001) & (or_cond3_reg_1441_pp0_iter10_reg == 1'd1) & (ap_enable_reg_pp0_iter10 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage7))) begin
        tmp_87_reg_2194 <= grp_fu_759_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond_flatten3_reg_1407_pp0_iter10_reg == 1'd0) & (1'b0 == ap_block_pp0_stage6_11001) & (1'b1 == ap_CS_fsm_pp0_stage6))) begin
        tmp_mid2_reg_2184[6 : 0] <= tmp_mid2_fu_1403_p1[6 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (exitcond_flatten3_reg_1407 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        tmp_mid2_v_reg_1450 <= tmp_mid2_v_fu_899_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage3_11001) & (exitcond_flatten3_reg_1407 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
        weights_0_load_reg_1575 <= weights_0_q0;
        weights_1_load_reg_1580 <= weights_1_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (exitcond_flatten3_reg_1407 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        weights_10_load_reg_1833 <= weights_10_q0;
        weights_11_load_reg_1838 <= weights_11_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (exitcond_flatten3_reg_1407_pp0_iter1_reg == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        weights_12_load_reg_1883 <= weights_12_q0;
        weights_13_load_reg_1888 <= weights_13_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage2_11001) & (exitcond_flatten3_reg_1407_pp0_iter1_reg == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        weights_14_load_reg_1923 <= weights_14_q0;
        weights_15_load_reg_1928 <= weights_15_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond_flatten3_reg_1407 == 1'd0) & (1'b0 == ap_block_pp0_stage4_11001) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
        weights_2_load_reg_1615 <= weights_2_q0;
        weights_3_load_reg_1620 <= weights_3_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond_flatten3_reg_1407 == 1'd0) & (1'b0 == ap_block_pp0_stage6_11001) & (1'b1 == ap_CS_fsm_pp0_stage6))) begin
        weights_6_load_reg_1733 <= weights_6_q0;
        weights_7_load_reg_1738 <= weights_7_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage7_11001) & (exitcond_flatten3_reg_1407 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage7))) begin
        weights_8_load_reg_1783 <= weights_8_q0;
        weights_9_load_reg_1788 <= weights_9_q0;
    end
end

always @ (*) begin
    if ((exitcond_flatten3_fu_777_p2 == 1'd1)) begin
        ap_condition_pp0_exit_iter0_state2 = 1'b1;
    end else begin
        ap_condition_pp0_exit_iter0_state2 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state96) | ((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1)))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter10 == 1'b0) & (ap_enable_reg_pp0_iter9 == 1'b0) & (ap_enable_reg_pp0_iter8 == 1'b0) & (ap_enable_reg_pp0_iter6 == 1'b0) & (ap_enable_reg_pp0_iter5 == 1'b0) & (ap_enable_reg_pp0_iter4 == 1'b0) & (ap_enable_reg_pp0_iter3 == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0) & (ap_enable_reg_pp0_iter11 == 1'b0) & (ap_enable_reg_pp0_iter7 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage1) & (exitcond_flatten3_reg_1407_pp0_iter1_reg == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        ap_phi_mux_co_phi_fu_514_p4 = tmp_mid2_v_reg_1450;
    end else begin
        ap_phi_mux_co_phi_fu_514_p4 = co_reg_510;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (exitcond_flatten3_reg_1407 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_phi_mux_i_phi_fu_537_p4 = tmp_20_mid2_reg_1431;
    end else begin
        ap_phi_mux_i_phi_fu_537_p4 = i_reg_533;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (exitcond_flatten3_reg_1407 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_phi_mux_indvar_flatten3_phi_fu_503_p4 = indvar_flatten_next3_reg_1411;
    end else begin
        ap_phi_mux_indvar_flatten3_phi_fu_503_p4 = indvar_flatten3_reg_499;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (exitcond_flatten3_reg_1407 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_phi_mux_indvar_flatten_phi_fu_526_p4 = indvar_flatten_next_reg_1708;
    end else begin
        ap_phi_mux_indvar_flatten_phi_fu_526_p4 = indvar_flatten_reg_522;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (exitcond_flatten3_reg_1407 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_phi_mux_j_phi_fu_740_p4 = j_10_reg_1703;
    end else begin
        ap_phi_mux_j_phi_fu_740_p4 = j_reg_736;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage4) & (exitcond_flatten3_reg_1407_pp0_iter2_reg == 1'd0) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
        ap_phi_mux_tmp_22_phi_fu_548_p4 = tmp_71_reg_2118;
    end else begin
        ap_phi_mux_tmp_22_phi_fu_548_p4 = tmp_22_reg_544;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage4) & (exitcond_flatten3_reg_1407_pp0_iter2_reg == 1'd0) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
        ap_phi_mux_tmp_23_phi_fu_560_p4 = tmp_69_reg_2112;
    end else begin
        ap_phi_mux_tmp_23_phi_fu_560_p4 = tmp_23_reg_556;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage4) & (exitcond_flatten3_reg_1407_pp0_iter2_reg == 1'd0) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
        ap_phi_mux_tmp_24_phi_fu_572_p4 = tmp_67_reg_2106;
    end else begin
        ap_phi_mux_tmp_24_phi_fu_572_p4 = tmp_24_reg_568;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage4) & (exitcond_flatten3_reg_1407_pp0_iter2_reg == 1'd0) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
        ap_phi_mux_tmp_25_phi_fu_584_p4 = tmp_65_reg_2100;
    end else begin
        ap_phi_mux_tmp_25_phi_fu_584_p4 = tmp_25_reg_580;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage4) & (exitcond_flatten3_reg_1407_pp0_iter2_reg == 1'd0) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
        ap_phi_mux_tmp_26_phi_fu_596_p4 = tmp_63_reg_2089;
    end else begin
        ap_phi_mux_tmp_26_phi_fu_596_p4 = tmp_26_reg_592;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage4) & (exitcond_flatten3_reg_1407_pp0_iter2_reg == 1'd0) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
        ap_phi_mux_tmp_27_phi_fu_608_p4 = tmp_61_reg_2083;
    end else begin
        ap_phi_mux_tmp_27_phi_fu_608_p4 = tmp_27_reg_604;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage4) & (exitcond_flatten3_reg_1407_pp0_iter2_reg == 1'd0) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
        ap_phi_mux_tmp_28_phi_fu_620_p4 = tmp_59_reg_2077;
    end else begin
        ap_phi_mux_tmp_28_phi_fu_620_p4 = tmp_28_reg_616;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage4) & (exitcond_flatten3_reg_1407_pp0_iter2_reg == 1'd0) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
        ap_phi_mux_tmp_29_phi_fu_632_p4 = tmp_57_reg_2071;
    end else begin
        ap_phi_mux_tmp_29_phi_fu_632_p4 = tmp_29_reg_628;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage3) & (exitcond_flatten3_reg_1407_pp0_iter2_reg == 1'd0) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
        ap_phi_mux_tmp_30_phi_fu_656_p4 = tmp_53_reg_2059;
    end else begin
        ap_phi_mux_tmp_30_phi_fu_656_p4 = tmp_30_reg_652;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage2) & (exitcond_flatten3_reg_1407_pp0_iter2_reg == 1'd0) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        ap_phi_mux_tmp_31_phi_fu_668_p4 = tmp_51_reg_2043;
    end else begin
        ap_phi_mux_tmp_31_phi_fu_668_p4 = tmp_31_reg_664;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage2) & (exitcond_flatten3_reg_1407_pp0_iter2_reg == 1'd0) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        ap_phi_mux_tmp_32_phi_fu_680_p4 = tmp_49_reg_2037;
    end else begin
        ap_phi_mux_tmp_32_phi_fu_680_p4 = tmp_32_reg_676;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage1) & (exitcond_flatten3_reg_1407_pp0_iter2_reg == 1'd0) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        ap_phi_mux_tmp_33_phi_fu_692_p4 = tmp_47_reg_2021;
    end else begin
        ap_phi_mux_tmp_33_phi_fu_692_p4 = tmp_33_reg_688;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage1) & (exitcond_flatten3_reg_1407_pp0_iter2_reg == 1'd0) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        ap_phi_mux_tmp_34_phi_fu_704_p4 = tmp_45_reg_2015;
    end else begin
        ap_phi_mux_tmp_34_phi_fu_704_p4 = tmp_34_reg_700;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage5) & (exitcond_flatten3_reg_1407_pp0_iter1_reg == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage5))) begin
        ap_phi_mux_tmp_35_phi_fu_716_p4 = tmp_43_reg_1999;
    end else begin
        ap_phi_mux_tmp_35_phi_fu_716_p4 = tmp_35_reg_712;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage5) & (exitcond_flatten3_reg_1407_pp0_iter1_reg == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage5))) begin
        ap_phi_mux_tmp_36_phi_fu_728_p4 = tmp_41_reg_1993;
    end else begin
        ap_phi_mux_tmp_36_phi_fu_728_p4 = tmp_36_reg_724;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage3) & (exitcond_flatten3_reg_1407_pp0_iter2_reg == 1'd0) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
        ap_phi_mux_tmp_s_phi_fu_644_p4 = tmp_55_reg_2065;
    end else begin
        ap_phi_mux_tmp_s_phi_fu_644_p4 = tmp_s_reg_640;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state96)) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage6_11001) & (ap_enable_reg_pp0_iter10 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage6))) begin
        bias_ce0 = 1'b1;
    end else begin
        bias_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp0_iter1 == 1'b1)) begin
        if (((1'b0 == ap_block_pp0_stage7) & (1'b1 == ap_CS_fsm_pp0_stage7))) begin
            grp_fu_747_p0 = p_1_reg_1958;
        end else if (((1'b0 == ap_block_pp0_stage6) & (1'b1 == ap_CS_fsm_pp0_stage6))) begin
            grp_fu_747_p0 = p_3_reg_1968;
        end else if (((1'b0 == ap_block_pp0_stage5) & (1'b1 == ap_CS_fsm_pp0_stage5))) begin
            grp_fu_747_p0 = p_5_reg_1978;
        end else if (((1'b0 == ap_block_pp0_stage4) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
            grp_fu_747_p0 = p_7_fu_1395_p3;
        end else if (((1'b0 == ap_block_pp0_stage3) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
            grp_fu_747_p0 = p_9_fu_1337_p3;
        end else if (((1'b0 == ap_block_pp0_stage2) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
            grp_fu_747_p0 = p_11_fu_1321_p3;
        end else if (((1'b0 == ap_block_pp0_stage1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            grp_fu_747_p0 = p_13_fu_1305_p3;
        end else if (((1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            grp_fu_747_p0 = p_15_reg_1658;
        end else begin
            grp_fu_747_p0 = 'bx;
        end
    end else begin
        grp_fu_747_p0 = 'bx;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp0_iter1 == 1'b1)) begin
        if (((1'b0 == ap_block_pp0_stage7) & (1'b1 == ap_CS_fsm_pp0_stage7))) begin
            grp_fu_747_p1 = tmp_68_reg_2049;
        end else if (((1'b0 == ap_block_pp0_stage6) & (1'b1 == ap_CS_fsm_pp0_stage6))) begin
            grp_fu_747_p1 = tmp_64_reg_2027;
        end else if (((1'b0 == ap_block_pp0_stage5) & (1'b1 == ap_CS_fsm_pp0_stage5))) begin
            grp_fu_747_p1 = tmp_60_reg_2005;
        end else if (((1'b0 == ap_block_pp0_stage4) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
            grp_fu_747_p1 = tmp_56_reg_1943;
        end else if (((1'b0 == ap_block_pp0_stage3) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
            grp_fu_747_p1 = tmp_52_reg_1913;
        end else if (((1'b0 == ap_block_pp0_stage2) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
            grp_fu_747_p1 = tmp_48_reg_1873;
        end else if (((1'b0 == ap_block_pp0_stage1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            grp_fu_747_p1 = tmp_44_reg_1823;
        end else if (((1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            grp_fu_747_p1 = tmp_40_reg_1773;
        end else begin
            grp_fu_747_p1 = 'bx;
        end
    end else begin
        grp_fu_747_p1 = 'bx;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp0_iter1 == 1'b1)) begin
        if (((1'b0 == ap_block_pp0_stage7) & (1'b1 == ap_CS_fsm_pp0_stage7))) begin
            grp_fu_751_p0 = p_s_reg_1953;
        end else if (((1'b0 == ap_block_pp0_stage6) & (1'b1 == ap_CS_fsm_pp0_stage6))) begin
            grp_fu_751_p0 = p_2_reg_1963;
        end else if (((1'b0 == ap_block_pp0_stage5) & (1'b1 == ap_CS_fsm_pp0_stage5))) begin
            grp_fu_751_p0 = p_4_reg_1973;
        end else if (((1'b0 == ap_block_pp0_stage4) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
            grp_fu_751_p0 = p_6_fu_1387_p3;
        end else if (((1'b0 == ap_block_pp0_stage3) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
            grp_fu_751_p0 = p_8_fu_1329_p3;
        end else if (((1'b0 == ap_block_pp0_stage2) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
            grp_fu_751_p0 = p_10_fu_1313_p3;
        end else if (((1'b0 == ap_block_pp0_stage1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            grp_fu_751_p0 = p_12_fu_1297_p3;
        end else if (((1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            grp_fu_751_p0 = p_14_reg_1653;
        end else begin
            grp_fu_751_p0 = 'bx;
        end
    end else begin
        grp_fu_751_p0 = 'bx;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp0_iter1 == 1'b1)) begin
        if (((1'b0 == ap_block_pp0_stage7) & (1'b1 == ap_CS_fsm_pp0_stage7))) begin
            grp_fu_751_p1 = tmp_70_reg_2054;
        end else if (((1'b0 == ap_block_pp0_stage6) & (1'b1 == ap_CS_fsm_pp0_stage6))) begin
            grp_fu_751_p1 = tmp_66_reg_2032;
        end else if (((1'b0 == ap_block_pp0_stage5) & (1'b1 == ap_CS_fsm_pp0_stage5))) begin
            grp_fu_751_p1 = tmp_62_reg_2010;
        end else if (((1'b0 == ap_block_pp0_stage4) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
            grp_fu_751_p1 = tmp_58_reg_1948;
        end else if (((1'b0 == ap_block_pp0_stage3) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
            grp_fu_751_p1 = tmp_54_reg_1918;
        end else if (((1'b0 == ap_block_pp0_stage2) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
            grp_fu_751_p1 = tmp_50_reg_1878;
        end else if (((1'b0 == ap_block_pp0_stage1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            grp_fu_751_p1 = tmp_46_reg_1828;
        end else if (((1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            grp_fu_751_p1 = tmp_42_reg_1778;
        end else begin
            grp_fu_751_p1 = 'bx;
        end
    end else begin
        grp_fu_751_p1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter6 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grp_fu_755_p0 = tmp_79_reg_2149;
    end else if (((1'b0 == ap_block_pp0_stage3) & (ap_enable_reg_pp0_iter5 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
        grp_fu_755_p0 = tmp_78_reg_2144;
    end else if (((1'b0 == ap_block_pp0_stage6) & (ap_enable_reg_pp0_iter4 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage6))) begin
        grp_fu_755_p0 = tmp_77_reg_2139;
    end else if (((1'b0 == ap_block_pp0_stage1) & (ap_enable_reg_pp0_iter4 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        grp_fu_755_p0 = tmp_76_reg_2134;
    end else if (((1'b0 == ap_block_pp0_stage4) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
        grp_fu_755_p0 = tmp_75_reg_2129;
    end else if (((1'b0 == ap_block_pp0_stage7) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage7))) begin
        grp_fu_755_p0 = tmp_74_reg_2124;
    end else if (((1'b0 == ap_block_pp0_stage2) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        grp_fu_755_p0 = tmp_73_reg_2095;
    end else if (((1'b0 == ap_block_pp0_stage5) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage5))) begin
        grp_fu_755_p0 = tmp_41_reg_1993;
    end else begin
        grp_fu_755_p0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter6 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grp_fu_755_p1 = tmp_57_reg_2071_pp0_iter5_reg;
    end else if (((1'b0 == ap_block_pp0_stage3) & (ap_enable_reg_pp0_iter5 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
        grp_fu_755_p1 = tmp_55_reg_2065_pp0_iter4_reg;
    end else if (((1'b0 == ap_block_pp0_stage6) & (ap_enable_reg_pp0_iter4 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage6))) begin
        grp_fu_755_p1 = tmp_53_reg_2059_pp0_iter3_reg;
    end else if (((1'b0 == ap_block_pp0_stage1) & (ap_enable_reg_pp0_iter4 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        grp_fu_755_p1 = tmp_51_reg_2043_pp0_iter3_reg;
    end else if (((1'b0 == ap_block_pp0_stage4) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
        grp_fu_755_p1 = tmp_49_reg_2037_pp0_iter2_reg;
    end else if (((1'b0 == ap_block_pp0_stage7) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage7))) begin
        grp_fu_755_p1 = tmp_47_reg_2021_pp0_iter2_reg;
    end else if (((1'b0 == ap_block_pp0_stage2) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        grp_fu_755_p1 = tmp_45_reg_2015;
    end else if (((1'b0 == ap_block_pp0_stage5) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage5))) begin
        grp_fu_755_p1 = tmp_43_reg_1999;
    end else begin
        grp_fu_755_p1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter11 == 1'b1))) begin
        grp_fu_759_p0 = tmp_87_reg_2194;
    end else if (((1'b0 == ap_block_pp0_stage3) & (ap_enable_reg_pp0_iter10 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
        grp_fu_759_p0 = tmp_86_reg_2179;
    end else if (((1'b0 == ap_block_pp0_stage6) & (ap_enable_reg_pp0_iter9 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage6))) begin
        grp_fu_759_p0 = tmp_85_reg_2174;
    end else if (((1'b0 == ap_block_pp0_stage1) & (ap_enable_reg_pp0_iter9 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        grp_fu_759_p0 = tmp_84_reg_2169;
    end else if (((1'b0 == ap_block_pp0_stage4) & (ap_enable_reg_pp0_iter8 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
        grp_fu_759_p0 = tmp_83_reg_2164;
    end else if (((1'b0 == ap_block_pp0_stage7) & (1'b1 == ap_CS_fsm_pp0_stage7) & (ap_enable_reg_pp0_iter7 == 1'b1))) begin
        grp_fu_759_p0 = reg_771;
    end else if (((1'b0 == ap_block_pp0_stage2) & (1'b1 == ap_CS_fsm_pp0_stage2) & (ap_enable_reg_pp0_iter7 == 1'b1))) begin
        grp_fu_759_p0 = tmp_81_reg_2159;
    end else if (((1'b0 == ap_block_pp0_stage5) & (ap_enable_reg_pp0_iter6 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage5))) begin
        grp_fu_759_p0 = tmp_80_reg_2154;
    end else begin
        grp_fu_759_p0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter11 == 1'b1))) begin
        grp_fu_759_p1 = bias_load_reg_2199;
    end else if (((1'b0 == ap_block_pp0_stage3) & (ap_enable_reg_pp0_iter10 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
        grp_fu_759_p1 = tmp_71_reg_2118_pp0_iter9_reg;
    end else if (((1'b0 == ap_block_pp0_stage6) & (ap_enable_reg_pp0_iter9 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage6))) begin
        grp_fu_759_p1 = tmp_69_reg_2112_pp0_iter9_reg;
    end else if (((1'b0 == ap_block_pp0_stage1) & (ap_enable_reg_pp0_iter9 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        grp_fu_759_p1 = tmp_67_reg_2106_pp0_iter8_reg;
    end else if (((1'b0 == ap_block_pp0_stage4) & (ap_enable_reg_pp0_iter8 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
        grp_fu_759_p1 = tmp_65_reg_2100_pp0_iter8_reg;
    end else if (((1'b0 == ap_block_pp0_stage7) & (1'b1 == ap_CS_fsm_pp0_stage7) & (ap_enable_reg_pp0_iter7 == 1'b1))) begin
        grp_fu_759_p1 = tmp_63_reg_2089_pp0_iter7_reg;
    end else if (((1'b0 == ap_block_pp0_stage2) & (1'b1 == ap_CS_fsm_pp0_stage2) & (ap_enable_reg_pp0_iter7 == 1'b1))) begin
        grp_fu_759_p1 = tmp_61_reg_2083_pp0_iter7_reg;
    end else if (((1'b0 == ap_block_pp0_stage5) & (ap_enable_reg_pp0_iter6 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage5))) begin
        grp_fu_759_p1 = tmp_59_reg_2077_pp0_iter6_reg;
    end else begin
        grp_fu_759_p1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage3) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
        grp_fu_763_p0 = weights_14_load_reg_1923;
    end else if (((1'b0 == ap_block_pp0_stage2) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        grp_fu_763_p0 = weights_12_load_reg_1883;
    end else if (((1'b0 == ap_block_pp0_stage1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        grp_fu_763_p0 = weights_10_load_reg_1833;
    end else if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grp_fu_763_p0 = weights_8_load_reg_1783;
    end else if (((1'b0 == ap_block_pp0_stage7) & (1'b1 == ap_CS_fsm_pp0_stage7) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        grp_fu_763_p0 = weights_6_load_reg_1733;
    end else if (((1'b0 == ap_block_pp0_stage6) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage6))) begin
        grp_fu_763_p0 = weights_4_load_reg_1683;
    end else if (((1'b0 == ap_block_pp0_stage5) & (1'b1 == ap_CS_fsm_pp0_stage5) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        grp_fu_763_p0 = weights_2_load_reg_1615;
    end else if (((1'b0 == ap_block_pp0_stage4) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
        grp_fu_763_p0 = weights_0_load_reg_1575;
    end else begin
        grp_fu_763_p0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage3) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
        grp_fu_763_p1 = input_load_14_reg_1893;
    end else if (((1'b0 == ap_block_pp0_stage2) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        grp_fu_763_p1 = input_load_12_reg_1843;
    end else if (((1'b0 == ap_block_pp0_stage1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        grp_fu_763_p1 = input_load_10_reg_1793;
    end else if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grp_fu_763_p1 = input_load_8_reg_1743;
    end else if (((1'b0 == ap_block_pp0_stage7) & (1'b1 == ap_CS_fsm_pp0_stage7) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        grp_fu_763_p1 = input_load_6_reg_1693;
    end else if (((1'b0 == ap_block_pp0_stage6) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage6))) begin
        grp_fu_763_p1 = input_load_4_reg_1625;
    end else if (((1'b0 == ap_block_pp0_stage5) & (1'b1 == ap_CS_fsm_pp0_stage5) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        grp_fu_763_p1 = input_load_2_reg_1585;
    end else if (((1'b0 == ap_block_pp0_stage4) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
        grp_fu_763_p1 = input_load_reg_1545;
    end else begin
        grp_fu_763_p1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage3) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
        grp_fu_767_p0 = weights_15_load_reg_1928;
    end else if (((1'b0 == ap_block_pp0_stage2) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        grp_fu_767_p0 = weights_13_load_reg_1888;
    end else if (((1'b0 == ap_block_pp0_stage1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        grp_fu_767_p0 = weights_11_load_reg_1838;
    end else if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grp_fu_767_p0 = weights_9_load_reg_1788;
    end else if (((1'b0 == ap_block_pp0_stage7) & (1'b1 == ap_CS_fsm_pp0_stage7) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        grp_fu_767_p0 = weights_7_load_reg_1738;
    end else if (((1'b0 == ap_block_pp0_stage6) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage6))) begin
        grp_fu_767_p0 = weights_5_load_reg_1688;
    end else if (((1'b0 == ap_block_pp0_stage5) & (1'b1 == ap_CS_fsm_pp0_stage5) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        grp_fu_767_p0 = weights_3_load_reg_1620;
    end else if (((1'b0 == ap_block_pp0_stage4) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
        grp_fu_767_p0 = weights_1_load_reg_1580;
    end else begin
        grp_fu_767_p0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage3) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
        grp_fu_767_p1 = input_load_15_reg_1898;
    end else if (((1'b0 == ap_block_pp0_stage2) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        grp_fu_767_p1 = input_load_13_reg_1848;
    end else if (((1'b0 == ap_block_pp0_stage1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        grp_fu_767_p1 = input_load_11_reg_1798;
    end else if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grp_fu_767_p1 = input_load_9_reg_1748;
    end else if (((1'b0 == ap_block_pp0_stage7) & (1'b1 == ap_CS_fsm_pp0_stage7) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        grp_fu_767_p1 = input_load_7_reg_1698;
    end else if (((1'b0 == ap_block_pp0_stage6) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage6))) begin
        grp_fu_767_p1 = input_load_5_reg_1630;
    end else if (((1'b0 == ap_block_pp0_stage5) & (1'b1 == ap_CS_fsm_pp0_stage5) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        grp_fu_767_p1 = input_load_3_reg_1590;
    end else if (((1'b0 == ap_block_pp0_stage4) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
        grp_fu_767_p1 = input_load_1_reg_1550;
    end else begin
        grp_fu_767_p1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        input_r_address0 = tmp_218_cast_fu_1282_p1;
    end else if (((1'b0 == ap_block_pp0_stage7) & (1'b1 == ap_CS_fsm_pp0_stage7) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        input_r_address0 = tmp_216_cast_fu_1252_p1;
    end else if (((1'b0 == ap_block_pp0_stage6) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage6))) begin
        input_r_address0 = tmp_214_cast_fu_1222_p1;
    end else if (((1'b0 == ap_block_pp0_stage5) & (1'b1 == ap_CS_fsm_pp0_stage5) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        input_r_address0 = tmp_212_cast_fu_1181_p1;
    end else if (((1'b0 == ap_block_pp0_stage4) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
        input_r_address0 = tmp_210_cast_fu_1095_p1;
    end else if (((1'b0 == ap_block_pp0_stage3) & (1'b1 == ap_CS_fsm_pp0_stage3) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        input_r_address0 = tmp_208_cast_fu_1065_p1;
    end else if (((1'b0 == ap_block_pp0_stage2) & (1'b1 == ap_CS_fsm_pp0_stage2) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        input_r_address0 = tmp_206_cast_fu_1023_p1;
    end else if (((1'b0 == ap_block_pp0_stage1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        input_r_address0 = tmp_204_cast_fu_969_p1;
    end else begin
        input_r_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        input_r_address1 = tmp_219_cast_fu_1292_p1;
    end else if (((1'b0 == ap_block_pp0_stage7) & (1'b1 == ap_CS_fsm_pp0_stage7) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        input_r_address1 = tmp_217_cast_fu_1262_p1;
    end else if (((1'b0 == ap_block_pp0_stage6) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage6))) begin
        input_r_address1 = tmp_215_cast_fu_1232_p1;
    end else if (((1'b0 == ap_block_pp0_stage5) & (1'b1 == ap_CS_fsm_pp0_stage5) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        input_r_address1 = tmp_213_cast_fu_1191_p1;
    end else if (((1'b0 == ap_block_pp0_stage4) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
        input_r_address1 = tmp_211_cast_fu_1105_p1;
    end else if (((1'b0 == ap_block_pp0_stage3) & (1'b1 == ap_CS_fsm_pp0_stage3) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        input_r_address1 = tmp_209_cast_fu_1075_p1;
    end else if (((1'b0 == ap_block_pp0_stage2) & (1'b1 == ap_CS_fsm_pp0_stage2) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        input_r_address1 = tmp_207_cast_fu_1033_p1;
    end else if (((1'b0 == ap_block_pp0_stage1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        input_r_address1 = tmp_205_cast_fu_980_p1;
    end else begin
        input_r_address1 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage7_11001) & (1'b1 == ap_CS_fsm_pp0_stage7) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b0 == ap_block_pp0_stage5_11001) & (1'b1 == ap_CS_fsm_pp0_stage5) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b0 == ap_block_pp0_stage3_11001) & (1'b1 == ap_CS_fsm_pp0_stage3) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b0 == ap_block_pp0_stage2_11001) & (1'b1 == ap_CS_fsm_pp0_stage2) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((1'b0 == ap_block_pp0_stage4_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4)) | ((1'b0 == ap_block_pp0_stage6_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage6)))) begin
        input_r_ce0 = 1'b1;
    end else begin
        input_r_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage7_11001) & (1'b1 == ap_CS_fsm_pp0_stage7) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b0 == ap_block_pp0_stage5_11001) & (1'b1 == ap_CS_fsm_pp0_stage5) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b0 == ap_block_pp0_stage3_11001) & (1'b1 == ap_CS_fsm_pp0_stage3) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b0 == ap_block_pp0_stage2_11001) & (1'b1 == ap_CS_fsm_pp0_stage2) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((1'b0 == ap_block_pp0_stage4_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4)) | ((1'b0 == ap_block_pp0_stage6_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage6)))) begin
        input_r_ce1 = 1'b1;
    end else begin
        input_r_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage5_11001) & (1'b1 == ap_CS_fsm_pp0_stage5) & (ap_enable_reg_pp0_iter11 == 1'b1))) begin
        output_0_0_ce0 = 1'b1;
    end else begin
        output_0_0_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage5_11001) & (or_cond3_reg_1441_pp0_iter11_reg == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage5) & (ap_enable_reg_pp0_iter11 == 1'b1))) begin
        output_0_0_we0 = 1'b1;
    end else begin
        output_0_0_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage2_11001) & (1'b1 == ap_CS_fsm_pp0_stage2) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        weights_0_ce0 = 1'b1;
    end else begin
        weights_0_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage7_11001) & (1'b1 == ap_CS_fsm_pp0_stage7) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        weights_10_ce0 = 1'b1;
    end else begin
        weights_10_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage7_11001) & (1'b1 == ap_CS_fsm_pp0_stage7) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        weights_11_ce0 = 1'b1;
    end else begin
        weights_11_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        weights_12_ce0 = 1'b1;
    end else begin
        weights_12_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        weights_13_ce0 = 1'b1;
    end else begin
        weights_13_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        weights_14_ce0 = 1'b1;
    end else begin
        weights_14_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        weights_15_ce0 = 1'b1;
    end else begin
        weights_15_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage2_11001) & (1'b1 == ap_CS_fsm_pp0_stage2) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        weights_1_ce0 = 1'b1;
    end else begin
        weights_1_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage3_11001) & (1'b1 == ap_CS_fsm_pp0_stage3) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        weights_2_ce0 = 1'b1;
    end else begin
        weights_2_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage3_11001) & (1'b1 == ap_CS_fsm_pp0_stage3) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        weights_3_ce0 = 1'b1;
    end else begin
        weights_3_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage4_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
        weights_4_ce0 = 1'b1;
    end else begin
        weights_4_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage4_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
        weights_5_ce0 = 1'b1;
    end else begin
        weights_5_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage5_11001) & (1'b1 == ap_CS_fsm_pp0_stage5) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        weights_6_ce0 = 1'b1;
    end else begin
        weights_6_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage5_11001) & (1'b1 == ap_CS_fsm_pp0_stage5) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        weights_7_ce0 = 1'b1;
    end else begin
        weights_7_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage6_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage6))) begin
        weights_8_ce0 = 1'b1;
    end else begin
        weights_8_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage6_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage6))) begin
        weights_9_ce0 = 1'b1;
    end else begin
        weights_9_ce0 = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_pp0_stage0 : begin
            if ((~((1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter1 == 1'b0) & (exitcond_flatten3_fu_777_p2 == 1'd1) & (ap_enable_reg_pp0_iter0 == 1'b1)) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage1;
            end else if (((1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter1 == 1'b0) & (exitcond_flatten3_fu_777_p2 == 1'd1) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state96;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end
        end
        ap_ST_fsm_pp0_stage1 : begin
            if ((1'b0 == ap_block_pp0_stage1_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage1;
            end
        end
        ap_ST_fsm_pp0_stage2 : begin
            if ((1'b0 == ap_block_pp0_stage2_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage3;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage2;
            end
        end
        ap_ST_fsm_pp0_stage3 : begin
            if ((1'b0 == ap_block_pp0_stage3_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage4;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage3;
            end
        end
        ap_ST_fsm_pp0_stage4 : begin
            if ((1'b0 == ap_block_pp0_stage4_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage5;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage4;
            end
        end
        ap_ST_fsm_pp0_stage5 : begin
            if ((~((1'b0 == ap_block_pp0_stage5_subdone) & (ap_enable_reg_pp0_iter10 == 1'b0) & (1'b1 == ap_CS_fsm_pp0_stage5) & (ap_enable_reg_pp0_iter11 == 1'b1)) & (1'b0 == ap_block_pp0_stage5_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage6;
            end else if (((1'b0 == ap_block_pp0_stage5_subdone) & (ap_enable_reg_pp0_iter10 == 1'b0) & (1'b1 == ap_CS_fsm_pp0_stage5) & (ap_enable_reg_pp0_iter11 == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state96;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage5;
            end
        end
        ap_ST_fsm_pp0_stage6 : begin
            if ((1'b0 == ap_block_pp0_stage6_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage7;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage6;
            end
        end
        ap_ST_fsm_pp0_stage7 : begin
            if ((1'b0 == ap_block_pp0_stage7_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage7;
            end
        end
        ap_ST_fsm_state96 : begin
            ap_NS_fsm = ap_ST_fsm_state1;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_pp0_stage1 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_pp0_stage2 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_pp0_stage3 = ap_CS_fsm[32'd4];

assign ap_CS_fsm_pp0_stage4 = ap_CS_fsm[32'd5];

assign ap_CS_fsm_pp0_stage5 = ap_CS_fsm[32'd6];

assign ap_CS_fsm_pp0_stage6 = ap_CS_fsm[32'd7];

assign ap_CS_fsm_pp0_stage7 = ap_CS_fsm[32'd8];

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state96 = ap_CS_fsm[32'd9];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage1 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage1_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage1_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage2 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage2_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage2_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage3 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage3_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage3_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage4 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage4_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage4_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage5 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage5_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage5_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage6 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage6_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage6_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage7 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage7_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage7_subdone = ~(1'b1 == 1'b1);

assign ap_block_state10_pp0_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state11_pp0_stage1_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state12_pp0_stage2_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state13_pp0_stage3_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state14_pp0_stage4_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state15_pp0_stage5_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state16_pp0_stage6_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state17_pp0_stage7_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state18_pp0_stage0_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state19_pp0_stage1_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state20_pp0_stage2_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state21_pp0_stage3_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state22_pp0_stage4_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state23_pp0_stage5_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state24_pp0_stage6_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state25_pp0_stage7_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state26_pp0_stage0_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state27_pp0_stage1_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state28_pp0_stage2_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state29_pp0_stage3_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state2_pp0_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state30_pp0_stage4_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state31_pp0_stage5_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state32_pp0_stage6_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state33_pp0_stage7_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state34_pp0_stage0_iter4 = ~(1'b1 == 1'b1);

assign ap_block_state35_pp0_stage1_iter4 = ~(1'b1 == 1'b1);

assign ap_block_state36_pp0_stage2_iter4 = ~(1'b1 == 1'b1);

assign ap_block_state37_pp0_stage3_iter4 = ~(1'b1 == 1'b1);

assign ap_block_state38_pp0_stage4_iter4 = ~(1'b1 == 1'b1);

assign ap_block_state39_pp0_stage5_iter4 = ~(1'b1 == 1'b1);

assign ap_block_state3_pp0_stage1_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state40_pp0_stage6_iter4 = ~(1'b1 == 1'b1);

assign ap_block_state41_pp0_stage7_iter4 = ~(1'b1 == 1'b1);

assign ap_block_state42_pp0_stage0_iter5 = ~(1'b1 == 1'b1);

assign ap_block_state43_pp0_stage1_iter5 = ~(1'b1 == 1'b1);

assign ap_block_state44_pp0_stage2_iter5 = ~(1'b1 == 1'b1);

assign ap_block_state45_pp0_stage3_iter5 = ~(1'b1 == 1'b1);

assign ap_block_state46_pp0_stage4_iter5 = ~(1'b1 == 1'b1);

assign ap_block_state47_pp0_stage5_iter5 = ~(1'b1 == 1'b1);

assign ap_block_state48_pp0_stage6_iter5 = ~(1'b1 == 1'b1);

assign ap_block_state49_pp0_stage7_iter5 = ~(1'b1 == 1'b1);

assign ap_block_state4_pp0_stage2_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state50_pp0_stage0_iter6 = ~(1'b1 == 1'b1);

assign ap_block_state51_pp0_stage1_iter6 = ~(1'b1 == 1'b1);

assign ap_block_state52_pp0_stage2_iter6 = ~(1'b1 == 1'b1);

assign ap_block_state53_pp0_stage3_iter6 = ~(1'b1 == 1'b1);

assign ap_block_state54_pp0_stage4_iter6 = ~(1'b1 == 1'b1);

assign ap_block_state55_pp0_stage5_iter6 = ~(1'b1 == 1'b1);

assign ap_block_state56_pp0_stage6_iter6 = ~(1'b1 == 1'b1);

assign ap_block_state57_pp0_stage7_iter6 = ~(1'b1 == 1'b1);

assign ap_block_state58_pp0_stage0_iter7 = ~(1'b1 == 1'b1);

assign ap_block_state59_pp0_stage1_iter7 = ~(1'b1 == 1'b1);

assign ap_block_state5_pp0_stage3_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state60_pp0_stage2_iter7 = ~(1'b1 == 1'b1);

assign ap_block_state61_pp0_stage3_iter7 = ~(1'b1 == 1'b1);

assign ap_block_state62_pp0_stage4_iter7 = ~(1'b1 == 1'b1);

assign ap_block_state63_pp0_stage5_iter7 = ~(1'b1 == 1'b1);

assign ap_block_state64_pp0_stage6_iter7 = ~(1'b1 == 1'b1);

assign ap_block_state65_pp0_stage7_iter7 = ~(1'b1 == 1'b1);

assign ap_block_state66_pp0_stage0_iter8 = ~(1'b1 == 1'b1);

assign ap_block_state67_pp0_stage1_iter8 = ~(1'b1 == 1'b1);

assign ap_block_state68_pp0_stage2_iter8 = ~(1'b1 == 1'b1);

assign ap_block_state69_pp0_stage3_iter8 = ~(1'b1 == 1'b1);

assign ap_block_state6_pp0_stage4_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state70_pp0_stage4_iter8 = ~(1'b1 == 1'b1);

assign ap_block_state71_pp0_stage5_iter8 = ~(1'b1 == 1'b1);

assign ap_block_state72_pp0_stage6_iter8 = ~(1'b1 == 1'b1);

assign ap_block_state73_pp0_stage7_iter8 = ~(1'b1 == 1'b1);

assign ap_block_state74_pp0_stage0_iter9 = ~(1'b1 == 1'b1);

assign ap_block_state75_pp0_stage1_iter9 = ~(1'b1 == 1'b1);

assign ap_block_state76_pp0_stage2_iter9 = ~(1'b1 == 1'b1);

assign ap_block_state77_pp0_stage3_iter9 = ~(1'b1 == 1'b1);

assign ap_block_state78_pp0_stage4_iter9 = ~(1'b1 == 1'b1);

assign ap_block_state79_pp0_stage5_iter9 = ~(1'b1 == 1'b1);

assign ap_block_state7_pp0_stage5_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state80_pp0_stage6_iter9 = ~(1'b1 == 1'b1);

assign ap_block_state81_pp0_stage7_iter9 = ~(1'b1 == 1'b1);

assign ap_block_state82_pp0_stage0_iter10 = ~(1'b1 == 1'b1);

assign ap_block_state83_pp0_stage1_iter10 = ~(1'b1 == 1'b1);

assign ap_block_state84_pp0_stage2_iter10 = ~(1'b1 == 1'b1);

assign ap_block_state85_pp0_stage3_iter10 = ~(1'b1 == 1'b1);

assign ap_block_state86_pp0_stage4_iter10 = ~(1'b1 == 1'b1);

assign ap_block_state87_pp0_stage5_iter10 = ~(1'b1 == 1'b1);

assign ap_block_state88_pp0_stage6_iter10 = ~(1'b1 == 1'b1);

assign ap_block_state89_pp0_stage7_iter10 = ~(1'b1 == 1'b1);

assign ap_block_state8_pp0_stage6_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state90_pp0_stage0_iter11 = ~(1'b1 == 1'b1);

assign ap_block_state91_pp0_stage1_iter11 = ~(1'b1 == 1'b1);

assign ap_block_state92_pp0_stage2_iter11 = ~(1'b1 == 1'b1);

assign ap_block_state93_pp0_stage3_iter11 = ~(1'b1 == 1'b1);

assign ap_block_state94_pp0_stage4_iter11 = ~(1'b1 == 1'b1);

assign ap_block_state95_pp0_stage5_iter11 = ~(1'b1 == 1'b1);

assign ap_block_state9_pp0_stage7_iter0 = ~(1'b1 == 1'b1);

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign bias_address0 = tmp_mid2_fu_1403_p1;

assign co_2_fu_893_p2 = (ap_phi_mux_co_phi_fu_514_p4 + 7'd1);

assign exitcond_flatten3_fu_777_p2 = ((ap_phi_mux_indvar_flatten3_phi_fu_503_p4 == 12'd3000) ? 1'b1 : 1'b0);

assign exitcond_flatten_fu_789_p2 = ((ap_phi_mux_indvar_flatten_phi_fu_526_p4 == 6'd25) ? 1'b1 : 1'b0);

assign exitcond_fu_821_p2 = ((ap_phi_mux_j_phi_fu_740_p4 == 3'd5) ? 1'b1 : 1'b0);

assign exitcond_mid_fu_827_p2 = (not_exitcond_flatten_fu_803_p2 & exitcond_fu_821_p2);

assign i_15_fu_833_p2 = (i_mid_fu_795_p3 + 3'd1);

assign i_mid_fu_795_p3 = ((exitcond_flatten_fu_789_p2[0:0] === 1'b1) ? 3'd0 : ap_phi_mux_i_phi_fu_537_p4);

assign indvar_flatten_next3_fu_783_p2 = (ap_phi_mux_indvar_flatten3_phi_fu_503_p4 + 12'd1);

assign indvar_flatten_next_fu_1201_p3 = ((exitcond_flatten_reg_1416[0:0] === 1'b1) ? 6'd1 : indvar_flatten_op_reg_1445);

assign indvar_flatten_op_fu_887_p2 = (ap_phi_mux_indvar_flatten_phi_fu_526_p4 + 6'd1);

assign j_10_fu_1196_p2 = (j_mid2_reg_1423 + 3'd1);

assign j_mid2_fu_845_p3 = ((tmp_129_fu_839_p2[0:0] === 1'b1) ? 3'd0 : ap_phi_mux_j_phi_fu_740_p4);

assign not_exitcond_flatten_fu_803_p2 = (exitcond_flatten_fu_789_p2 ^ 1'd1);

assign or_cond3_fu_881_p2 = (tmp_72_fu_875_p2 & tmp_21_mid2_fu_867_p3);

assign output_0_0_address0 = tmp_mid2_reg_2184;

assign output_0_0_d0 = reg_771;

assign p_10_fu_1313_p3 = ((tmp_149_reg_1635[0:0] === 1'b1) ? 32'd0 : ap_phi_mux_tmp_31_phi_fu_668_p4);

assign p_11_fu_1321_p3 = ((tmp_149_reg_1635[0:0] === 1'b1) ? 32'd0 : ap_phi_mux_tmp_32_phi_fu_680_p4);

assign p_12_fu_1297_p3 = ((tmp_149_reg_1635[0:0] === 1'b1) ? 32'd0 : ap_phi_mux_tmp_33_phi_fu_692_p4);

assign p_13_fu_1305_p3 = ((tmp_149_reg_1635[0:0] === 1'b1) ? 32'd0 : ap_phi_mux_tmp_34_phi_fu_704_p4);

assign p_14_fu_1160_p3 = ((tmp_149_fu_1155_p2[0:0] === 1'b1) ? 32'd0 : ap_phi_mux_tmp_35_phi_fu_716_p4);

assign p_15_fu_1168_p3 = ((tmp_149_fu_1155_p2[0:0] === 1'b1) ? 32'd0 : ap_phi_mux_tmp_36_phi_fu_728_p4);

assign p_1_fu_1352_p3 = ((tmp_149_reg_1635[0:0] === 1'b1) ? 32'd0 : ap_phi_mux_tmp_23_phi_fu_560_p4);

assign p_2_fu_1359_p3 = ((tmp_149_reg_1635[0:0] === 1'b1) ? 32'd0 : ap_phi_mux_tmp_24_phi_fu_572_p4);

assign p_3_fu_1366_p3 = ((tmp_149_reg_1635[0:0] === 1'b1) ? 32'd0 : ap_phi_mux_tmp_25_phi_fu_584_p4);

assign p_4_fu_1373_p3 = ((tmp_149_reg_1635[0:0] === 1'b1) ? 32'd0 : ap_phi_mux_tmp_26_phi_fu_596_p4);

assign p_5_fu_1380_p3 = ((tmp_149_reg_1635[0:0] === 1'b1) ? 32'd0 : ap_phi_mux_tmp_27_phi_fu_608_p4);

assign p_6_fu_1387_p3 = ((tmp_149_reg_1635[0:0] === 1'b1) ? 32'd0 : ap_phi_mux_tmp_28_phi_fu_620_p4);

assign p_7_fu_1395_p3 = ((tmp_149_reg_1635[0:0] === 1'b1) ? 32'd0 : ap_phi_mux_tmp_29_phi_fu_632_p4);

assign p_8_fu_1329_p3 = ((tmp_149_reg_1635[0:0] === 1'b1) ? 32'd0 : ap_phi_mux_tmp_s_phi_fu_644_p4);

assign p_9_fu_1337_p3 = ((tmp_149_reg_1635[0:0] === 1'b1) ? 32'd0 : ap_phi_mux_tmp_30_phi_fu_656_p4);

assign p_s_fu_1345_p3 = ((tmp_149_reg_1635[0:0] === 1'b1) ? 32'd0 : ap_phi_mux_tmp_22_phi_fu_548_p4);

assign p_shl2_cast_fu_1130_p1 = tmp_90_fu_1121_p4;

assign p_shl3_cast_fu_938_p1 = tmp_89_fu_931_p3;

assign p_shl4_cast_fu_918_p1 = tmp_fu_910_p3;

assign p_shl_cast_fu_1005_p1 = tmp_91_fu_998_p3;

assign tmp_127_fu_922_p2 = (tmp_mid2_cast_fu_906_p1 + p_shl4_cast_fu_918_p1);

assign tmp_128_fu_809_p2 = ((ap_phi_mux_i_phi_fu_537_p4 == 3'd4) ? 1'b1 : 1'b0);

assign tmp_129_fu_839_p2 = (exitcond_mid_fu_827_p2 | exitcond_flatten_fu_789_p2);

assign tmp_130_fu_942_p2 = (tmp_20_mid2_cast_fu_928_p1 + p_shl3_cast_fu_938_p1);

assign tmp_131_fu_948_p2 = (tmp_130_fu_942_p2 + 10'd25);

assign tmp_132_fu_985_p2 = (tmp_130_reg_1456 + 10'd50);

assign tmp_133_fu_990_p2 = (tmp_130_reg_1456 + 10'd75);

assign tmp_134_fu_1050_p2 = (tmp_130_reg_1456 + 10'd100);

assign tmp_135_fu_1055_p2 = (tmp_130_reg_1456 + 10'd125);

assign tmp_136_fu_1080_p2 = (tmp_130_reg_1456 + 10'd150);

assign tmp_137_fu_1085_p2 = (tmp_130_reg_1456 + 10'd175);

assign tmp_138_fu_1110_p3 = {{3'd5}, {tmp_20_mid2_reg_1431}};

assign tmp_139_fu_1134_p2 = (tmp_175_cast_fu_1117_p1 + p_shl2_cast_fu_1130_p1);

assign tmp_140_fu_1140_p2 = (tmp_130_reg_1456 + 10'd225);

assign tmp_141_fu_1207_p2 = (tmp_130_reg_1456 + 10'd250);

assign tmp_142_fu_1212_p2 = (tmp_130_reg_1456 + 10'd275);

assign tmp_143_fu_1237_p2 = (tmp_130_reg_1456 + 10'd300);

assign tmp_144_fu_1242_p2 = (tmp_130_reg_1456 + 10'd325);

assign tmp_145_fu_1267_p2 = (tmp_130_reg_1456 + 10'd350);

assign tmp_146_fu_1272_p2 = (tmp_130_reg_1456 + 10'd375);

assign tmp_147_fu_954_p2 = (tmp_127_fu_922_p2 + tmp_20_mid2_cast_fu_928_p1);

assign tmp_148_fu_1009_p2 = (tmp_185_cast_fu_995_p1 + p_shl_cast_fu_1005_p1);

assign tmp_149_fu_1155_p2 = (tmp_38_fu_1149_p2 | exitcond_flatten_reg_1416);

assign tmp_150_fu_963_p2 = (tmp_130_fu_942_p2 + tmp_39_cast_fu_960_p1);

assign tmp_151_fu_974_p2 = (tmp_131_fu_948_p2 + tmp_39_cast_fu_960_p1);

assign tmp_152_fu_1018_p2 = (tmp_132_fu_985_p2 + tmp_39_cast_reg_1479);

assign tmp_153_fu_1028_p2 = (tmp_133_fu_990_p2 + tmp_39_cast_reg_1479);

assign tmp_154_fu_1060_p2 = (tmp_134_fu_1050_p2 + tmp_39_cast_reg_1479);

assign tmp_155_fu_1070_p2 = (tmp_135_fu_1055_p2 + tmp_39_cast_reg_1479);

assign tmp_156_fu_1090_p2 = (tmp_136_fu_1080_p2 + tmp_39_cast_reg_1479);

assign tmp_157_fu_1100_p2 = (tmp_137_fu_1085_p2 + tmp_39_cast_reg_1479);

assign tmp_158_fu_1176_p2 = (tmp_139_fu_1134_p2 + tmp_39_cast_reg_1479);

assign tmp_159_fu_1186_p2 = (tmp_140_fu_1140_p2 + tmp_39_cast_reg_1479);

assign tmp_160_fu_1217_p2 = (tmp_141_fu_1207_p2 + tmp_39_cast_reg_1479);

assign tmp_161_fu_1227_p2 = (tmp_142_fu_1212_p2 + tmp_39_cast_reg_1479);

assign tmp_162_fu_1247_p2 = (tmp_143_fu_1237_p2 + tmp_39_cast_reg_1479);

assign tmp_163_fu_1257_p2 = (tmp_144_fu_1242_p2 + tmp_39_cast_reg_1479);

assign tmp_164_fu_1277_p2 = (tmp_145_fu_1267_p2 + tmp_39_cast_reg_1479);

assign tmp_165_fu_1287_p2 = (tmp_146_fu_1272_p2 + tmp_39_cast_reg_1479);

assign tmp_166_fu_1038_p2 = (tmp_148_fu_1009_p2 + tmp_39_cast1_fu_1015_p1);

assign tmp_175_cast_fu_1117_p1 = tmp_138_fu_1110_p3;

assign tmp_185_cast_fu_995_p1 = tmp_147_reg_1473;

assign tmp_204_cast_fu_969_p1 = tmp_150_fu_963_p2;

assign tmp_205_cast_fu_980_p1 = tmp_151_fu_974_p2;

assign tmp_206_cast_fu_1023_p1 = tmp_152_fu_1018_p2;

assign tmp_207_cast_fu_1033_p1 = tmp_153_fu_1028_p2;

assign tmp_208_cast_fu_1065_p1 = tmp_154_fu_1060_p2;

assign tmp_209_cast_fu_1075_p1 = tmp_155_fu_1070_p2;

assign tmp_20_mid2_cast_fu_928_p1 = tmp_20_mid2_reg_1431;

assign tmp_20_mid2_fu_853_p3 = ((exitcond_mid_fu_827_p2[0:0] === 1'b1) ? i_15_fu_833_p2 : i_mid_fu_795_p3);

assign tmp_210_cast_fu_1095_p1 = tmp_156_fu_1090_p2;

assign tmp_211_cast_fu_1105_p1 = tmp_157_fu_1100_p2;

assign tmp_212_cast_fu_1181_p1 = tmp_158_fu_1176_p2;

assign tmp_213_cast_fu_1191_p1 = tmp_159_fu_1186_p2;

assign tmp_214_cast_fu_1222_p1 = tmp_160_fu_1217_p2;

assign tmp_215_cast_fu_1232_p1 = tmp_161_fu_1227_p2;

assign tmp_216_cast_fu_1252_p1 = tmp_162_fu_1247_p2;

assign tmp_217_cast_fu_1262_p1 = tmp_163_fu_1257_p2;

assign tmp_218_cast_fu_1282_p1 = tmp_164_fu_1277_p2;

assign tmp_219_cast_fu_1292_p1 = tmp_165_fu_1287_p2;

assign tmp_21_mid1_fu_861_p2 = ((i_15_fu_833_p2 == 3'd4) ? 1'b1 : 1'b0);

assign tmp_21_mid2_fu_867_p3 = ((exitcond_mid_fu_827_p2[0:0] === 1'b1) ? tmp_21_mid1_fu_861_p2 : tmp_21_mid_fu_815_p2);

assign tmp_21_mid_fu_815_p2 = (tmp_128_fu_809_p2 & not_exitcond_flatten_fu_803_p2);

assign tmp_220_cast_fu_1044_p1 = tmp_166_fu_1038_p2;

assign tmp_37_fu_1145_p2 = (tmp_20_mid2_reg_1431 | j_mid2_reg_1423);

assign tmp_38_fu_1149_p2 = ((tmp_37_fu_1145_p2 == 3'd0) ? 1'b1 : 1'b0);

assign tmp_39_cast1_fu_1015_p1 = j_mid2_reg_1423;

assign tmp_39_cast_fu_960_p1 = j_mid2_reg_1423;

assign tmp_72_fu_875_p2 = ((j_mid2_fu_845_p3 == 3'd4) ? 1'b1 : 1'b0);

assign tmp_89_fu_931_p3 = {{tmp_20_mid2_reg_1431}, {2'd0}};

assign tmp_90_fu_1121_p4 = {{{{3'd5}, {tmp_20_mid2_reg_1431}}}, {2'd0}};

assign tmp_91_fu_998_p3 = {{tmp_147_reg_1473}, {2'd0}};

assign tmp_fu_910_p3 = {{tmp_mid2_v_fu_899_p3}, {2'd0}};

assign tmp_mid2_cast_fu_906_p1 = tmp_mid2_v_fu_899_p3;

assign tmp_mid2_fu_1403_p1 = tmp_mid2_v_reg_1450_pp0_iter10_reg;

assign tmp_mid2_v_fu_899_p3 = ((exitcond_flatten_reg_1416[0:0] === 1'b1) ? co_2_fu_893_p2 : ap_phi_mux_co_phi_fu_514_p4);

assign weights_0_address0 = tmp_220_cast_fu_1044_p1;

assign weights_10_address0 = tmp_220_cast_reg_1517;

assign weights_11_address0 = tmp_220_cast_reg_1517;

assign weights_12_address0 = tmp_220_cast_reg_1517;

assign weights_13_address0 = tmp_220_cast_reg_1517;

assign weights_14_address0 = tmp_220_cast_reg_1517;

assign weights_15_address0 = tmp_220_cast_reg_1517;

assign weights_1_address0 = tmp_220_cast_fu_1044_p1;

assign weights_2_address0 = tmp_220_cast_reg_1517;

assign weights_3_address0 = tmp_220_cast_reg_1517;

assign weights_4_address0 = tmp_220_cast_reg_1517;

assign weights_5_address0 = tmp_220_cast_reg_1517;

assign weights_6_address0 = tmp_220_cast_reg_1517;

assign weights_7_address0 = tmp_220_cast_reg_1517;

assign weights_8_address0 = tmp_220_cast_reg_1517;

assign weights_9_address0 = tmp_220_cast_reg_1517;

always @ (posedge ap_clk) begin
    tmp_39_cast_reg_1479[9:3] <= 7'b0000000;
    tmp_220_cast_reg_1517[63:13] <= 51'b000000000000000000000000000000000000000000000000000;
    tmp_mid2_reg_2184[63:7] <= 57'b000000000000000000000000000000000000000000000000000000000;
end

endmodule //convolution_5
