-- (c) Copyright 1995-2018 Xilinx, Inc. All rights reserved.
-- 
-- This file contains confidential and proprietary information
-- of Xilinx, Inc. and is protected under U.S. and
-- international copyright and other intellectual property
-- laws.
-- 
-- DISCLAIMER
-- This disclaimer is not a license and does not grant any
-- rights to the materials distributed herewith. Except as
-- otherwise provided in a valid license issued to you by
-- Xilinx, and to the maximum extent permitted by applicable
-- law: (1) THESE MATERIALS ARE MADE AVAILABLE "AS IS" AND
-- WITH ALL FAULTS, AND XILINX HEREBY DISCLAIMS ALL WARRANTIES
-- AND CONDITIONS, EXPRESS, IMPLIED, OR STATUTORY, INCLUDING
-- BUT NOT LIMITED TO WARRANTIES OF MERCHANTABILITY, NON-
-- INFRINGEMENT, OR FITNESS FOR ANY PARTICULAR PURPOSE; and
-- (2) Xilinx shall not be liable (whether in contract or tort,
-- including negligence, or under any other theory of
-- liability) for any loss or damage of any kind or nature
-- related to, arising under or in connection with these
-- materials, including for any direct, or any indirect,
-- special, incidental, or consequential loss or damage
-- (including loss of data, profits, goodwill, or any type of
-- loss or damage suffered as a result of any action brought
-- by a third party) even if such damage or loss was
-- reasonably foreseeable or Xilinx had been advised of the
-- possibility of the same.
-- 
-- CRITICAL APPLICATIONS
-- Xilinx products are not designed or intended to be fail-
-- safe, or for use in any application requiring fail-safe
-- performance, such as life-support or safety devices or
-- systems, Class III medical devices, nuclear facilities,
-- applications related to the deployment of airbags, or any
-- other applications that could lead to death, personal
-- injury, or severe property or environmental damage
-- (individually and collectively, "Critical
-- Applications"). Customer assumes the sole risk and
-- liability of any use of Xilinx products in Critical
-- Applications, subject only to applicable laws and
-- regulations governing limitations on product liability.
-- 
-- THIS COPYRIGHT NOTICE AND DISCLAIMER MUST BE RETAINED AS
-- PART OF THIS FILE AT ALL TIMES.
-- 
-- DO NOT MODIFY THIS FILE.

-- IP VLNV: xilinx.com:hls:conv1:1.0
-- IP Revision: 1810252334

LIBRARY ieee;
USE ieee.std_logic_1164.ALL;
USE ieee.numeric_std.ALL;

ENTITY design_1_conv1_0_1 IS
  PORT (
    s_axi_CTL_AWADDR : IN STD_LOGIC_VECTOR(6 DOWNTO 0);
    s_axi_CTL_AWVALID : IN STD_LOGIC;
    s_axi_CTL_AWREADY : OUT STD_LOGIC;
    s_axi_CTL_WDATA : IN STD_LOGIC_VECTOR(31 DOWNTO 0);
    s_axi_CTL_WSTRB : IN STD_LOGIC_VECTOR(3 DOWNTO 0);
    s_axi_CTL_WVALID : IN STD_LOGIC;
    s_axi_CTL_WREADY : OUT STD_LOGIC;
    s_axi_CTL_BRESP : OUT STD_LOGIC_VECTOR(1 DOWNTO 0);
    s_axi_CTL_BVALID : OUT STD_LOGIC;
    s_axi_CTL_BREADY : IN STD_LOGIC;
    s_axi_CTL_ARADDR : IN STD_LOGIC_VECTOR(6 DOWNTO 0);
    s_axi_CTL_ARVALID : IN STD_LOGIC;
    s_axi_CTL_ARREADY : OUT STD_LOGIC;
    s_axi_CTL_RDATA : OUT STD_LOGIC_VECTOR(31 DOWNTO 0);
    s_axi_CTL_RRESP : OUT STD_LOGIC_VECTOR(1 DOWNTO 0);
    s_axi_CTL_RVALID : OUT STD_LOGIC;
    s_axi_CTL_RREADY : IN STD_LOGIC;
    ap_clk : IN STD_LOGIC;
    ap_rst_n : IN STD_LOGIC;
    interrupt : OUT STD_LOGIC;
    m_axi_DATA_INPUT_AWADDR : OUT STD_LOGIC_VECTOR(31 DOWNTO 0);
    m_axi_DATA_INPUT_AWLEN : OUT STD_LOGIC_VECTOR(7 DOWNTO 0);
    m_axi_DATA_INPUT_AWSIZE : OUT STD_LOGIC_VECTOR(2 DOWNTO 0);
    m_axi_DATA_INPUT_AWBURST : OUT STD_LOGIC_VECTOR(1 DOWNTO 0);
    m_axi_DATA_INPUT_AWLOCK : OUT STD_LOGIC_VECTOR(1 DOWNTO 0);
    m_axi_DATA_INPUT_AWREGION : OUT STD_LOGIC_VECTOR(3 DOWNTO 0);
    m_axi_DATA_INPUT_AWCACHE : OUT STD_LOGIC_VECTOR(3 DOWNTO 0);
    m_axi_DATA_INPUT_AWPROT : OUT STD_LOGIC_VECTOR(2 DOWNTO 0);
    m_axi_DATA_INPUT_AWQOS : OUT STD_LOGIC_VECTOR(3 DOWNTO 0);
    m_axi_DATA_INPUT_AWVALID : OUT STD_LOGIC;
    m_axi_DATA_INPUT_AWREADY : IN STD_LOGIC;
    m_axi_DATA_INPUT_WDATA : OUT STD_LOGIC_VECTOR(31 DOWNTO 0);
    m_axi_DATA_INPUT_WSTRB : OUT STD_LOGIC_VECTOR(3 DOWNTO 0);
    m_axi_DATA_INPUT_WLAST : OUT STD_LOGIC;
    m_axi_DATA_INPUT_WVALID : OUT STD_LOGIC;
    m_axi_DATA_INPUT_WREADY : IN STD_LOGIC;
    m_axi_DATA_INPUT_BRESP : IN STD_LOGIC_VECTOR(1 DOWNTO 0);
    m_axi_DATA_INPUT_BVALID : IN STD_LOGIC;
    m_axi_DATA_INPUT_BREADY : OUT STD_LOGIC;
    m_axi_DATA_INPUT_ARADDR : OUT STD_LOGIC_VECTOR(31 DOWNTO 0);
    m_axi_DATA_INPUT_ARLEN : OUT STD_LOGIC_VECTOR(7 DOWNTO 0);
    m_axi_DATA_INPUT_ARSIZE : OUT STD_LOGIC_VECTOR(2 DOWNTO 0);
    m_axi_DATA_INPUT_ARBURST : OUT STD_LOGIC_VECTOR(1 DOWNTO 0);
    m_axi_DATA_INPUT_ARLOCK : OUT STD_LOGIC_VECTOR(1 DOWNTO 0);
    m_axi_DATA_INPUT_ARREGION : OUT STD_LOGIC_VECTOR(3 DOWNTO 0);
    m_axi_DATA_INPUT_ARCACHE : OUT STD_LOGIC_VECTOR(3 DOWNTO 0);
    m_axi_DATA_INPUT_ARPROT : OUT STD_LOGIC_VECTOR(2 DOWNTO 0);
    m_axi_DATA_INPUT_ARQOS : OUT STD_LOGIC_VECTOR(3 DOWNTO 0);
    m_axi_DATA_INPUT_ARVALID : OUT STD_LOGIC;
    m_axi_DATA_INPUT_ARREADY : IN STD_LOGIC;
    m_axi_DATA_INPUT_RDATA : IN STD_LOGIC_VECTOR(31 DOWNTO 0);
    m_axi_DATA_INPUT_RRESP : IN STD_LOGIC_VECTOR(1 DOWNTO 0);
    m_axi_DATA_INPUT_RLAST : IN STD_LOGIC;
    m_axi_DATA_INPUT_RVALID : IN STD_LOGIC;
    m_axi_DATA_INPUT_RREADY : OUT STD_LOGIC;
    m_axi_DATA_WEIGHT_AWADDR : OUT STD_LOGIC_VECTOR(31 DOWNTO 0);
    m_axi_DATA_WEIGHT_AWLEN : OUT STD_LOGIC_VECTOR(7 DOWNTO 0);
    m_axi_DATA_WEIGHT_AWSIZE : OUT STD_LOGIC_VECTOR(2 DOWNTO 0);
    m_axi_DATA_WEIGHT_AWBURST : OUT STD_LOGIC_VECTOR(1 DOWNTO 0);
    m_axi_DATA_WEIGHT_AWLOCK : OUT STD_LOGIC_VECTOR(1 DOWNTO 0);
    m_axi_DATA_WEIGHT_AWREGION : OUT STD_LOGIC_VECTOR(3 DOWNTO 0);
    m_axi_DATA_WEIGHT_AWCACHE : OUT STD_LOGIC_VECTOR(3 DOWNTO 0);
    m_axi_DATA_WEIGHT_AWPROT : OUT STD_LOGIC_VECTOR(2 DOWNTO 0);
    m_axi_DATA_WEIGHT_AWQOS : OUT STD_LOGIC_VECTOR(3 DOWNTO 0);
    m_axi_DATA_WEIGHT_AWVALID : OUT STD_LOGIC;
    m_axi_DATA_WEIGHT_AWREADY : IN STD_LOGIC;
    m_axi_DATA_WEIGHT_WDATA : OUT STD_LOGIC_VECTOR(31 DOWNTO 0);
    m_axi_DATA_WEIGHT_WSTRB : OUT STD_LOGIC_VECTOR(3 DOWNTO 0);
    m_axi_DATA_WEIGHT_WLAST : OUT STD_LOGIC;
    m_axi_DATA_WEIGHT_WVALID : OUT STD_LOGIC;
    m_axi_DATA_WEIGHT_WREADY : IN STD_LOGIC;
    m_axi_DATA_WEIGHT_BRESP : IN STD_LOGIC_VECTOR(1 DOWNTO 0);
    m_axi_DATA_WEIGHT_BVALID : IN STD_LOGIC;
    m_axi_DATA_WEIGHT_BREADY : OUT STD_LOGIC;
    m_axi_DATA_WEIGHT_ARADDR : OUT STD_LOGIC_VECTOR(31 DOWNTO 0);
    m_axi_DATA_WEIGHT_ARLEN : OUT STD_LOGIC_VECTOR(7 DOWNTO 0);
    m_axi_DATA_WEIGHT_ARSIZE : OUT STD_LOGIC_VECTOR(2 DOWNTO 0);
    m_axi_DATA_WEIGHT_ARBURST : OUT STD_LOGIC_VECTOR(1 DOWNTO 0);
    m_axi_DATA_WEIGHT_ARLOCK : OUT STD_LOGIC_VECTOR(1 DOWNTO 0);
    m_axi_DATA_WEIGHT_ARREGION : OUT STD_LOGIC_VECTOR(3 DOWNTO 0);
    m_axi_DATA_WEIGHT_ARCACHE : OUT STD_LOGIC_VECTOR(3 DOWNTO 0);
    m_axi_DATA_WEIGHT_ARPROT : OUT STD_LOGIC_VECTOR(2 DOWNTO 0);
    m_axi_DATA_WEIGHT_ARQOS : OUT STD_LOGIC_VECTOR(3 DOWNTO 0);
    m_axi_DATA_WEIGHT_ARVALID : OUT STD_LOGIC;
    m_axi_DATA_WEIGHT_ARREADY : IN STD_LOGIC;
    m_axi_DATA_WEIGHT_RDATA : IN STD_LOGIC_VECTOR(31 DOWNTO 0);
    m_axi_DATA_WEIGHT_RRESP : IN STD_LOGIC_VECTOR(1 DOWNTO 0);
    m_axi_DATA_WEIGHT_RLAST : IN STD_LOGIC;
    m_axi_DATA_WEIGHT_RVALID : IN STD_LOGIC;
    m_axi_DATA_WEIGHT_RREADY : OUT STD_LOGIC;
    m_axi_DATA_BIAS_AWADDR : OUT STD_LOGIC_VECTOR(31 DOWNTO 0);
    m_axi_DATA_BIAS_AWLEN : OUT STD_LOGIC_VECTOR(7 DOWNTO 0);
    m_axi_DATA_BIAS_AWSIZE : OUT STD_LOGIC_VECTOR(2 DOWNTO 0);
    m_axi_DATA_BIAS_AWBURST : OUT STD_LOGIC_VECTOR(1 DOWNTO 0);
    m_axi_DATA_BIAS_AWLOCK : OUT STD_LOGIC_VECTOR(1 DOWNTO 0);
    m_axi_DATA_BIAS_AWREGION : OUT STD_LOGIC_VECTOR(3 DOWNTO 0);
    m_axi_DATA_BIAS_AWCACHE : OUT STD_LOGIC_VECTOR(3 DOWNTO 0);
    m_axi_DATA_BIAS_AWPROT : OUT STD_LOGIC_VECTOR(2 DOWNTO 0);
    m_axi_DATA_BIAS_AWQOS : OUT STD_LOGIC_VECTOR(3 DOWNTO 0);
    m_axi_DATA_BIAS_AWVALID : OUT STD_LOGIC;
    m_axi_DATA_BIAS_AWREADY : IN STD_LOGIC;
    m_axi_DATA_BIAS_WDATA : OUT STD_LOGIC_VECTOR(31 DOWNTO 0);
    m_axi_DATA_BIAS_WSTRB : OUT STD_LOGIC_VECTOR(3 DOWNTO 0);
    m_axi_DATA_BIAS_WLAST : OUT STD_LOGIC;
    m_axi_DATA_BIAS_WVALID : OUT STD_LOGIC;
    m_axi_DATA_BIAS_WREADY : IN STD_LOGIC;
    m_axi_DATA_BIAS_BRESP : IN STD_LOGIC_VECTOR(1 DOWNTO 0);
    m_axi_DATA_BIAS_BVALID : IN STD_LOGIC;
    m_axi_DATA_BIAS_BREADY : OUT STD_LOGIC;
    m_axi_DATA_BIAS_ARADDR : OUT STD_LOGIC_VECTOR(31 DOWNTO 0);
    m_axi_DATA_BIAS_ARLEN : OUT STD_LOGIC_VECTOR(7 DOWNTO 0);
    m_axi_DATA_BIAS_ARSIZE : OUT STD_LOGIC_VECTOR(2 DOWNTO 0);
    m_axi_DATA_BIAS_ARBURST : OUT STD_LOGIC_VECTOR(1 DOWNTO 0);
    m_axi_DATA_BIAS_ARLOCK : OUT STD_LOGIC_VECTOR(1 DOWNTO 0);
    m_axi_DATA_BIAS_ARREGION : OUT STD_LOGIC_VECTOR(3 DOWNTO 0);
    m_axi_DATA_BIAS_ARCACHE : OUT STD_LOGIC_VECTOR(3 DOWNTO 0);
    m_axi_DATA_BIAS_ARPROT : OUT STD_LOGIC_VECTOR(2 DOWNTO 0);
    m_axi_DATA_BIAS_ARQOS : OUT STD_LOGIC_VECTOR(3 DOWNTO 0);
    m_axi_DATA_BIAS_ARVALID : OUT STD_LOGIC;
    m_axi_DATA_BIAS_ARREADY : IN STD_LOGIC;
    m_axi_DATA_BIAS_RDATA : IN STD_LOGIC_VECTOR(31 DOWNTO 0);
    m_axi_DATA_BIAS_RRESP : IN STD_LOGIC_VECTOR(1 DOWNTO 0);
    m_axi_DATA_BIAS_RLAST : IN STD_LOGIC;
    m_axi_DATA_BIAS_RVALID : IN STD_LOGIC;
    m_axi_DATA_BIAS_RREADY : OUT STD_LOGIC;
    m_axi_DATA_OUTPUT_AWADDR : OUT STD_LOGIC_VECTOR(31 DOWNTO 0);
    m_axi_DATA_OUTPUT_AWLEN : OUT STD_LOGIC_VECTOR(7 DOWNTO 0);
    m_axi_DATA_OUTPUT_AWSIZE : OUT STD_LOGIC_VECTOR(2 DOWNTO 0);
    m_axi_DATA_OUTPUT_AWBURST : OUT STD_LOGIC_VECTOR(1 DOWNTO 0);
    m_axi_DATA_OUTPUT_AWLOCK : OUT STD_LOGIC_VECTOR(1 DOWNTO 0);
    m_axi_DATA_OUTPUT_AWREGION : OUT STD_LOGIC_VECTOR(3 DOWNTO 0);
    m_axi_DATA_OUTPUT_AWCACHE : OUT STD_LOGIC_VECTOR(3 DOWNTO 0);
    m_axi_DATA_OUTPUT_AWPROT : OUT STD_LOGIC_VECTOR(2 DOWNTO 0);
    m_axi_DATA_OUTPUT_AWQOS : OUT STD_LOGIC_VECTOR(3 DOWNTO 0);
    m_axi_DATA_OUTPUT_AWVALID : OUT STD_LOGIC;
    m_axi_DATA_OUTPUT_AWREADY : IN STD_LOGIC;
    m_axi_DATA_OUTPUT_WDATA : OUT STD_LOGIC_VECTOR(31 DOWNTO 0);
    m_axi_DATA_OUTPUT_WSTRB : OUT STD_LOGIC_VECTOR(3 DOWNTO 0);
    m_axi_DATA_OUTPUT_WLAST : OUT STD_LOGIC;
    m_axi_DATA_OUTPUT_WVALID : OUT STD_LOGIC;
    m_axi_DATA_OUTPUT_WREADY : IN STD_LOGIC;
    m_axi_DATA_OUTPUT_BRESP : IN STD_LOGIC_VECTOR(1 DOWNTO 0);
    m_axi_DATA_OUTPUT_BVALID : IN STD_LOGIC;
    m_axi_DATA_OUTPUT_BREADY : OUT STD_LOGIC;
    m_axi_DATA_OUTPUT_ARADDR : OUT STD_LOGIC_VECTOR(31 DOWNTO 0);
    m_axi_DATA_OUTPUT_ARLEN : OUT STD_LOGIC_VECTOR(7 DOWNTO 0);
    m_axi_DATA_OUTPUT_ARSIZE : OUT STD_LOGIC_VECTOR(2 DOWNTO 0);
    m_axi_DATA_OUTPUT_ARBURST : OUT STD_LOGIC_VECTOR(1 DOWNTO 0);
    m_axi_DATA_OUTPUT_ARLOCK : OUT STD_LOGIC_VECTOR(1 DOWNTO 0);
    m_axi_DATA_OUTPUT_ARREGION : OUT STD_LOGIC_VECTOR(3 DOWNTO 0);
    m_axi_DATA_OUTPUT_ARCACHE : OUT STD_LOGIC_VECTOR(3 DOWNTO 0);
    m_axi_DATA_OUTPUT_ARPROT : OUT STD_LOGIC_VECTOR(2 DOWNTO 0);
    m_axi_DATA_OUTPUT_ARQOS : OUT STD_LOGIC_VECTOR(3 DOWNTO 0);
    m_axi_DATA_OUTPUT_ARVALID : OUT STD_LOGIC;
    m_axi_DATA_OUTPUT_ARREADY : IN STD_LOGIC;
    m_axi_DATA_OUTPUT_RDATA : IN STD_LOGIC_VECTOR(31 DOWNTO 0);
    m_axi_DATA_OUTPUT_RRESP : IN STD_LOGIC_VECTOR(1 DOWNTO 0);
    m_axi_DATA_OUTPUT_RLAST : IN STD_LOGIC;
    m_axi_DATA_OUTPUT_RVALID : IN STD_LOGIC;
    m_axi_DATA_OUTPUT_RREADY : OUT STD_LOGIC
  );
END design_1_conv1_0_1;

ARCHITECTURE design_1_conv1_0_1_arch OF design_1_conv1_0_1 IS
  ATTRIBUTE DowngradeIPIdentifiedWarnings : STRING;
  ATTRIBUTE DowngradeIPIdentifiedWarnings OF design_1_conv1_0_1_arch: ARCHITECTURE IS "yes";
  COMPONENT conv1 IS
    GENERIC (
      C_S_AXI_CTL_ADDR_WIDTH : INTEGER;
      C_S_AXI_CTL_DATA_WIDTH : INTEGER;
      C_M_AXI_DATA_INPUT_ID_WIDTH : INTEGER;
      C_M_AXI_DATA_INPUT_ADDR_WIDTH : INTEGER;
      C_M_AXI_DATA_INPUT_DATA_WIDTH : INTEGER;
      C_M_AXI_DATA_INPUT_AWUSER_WIDTH : INTEGER;
      C_M_AXI_DATA_INPUT_ARUSER_WIDTH : INTEGER;
      C_M_AXI_DATA_INPUT_WUSER_WIDTH : INTEGER;
      C_M_AXI_DATA_INPUT_RUSER_WIDTH : INTEGER;
      C_M_AXI_DATA_INPUT_BUSER_WIDTH : INTEGER;
      C_M_AXI_DATA_INPUT_USER_VALUE : INTEGER;
      C_M_AXI_DATA_INPUT_PROT_VALUE : INTEGER;
      C_M_AXI_DATA_INPUT_CACHE_VALUE : INTEGER;
      C_M_AXI_DATA_WEIGHT_ID_WIDTH : INTEGER;
      C_M_AXI_DATA_WEIGHT_ADDR_WIDTH : INTEGER;
      C_M_AXI_DATA_WEIGHT_DATA_WIDTH : INTEGER;
      C_M_AXI_DATA_WEIGHT_AWUSER_WIDTH : INTEGER;
      C_M_AXI_DATA_WEIGHT_ARUSER_WIDTH : INTEGER;
      C_M_AXI_DATA_WEIGHT_WUSER_WIDTH : INTEGER;
      C_M_AXI_DATA_WEIGHT_RUSER_WIDTH : INTEGER;
      C_M_AXI_DATA_WEIGHT_BUSER_WIDTH : INTEGER;
      C_M_AXI_DATA_WEIGHT_USER_VALUE : INTEGER;
      C_M_AXI_DATA_WEIGHT_PROT_VALUE : INTEGER;
      C_M_AXI_DATA_WEIGHT_CACHE_VALUE : INTEGER;
      C_M_AXI_DATA_BIAS_ID_WIDTH : INTEGER;
      C_M_AXI_DATA_BIAS_ADDR_WIDTH : INTEGER;
      C_M_AXI_DATA_BIAS_DATA_WIDTH : INTEGER;
      C_M_AXI_DATA_BIAS_AWUSER_WIDTH : INTEGER;
      C_M_AXI_DATA_BIAS_ARUSER_WIDTH : INTEGER;
      C_M_AXI_DATA_BIAS_WUSER_WIDTH : INTEGER;
      C_M_AXI_DATA_BIAS_RUSER_WIDTH : INTEGER;
      C_M_AXI_DATA_BIAS_BUSER_WIDTH : INTEGER;
      C_M_AXI_DATA_BIAS_USER_VALUE : INTEGER;
      C_M_AXI_DATA_BIAS_PROT_VALUE : INTEGER;
      C_M_AXI_DATA_BIAS_CACHE_VALUE : INTEGER;
      C_M_AXI_DATA_OUTPUT_ID_WIDTH : INTEGER;
      C_M_AXI_DATA_OUTPUT_ADDR_WIDTH : INTEGER;
      C_M_AXI_DATA_OUTPUT_DATA_WIDTH : INTEGER;
      C_M_AXI_DATA_OUTPUT_AWUSER_WIDTH : INTEGER;
      C_M_AXI_DATA_OUTPUT_ARUSER_WIDTH : INTEGER;
      C_M_AXI_DATA_OUTPUT_WUSER_WIDTH : INTEGER;
      C_M_AXI_DATA_OUTPUT_RUSER_WIDTH : INTEGER;
      C_M_AXI_DATA_OUTPUT_BUSER_WIDTH : INTEGER;
      C_M_AXI_DATA_OUTPUT_USER_VALUE : INTEGER;
      C_M_AXI_DATA_OUTPUT_PROT_VALUE : INTEGER;
      C_M_AXI_DATA_OUTPUT_CACHE_VALUE : INTEGER
    );
    PORT (
      s_axi_CTL_AWADDR : IN STD_LOGIC_VECTOR(6 DOWNTO 0);
      s_axi_CTL_AWVALID : IN STD_LOGIC;
      s_axi_CTL_AWREADY : OUT STD_LOGIC;
      s_axi_CTL_WDATA : IN STD_LOGIC_VECTOR(31 DOWNTO 0);
      s_axi_CTL_WSTRB : IN STD_LOGIC_VECTOR(3 DOWNTO 0);
      s_axi_CTL_WVALID : IN STD_LOGIC;
      s_axi_CTL_WREADY : OUT STD_LOGIC;
      s_axi_CTL_BRESP : OUT STD_LOGIC_VECTOR(1 DOWNTO 0);
      s_axi_CTL_BVALID : OUT STD_LOGIC;
      s_axi_CTL_BREADY : IN STD_LOGIC;
      s_axi_CTL_ARADDR : IN STD_LOGIC_VECTOR(6 DOWNTO 0);
      s_axi_CTL_ARVALID : IN STD_LOGIC;
      s_axi_CTL_ARREADY : OUT STD_LOGIC;
      s_axi_CTL_RDATA : OUT STD_LOGIC_VECTOR(31 DOWNTO 0);
      s_axi_CTL_RRESP : OUT STD_LOGIC_VECTOR(1 DOWNTO 0);
      s_axi_CTL_RVALID : OUT STD_LOGIC;
      s_axi_CTL_RREADY : IN STD_LOGIC;
      ap_clk : IN STD_LOGIC;
      ap_rst_n : IN STD_LOGIC;
      interrupt : OUT STD_LOGIC;
      m_axi_DATA_INPUT_AWID : OUT STD_LOGIC_VECTOR(0 DOWNTO 0);
      m_axi_DATA_INPUT_AWADDR : OUT STD_LOGIC_VECTOR(31 DOWNTO 0);
      m_axi_DATA_INPUT_AWLEN : OUT STD_LOGIC_VECTOR(7 DOWNTO 0);
      m_axi_DATA_INPUT_AWSIZE : OUT STD_LOGIC_VECTOR(2 DOWNTO 0);
      m_axi_DATA_INPUT_AWBURST : OUT STD_LOGIC_VECTOR(1 DOWNTO 0);
      m_axi_DATA_INPUT_AWLOCK : OUT STD_LOGIC_VECTOR(1 DOWNTO 0);
      m_axi_DATA_INPUT_AWREGION : OUT STD_LOGIC_VECTOR(3 DOWNTO 0);
      m_axi_DATA_INPUT_AWCACHE : OUT STD_LOGIC_VECTOR(3 DOWNTO 0);
      m_axi_DATA_INPUT_AWPROT : OUT STD_LOGIC_VECTOR(2 DOWNTO 0);
      m_axi_DATA_INPUT_AWQOS : OUT STD_LOGIC_VECTOR(3 DOWNTO 0);
      m_axi_DATA_INPUT_AWUSER : OUT STD_LOGIC_VECTOR(0 DOWNTO 0);
      m_axi_DATA_INPUT_AWVALID : OUT STD_LOGIC;
      m_axi_DATA_INPUT_AWREADY : IN STD_LOGIC;
      m_axi_DATA_INPUT_WID : OUT STD_LOGIC_VECTOR(0 DOWNTO 0);
      m_axi_DATA_INPUT_WDATA : OUT STD_LOGIC_VECTOR(31 DOWNTO 0);
      m_axi_DATA_INPUT_WSTRB : OUT STD_LOGIC_VECTOR(3 DOWNTO 0);
      m_axi_DATA_INPUT_WLAST : OUT STD_LOGIC;
      m_axi_DATA_INPUT_WUSER : OUT STD_LOGIC_VECTOR(0 DOWNTO 0);
      m_axi_DATA_INPUT_WVALID : OUT STD_LOGIC;
      m_axi_DATA_INPUT_WREADY : IN STD_LOGIC;
      m_axi_DATA_INPUT_BID : IN STD_LOGIC_VECTOR(0 DOWNTO 0);
      m_axi_DATA_INPUT_BRESP : IN STD_LOGIC_VECTOR(1 DOWNTO 0);
      m_axi_DATA_INPUT_BUSER : IN STD_LOGIC_VECTOR(0 DOWNTO 0);
      m_axi_DATA_INPUT_BVALID : IN STD_LOGIC;
      m_axi_DATA_INPUT_BREADY : OUT STD_LOGIC;
      m_axi_DATA_INPUT_ARID : OUT STD_LOGIC_VECTOR(0 DOWNTO 0);
      m_axi_DATA_INPUT_ARADDR : OUT STD_LOGIC_VECTOR(31 DOWNTO 0);
      m_axi_DATA_INPUT_ARLEN : OUT STD_LOGIC_VECTOR(7 DOWNTO 0);
      m_axi_DATA_INPUT_ARSIZE : OUT STD_LOGIC_VECTOR(2 DOWNTO 0);
      m_axi_DATA_INPUT_ARBURST : OUT STD_LOGIC_VECTOR(1 DOWNTO 0);
      m_axi_DATA_INPUT_ARLOCK : OUT STD_LOGIC_VECTOR(1 DOWNTO 0);
      m_axi_DATA_INPUT_ARREGION : OUT STD_LOGIC_VECTOR(3 DOWNTO 0);
      m_axi_DATA_INPUT_ARCACHE : OUT STD_LOGIC_VECTOR(3 DOWNTO 0);
      m_axi_DATA_INPUT_ARPROT : OUT STD_LOGIC_VECTOR(2 DOWNTO 0);
      m_axi_DATA_INPUT_ARQOS : OUT STD_LOGIC_VECTOR(3 DOWNTO 0);
      m_axi_DATA_INPUT_ARUSER : OUT STD_LOGIC_VECTOR(0 DOWNTO 0);
      m_axi_DATA_INPUT_ARVALID : OUT STD_LOGIC;
      m_axi_DATA_INPUT_ARREADY : IN STD_LOGIC;
      m_axi_DATA_INPUT_RID : IN STD_LOGIC_VECTOR(0 DOWNTO 0);
      m_axi_DATA_INPUT_RDATA : IN STD_LOGIC_VECTOR(31 DOWNTO 0);
      m_axi_DATA_INPUT_RRESP : IN STD_LOGIC_VECTOR(1 DOWNTO 0);
      m_axi_DATA_INPUT_RLAST : IN STD_LOGIC;
      m_axi_DATA_INPUT_RUSER : IN STD_LOGIC_VECTOR(0 DOWNTO 0);
      m_axi_DATA_INPUT_RVALID : IN STD_LOGIC;
      m_axi_DATA_INPUT_RREADY : OUT STD_LOGIC;
      m_axi_DATA_WEIGHT_AWID : OUT STD_LOGIC_VECTOR(0 DOWNTO 0);
      m_axi_DATA_WEIGHT_AWADDR : OUT STD_LOGIC_VECTOR(31 DOWNTO 0);
      m_axi_DATA_WEIGHT_AWLEN : OUT STD_LOGIC_VECTOR(7 DOWNTO 0);
      m_axi_DATA_WEIGHT_AWSIZE : OUT STD_LOGIC_VECTOR(2 DOWNTO 0);
      m_axi_DATA_WEIGHT_AWBURST : OUT STD_LOGIC_VECTOR(1 DOWNTO 0);
      m_axi_DATA_WEIGHT_AWLOCK : OUT STD_LOGIC_VECTOR(1 DOWNTO 0);
      m_axi_DATA_WEIGHT_AWREGION : OUT STD_LOGIC_VECTOR(3 DOWNTO 0);
      m_axi_DATA_WEIGHT_AWCACHE : OUT STD_LOGIC_VECTOR(3 DOWNTO 0);
      m_axi_DATA_WEIGHT_AWPROT : OUT STD_LOGIC_VECTOR(2 DOWNTO 0);
      m_axi_DATA_WEIGHT_AWQOS : OUT STD_LOGIC_VECTOR(3 DOWNTO 0);
      m_axi_DATA_WEIGHT_AWUSER : OUT STD_LOGIC_VECTOR(0 DOWNTO 0);
      m_axi_DATA_WEIGHT_AWVALID : OUT STD_LOGIC;
      m_axi_DATA_WEIGHT_AWREADY : IN STD_LOGIC;
      m_axi_DATA_WEIGHT_WID : OUT STD_LOGIC_VECTOR(0 DOWNTO 0);
      m_axi_DATA_WEIGHT_WDATA : OUT STD_LOGIC_VECTOR(31 DOWNTO 0);
      m_axi_DATA_WEIGHT_WSTRB : OUT STD_LOGIC_VECTOR(3 DOWNTO 0);
      m_axi_DATA_WEIGHT_WLAST : OUT STD_LOGIC;
      m_axi_DATA_WEIGHT_WUSER : OUT STD_LOGIC_VECTOR(0 DOWNTO 0);
      m_axi_DATA_WEIGHT_WVALID : OUT STD_LOGIC;
      m_axi_DATA_WEIGHT_WREADY : IN STD_LOGIC;
      m_axi_DATA_WEIGHT_BID : IN STD_LOGIC_VECTOR(0 DOWNTO 0);
      m_axi_DATA_WEIGHT_BRESP : IN STD_LOGIC_VECTOR(1 DOWNTO 0);
      m_axi_DATA_WEIGHT_BUSER : IN STD_LOGIC_VECTOR(0 DOWNTO 0);
      m_axi_DATA_WEIGHT_BVALID : IN STD_LOGIC;
      m_axi_DATA_WEIGHT_BREADY : OUT STD_LOGIC;
      m_axi_DATA_WEIGHT_ARID : OUT STD_LOGIC_VECTOR(0 DOWNTO 0);
      m_axi_DATA_WEIGHT_ARADDR : OUT STD_LOGIC_VECTOR(31 DOWNTO 0);
      m_axi_DATA_WEIGHT_ARLEN : OUT STD_LOGIC_VECTOR(7 DOWNTO 0);
      m_axi_DATA_WEIGHT_ARSIZE : OUT STD_LOGIC_VECTOR(2 DOWNTO 0);
      m_axi_DATA_WEIGHT_ARBURST : OUT STD_LOGIC_VECTOR(1 DOWNTO 0);
      m_axi_DATA_WEIGHT_ARLOCK : OUT STD_LOGIC_VECTOR(1 DOWNTO 0);
      m_axi_DATA_WEIGHT_ARREGION : OUT STD_LOGIC_VECTOR(3 DOWNTO 0);
      m_axi_DATA_WEIGHT_ARCACHE : OUT STD_LOGIC_VECTOR(3 DOWNTO 0);
      m_axi_DATA_WEIGHT_ARPROT : OUT STD_LOGIC_VECTOR(2 DOWNTO 0);
      m_axi_DATA_WEIGHT_ARQOS : OUT STD_LOGIC_VECTOR(3 DOWNTO 0);
      m_axi_DATA_WEIGHT_ARUSER : OUT STD_LOGIC_VECTOR(0 DOWNTO 0);
      m_axi_DATA_WEIGHT_ARVALID : OUT STD_LOGIC;
      m_axi_DATA_WEIGHT_ARREADY : IN STD_LOGIC;
      m_axi_DATA_WEIGHT_RID : IN STD_LOGIC_VECTOR(0 DOWNTO 0);
      m_axi_DATA_WEIGHT_RDATA : IN STD_LOGIC_VECTOR(31 DOWNTO 0);
      m_axi_DATA_WEIGHT_RRESP : IN STD_LOGIC_VECTOR(1 DOWNTO 0);
      m_axi_DATA_WEIGHT_RLAST : IN STD_LOGIC;
      m_axi_DATA_WEIGHT_RUSER : IN STD_LOGIC_VECTOR(0 DOWNTO 0);
      m_axi_DATA_WEIGHT_RVALID : IN STD_LOGIC;
      m_axi_DATA_WEIGHT_RREADY : OUT STD_LOGIC;
      m_axi_DATA_BIAS_AWID : OUT STD_LOGIC_VECTOR(0 DOWNTO 0);
      m_axi_DATA_BIAS_AWADDR : OUT STD_LOGIC_VECTOR(31 DOWNTO 0);
      m_axi_DATA_BIAS_AWLEN : OUT STD_LOGIC_VECTOR(7 DOWNTO 0);
      m_axi_DATA_BIAS_AWSIZE : OUT STD_LOGIC_VECTOR(2 DOWNTO 0);
      m_axi_DATA_BIAS_AWBURST : OUT STD_LOGIC_VECTOR(1 DOWNTO 0);
      m_axi_DATA_BIAS_AWLOCK : OUT STD_LOGIC_VECTOR(1 DOWNTO 0);
      m_axi_DATA_BIAS_AWREGION : OUT STD_LOGIC_VECTOR(3 DOWNTO 0);
      m_axi_DATA_BIAS_AWCACHE : OUT STD_LOGIC_VECTOR(3 DOWNTO 0);
      m_axi_DATA_BIAS_AWPROT : OUT STD_LOGIC_VECTOR(2 DOWNTO 0);
      m_axi_DATA_BIAS_AWQOS : OUT STD_LOGIC_VECTOR(3 DOWNTO 0);
      m_axi_DATA_BIAS_AWUSER : OUT STD_LOGIC_VECTOR(0 DOWNTO 0);
      m_axi_DATA_BIAS_AWVALID : OUT STD_LOGIC;
      m_axi_DATA_BIAS_AWREADY : IN STD_LOGIC;
      m_axi_DATA_BIAS_WID : OUT STD_LOGIC_VECTOR(0 DOWNTO 0);
      m_axi_DATA_BIAS_WDATA : OUT STD_LOGIC_VECTOR(31 DOWNTO 0);
      m_axi_DATA_BIAS_WSTRB : OUT STD_LOGIC_VECTOR(3 DOWNTO 0);
      m_axi_DATA_BIAS_WLAST : OUT STD_LOGIC;
      m_axi_DATA_BIAS_WUSER : OUT STD_LOGIC_VECTOR(0 DOWNTO 0);
      m_axi_DATA_BIAS_WVALID : OUT STD_LOGIC;
      m_axi_DATA_BIAS_WREADY : IN STD_LOGIC;
      m_axi_DATA_BIAS_BID : IN STD_LOGIC_VECTOR(0 DOWNTO 0);
      m_axi_DATA_BIAS_BRESP : IN STD_LOGIC_VECTOR(1 DOWNTO 0);
      m_axi_DATA_BIAS_BUSER : IN STD_LOGIC_VECTOR(0 DOWNTO 0);
      m_axi_DATA_BIAS_BVALID : IN STD_LOGIC;
      m_axi_DATA_BIAS_BREADY : OUT STD_LOGIC;
      m_axi_DATA_BIAS_ARID : OUT STD_LOGIC_VECTOR(0 DOWNTO 0);
      m_axi_DATA_BIAS_ARADDR : OUT STD_LOGIC_VECTOR(31 DOWNTO 0);
      m_axi_DATA_BIAS_ARLEN : OUT STD_LOGIC_VECTOR(7 DOWNTO 0);
      m_axi_DATA_BIAS_ARSIZE : OUT STD_LOGIC_VECTOR(2 DOWNTO 0);
      m_axi_DATA_BIAS_ARBURST : OUT STD_LOGIC_VECTOR(1 DOWNTO 0);
      m_axi_DATA_BIAS_ARLOCK : OUT STD_LOGIC_VECTOR(1 DOWNTO 0);
      m_axi_DATA_BIAS_ARREGION : OUT STD_LOGIC_VECTOR(3 DOWNTO 0);
      m_axi_DATA_BIAS_ARCACHE : OUT STD_LOGIC_VECTOR(3 DOWNTO 0);
      m_axi_DATA_BIAS_ARPROT : OUT STD_LOGIC_VECTOR(2 DOWNTO 0);
      m_axi_DATA_BIAS_ARQOS : OUT STD_LOGIC_VECTOR(3 DOWNTO 0);
      m_axi_DATA_BIAS_ARUSER : OUT STD_LOGIC_VECTOR(0 DOWNTO 0);
      m_axi_DATA_BIAS_ARVALID : OUT STD_LOGIC;
      m_axi_DATA_BIAS_ARREADY : IN STD_LOGIC;
      m_axi_DATA_BIAS_RID : IN STD_LOGIC_VECTOR(0 DOWNTO 0);
      m_axi_DATA_BIAS_RDATA : IN STD_LOGIC_VECTOR(31 DOWNTO 0);
      m_axi_DATA_BIAS_RRESP : IN STD_LOGIC_VECTOR(1 DOWNTO 0);
      m_axi_DATA_BIAS_RLAST : IN STD_LOGIC;
      m_axi_DATA_BIAS_RUSER : IN STD_LOGIC_VECTOR(0 DOWNTO 0);
      m_axi_DATA_BIAS_RVALID : IN STD_LOGIC;
      m_axi_DATA_BIAS_RREADY : OUT STD_LOGIC;
      m_axi_DATA_OUTPUT_AWID : OUT STD_LOGIC_VECTOR(0 DOWNTO 0);
      m_axi_DATA_OUTPUT_AWADDR : OUT STD_LOGIC_VECTOR(31 DOWNTO 0);
      m_axi_DATA_OUTPUT_AWLEN : OUT STD_LOGIC_VECTOR(7 DOWNTO 0);
      m_axi_DATA_OUTPUT_AWSIZE : OUT STD_LOGIC_VECTOR(2 DOWNTO 0);
      m_axi_DATA_OUTPUT_AWBURST : OUT STD_LOGIC_VECTOR(1 DOWNTO 0);
      m_axi_DATA_OUTPUT_AWLOCK : OUT STD_LOGIC_VECTOR(1 DOWNTO 0);
      m_axi_DATA_OUTPUT_AWREGION : OUT STD_LOGIC_VECTOR(3 DOWNTO 0);
      m_axi_DATA_OUTPUT_AWCACHE : OUT STD_LOGIC_VECTOR(3 DOWNTO 0);
      m_axi_DATA_OUTPUT_AWPROT : OUT STD_LOGIC_VECTOR(2 DOWNTO 0);
      m_axi_DATA_OUTPUT_AWQOS : OUT STD_LOGIC_VECTOR(3 DOWNTO 0);
      m_axi_DATA_OUTPUT_AWUSER : OUT STD_LOGIC_VECTOR(0 DOWNTO 0);
      m_axi_DATA_OUTPUT_AWVALID : OUT STD_LOGIC;
      m_axi_DATA_OUTPUT_AWREADY : IN STD_LOGIC;
      m_axi_DATA_OUTPUT_WID : OUT STD_LOGIC_VECTOR(0 DOWNTO 0);
      m_axi_DATA_OUTPUT_WDATA : OUT STD_LOGIC_VECTOR(31 DOWNTO 0);
      m_axi_DATA_OUTPUT_WSTRB : OUT STD_LOGIC_VECTOR(3 DOWNTO 0);
      m_axi_DATA_OUTPUT_WLAST : OUT STD_LOGIC;
      m_axi_DATA_OUTPUT_WUSER : OUT STD_LOGIC_VECTOR(0 DOWNTO 0);
      m_axi_DATA_OUTPUT_WVALID : OUT STD_LOGIC;
      m_axi_DATA_OUTPUT_WREADY : IN STD_LOGIC;
      m_axi_DATA_OUTPUT_BID : IN STD_LOGIC_VECTOR(0 DOWNTO 0);
      m_axi_DATA_OUTPUT_BRESP : IN STD_LOGIC_VECTOR(1 DOWNTO 0);
      m_axi_DATA_OUTPUT_BUSER : IN STD_LOGIC_VECTOR(0 DOWNTO 0);
      m_axi_DATA_OUTPUT_BVALID : IN STD_LOGIC;
      m_axi_DATA_OUTPUT_BREADY : OUT STD_LOGIC;
      m_axi_DATA_OUTPUT_ARID : OUT STD_LOGIC_VECTOR(0 DOWNTO 0);
      m_axi_DATA_OUTPUT_ARADDR : OUT STD_LOGIC_VECTOR(31 DOWNTO 0);
      m_axi_DATA_OUTPUT_ARLEN : OUT STD_LOGIC_VECTOR(7 DOWNTO 0);
      m_axi_DATA_OUTPUT_ARSIZE : OUT STD_LOGIC_VECTOR(2 DOWNTO 0);
      m_axi_DATA_OUTPUT_ARBURST : OUT STD_LOGIC_VECTOR(1 DOWNTO 0);
      m_axi_DATA_OUTPUT_ARLOCK : OUT STD_LOGIC_VECTOR(1 DOWNTO 0);
      m_axi_DATA_OUTPUT_ARREGION : OUT STD_LOGIC_VECTOR(3 DOWNTO 0);
      m_axi_DATA_OUTPUT_ARCACHE : OUT STD_LOGIC_VECTOR(3 DOWNTO 0);
      m_axi_DATA_OUTPUT_ARPROT : OUT STD_LOGIC_VECTOR(2 DOWNTO 0);
      m_axi_DATA_OUTPUT_ARQOS : OUT STD_LOGIC_VECTOR(3 DOWNTO 0);
      m_axi_DATA_OUTPUT_ARUSER : OUT STD_LOGIC_VECTOR(0 DOWNTO 0);
      m_axi_DATA_OUTPUT_ARVALID : OUT STD_LOGIC;
      m_axi_DATA_OUTPUT_ARREADY : IN STD_LOGIC;
      m_axi_DATA_OUTPUT_RID : IN STD_LOGIC_VECTOR(0 DOWNTO 0);
      m_axi_DATA_OUTPUT_RDATA : IN STD_LOGIC_VECTOR(31 DOWNTO 0);
      m_axi_DATA_OUTPUT_RRESP : IN STD_LOGIC_VECTOR(1 DOWNTO 0);
      m_axi_DATA_OUTPUT_RLAST : IN STD_LOGIC;
      m_axi_DATA_OUTPUT_RUSER : IN STD_LOGIC_VECTOR(0 DOWNTO 0);
      m_axi_DATA_OUTPUT_RVALID : IN STD_LOGIC;
      m_axi_DATA_OUTPUT_RREADY : OUT STD_LOGIC
    );
  END COMPONENT conv1;
  ATTRIBUTE IP_DEFINITION_SOURCE : STRING;
  ATTRIBUTE IP_DEFINITION_SOURCE OF design_1_conv1_0_1_arch: ARCHITECTURE IS "HLS";
  ATTRIBUTE X_INTERFACE_INFO : STRING;
  ATTRIBUTE X_INTERFACE_PARAMETER : STRING;
  ATTRIBUTE X_INTERFACE_INFO OF m_axi_DATA_OUTPUT_RREADY: SIGNAL IS "xilinx.com:interface:aximm:1.0 m_axi_DATA_OUTPUT RREADY";
  ATTRIBUTE X_INTERFACE_INFO OF m_axi_DATA_OUTPUT_RVALID: SIGNAL IS "xilinx.com:interface:aximm:1.0 m_axi_DATA_OUTPUT RVALID";
  ATTRIBUTE X_INTERFACE_INFO OF m_axi_DATA_OUTPUT_RLAST: SIGNAL IS "xilinx.com:interface:aximm:1.0 m_axi_DATA_OUTPUT RLAST";
  ATTRIBUTE X_INTERFACE_INFO OF m_axi_DATA_OUTPUT_RRESP: SIGNAL IS "xilinx.com:interface:aximm:1.0 m_axi_DATA_OUTPUT RRESP";
  ATTRIBUTE X_INTERFACE_INFO OF m_axi_DATA_OUTPUT_RDATA: SIGNAL IS "xilinx.com:interface:aximm:1.0 m_axi_DATA_OUTPUT RDATA";
  ATTRIBUTE X_INTERFACE_INFO OF m_axi_DATA_OUTPUT_ARREADY: SIGNAL IS "xilinx.com:interface:aximm:1.0 m_axi_DATA_OUTPUT ARREADY";
  ATTRIBUTE X_INTERFACE_INFO OF m_axi_DATA_OUTPUT_ARVALID: SIGNAL IS "xilinx.com:interface:aximm:1.0 m_axi_DATA_OUTPUT ARVALID";
  ATTRIBUTE X_INTERFACE_INFO OF m_axi_DATA_OUTPUT_ARQOS: SIGNAL IS "xilinx.com:interface:aximm:1.0 m_axi_DATA_OUTPUT ARQOS";
  ATTRIBUTE X_INTERFACE_INFO OF m_axi_DATA_OUTPUT_ARPROT: SIGNAL IS "xilinx.com:interface:aximm:1.0 m_axi_DATA_OUTPUT ARPROT";
  ATTRIBUTE X_INTERFACE_INFO OF m_axi_DATA_OUTPUT_ARCACHE: SIGNAL IS "xilinx.com:interface:aximm:1.0 m_axi_DATA_OUTPUT ARCACHE";
  ATTRIBUTE X_INTERFACE_INFO OF m_axi_DATA_OUTPUT_ARREGION: SIGNAL IS "xilinx.com:interface:aximm:1.0 m_axi_DATA_OUTPUT ARREGION";
  ATTRIBUTE X_INTERFACE_INFO OF m_axi_DATA_OUTPUT_ARLOCK: SIGNAL IS "xilinx.com:interface:aximm:1.0 m_axi_DATA_OUTPUT ARLOCK";
  ATTRIBUTE X_INTERFACE_INFO OF m_axi_DATA_OUTPUT_ARBURST: SIGNAL IS "xilinx.com:interface:aximm:1.0 m_axi_DATA_OUTPUT ARBURST";
  ATTRIBUTE X_INTERFACE_INFO OF m_axi_DATA_OUTPUT_ARSIZE: SIGNAL IS "xilinx.com:interface:aximm:1.0 m_axi_DATA_OUTPUT ARSIZE";
  ATTRIBUTE X_INTERFACE_INFO OF m_axi_DATA_OUTPUT_ARLEN: SIGNAL IS "xilinx.com:interface:aximm:1.0 m_axi_DATA_OUTPUT ARLEN";
  ATTRIBUTE X_INTERFACE_INFO OF m_axi_DATA_OUTPUT_ARADDR: SIGNAL IS "xilinx.com:interface:aximm:1.0 m_axi_DATA_OUTPUT ARADDR";
  ATTRIBUTE X_INTERFACE_INFO OF m_axi_DATA_OUTPUT_BREADY: SIGNAL IS "xilinx.com:interface:aximm:1.0 m_axi_DATA_OUTPUT BREADY";
  ATTRIBUTE X_INTERFACE_INFO OF m_axi_DATA_OUTPUT_BVALID: SIGNAL IS "xilinx.com:interface:aximm:1.0 m_axi_DATA_OUTPUT BVALID";
  ATTRIBUTE X_INTERFACE_INFO OF m_axi_DATA_OUTPUT_BRESP: SIGNAL IS "xilinx.com:interface:aximm:1.0 m_axi_DATA_OUTPUT BRESP";
  ATTRIBUTE X_INTERFACE_INFO OF m_axi_DATA_OUTPUT_WREADY: SIGNAL IS "xilinx.com:interface:aximm:1.0 m_axi_DATA_OUTPUT WREADY";
  ATTRIBUTE X_INTERFACE_INFO OF m_axi_DATA_OUTPUT_WVALID: SIGNAL IS "xilinx.com:interface:aximm:1.0 m_axi_DATA_OUTPUT WVALID";
  ATTRIBUTE X_INTERFACE_INFO OF m_axi_DATA_OUTPUT_WLAST: SIGNAL IS "xilinx.com:interface:aximm:1.0 m_axi_DATA_OUTPUT WLAST";
  ATTRIBUTE X_INTERFACE_INFO OF m_axi_DATA_OUTPUT_WSTRB: SIGNAL IS "xilinx.com:interface:aximm:1.0 m_axi_DATA_OUTPUT WSTRB";
  ATTRIBUTE X_INTERFACE_INFO OF m_axi_DATA_OUTPUT_WDATA: SIGNAL IS "xilinx.com:interface:aximm:1.0 m_axi_DATA_OUTPUT WDATA";
  ATTRIBUTE X_INTERFACE_INFO OF m_axi_DATA_OUTPUT_AWREADY: SIGNAL IS "xilinx.com:interface:aximm:1.0 m_axi_DATA_OUTPUT AWREADY";
  ATTRIBUTE X_INTERFACE_INFO OF m_axi_DATA_OUTPUT_AWVALID: SIGNAL IS "xilinx.com:interface:aximm:1.0 m_axi_DATA_OUTPUT AWVALID";
  ATTRIBUTE X_INTERFACE_INFO OF m_axi_DATA_OUTPUT_AWQOS: SIGNAL IS "xilinx.com:interface:aximm:1.0 m_axi_DATA_OUTPUT AWQOS";
  ATTRIBUTE X_INTERFACE_INFO OF m_axi_DATA_OUTPUT_AWPROT: SIGNAL IS "xilinx.com:interface:aximm:1.0 m_axi_DATA_OUTPUT AWPROT";
  ATTRIBUTE X_INTERFACE_INFO OF m_axi_DATA_OUTPUT_AWCACHE: SIGNAL IS "xilinx.com:interface:aximm:1.0 m_axi_DATA_OUTPUT AWCACHE";
  ATTRIBUTE X_INTERFACE_INFO OF m_axi_DATA_OUTPUT_AWREGION: SIGNAL IS "xilinx.com:interface:aximm:1.0 m_axi_DATA_OUTPUT AWREGION";
  ATTRIBUTE X_INTERFACE_INFO OF m_axi_DATA_OUTPUT_AWLOCK: SIGNAL IS "xilinx.com:interface:aximm:1.0 m_axi_DATA_OUTPUT AWLOCK";
  ATTRIBUTE X_INTERFACE_INFO OF m_axi_DATA_OUTPUT_AWBURST: SIGNAL IS "xilinx.com:interface:aximm:1.0 m_axi_DATA_OUTPUT AWBURST";
  ATTRIBUTE X_INTERFACE_INFO OF m_axi_DATA_OUTPUT_AWSIZE: SIGNAL IS "xilinx.com:interface:aximm:1.0 m_axi_DATA_OUTPUT AWSIZE";
  ATTRIBUTE X_INTERFACE_INFO OF m_axi_DATA_OUTPUT_AWLEN: SIGNAL IS "xilinx.com:interface:aximm:1.0 m_axi_DATA_OUTPUT AWLEN";
  ATTRIBUTE X_INTERFACE_PARAMETER OF m_axi_DATA_OUTPUT_AWADDR: SIGNAL IS "XIL_INTERFACENAME m_axi_DATA_OUTPUT, ADDR_WIDTH 32, MAX_BURST_LENGTH 256, NUM_READ_OUTSTANDING 16, NUM_WRITE_OUTSTANDING 16, MAX_READ_BURST_LENGTH 16, MAX_WRITE_BURST_LENGTH 16, PROTOCOL AXI4, READ_WRITE_MODE READ_WRITE, HAS_BURST 0, SUPPORTS_NARROW_BURST 0, DATA_WIDTH 32, FREQ_HZ 100000000, ID_WIDTH 0, AWUSER_WIDTH 0, ARUSER_WIDTH 0, WUSER_WIDTH 0, RUSER_WIDTH 0, BUSER_WIDTH 0, HAS_LOCK 1, HAS_PROT 1, HAS_CACHE 1, HAS_QOS 1, HAS_REGION 1, HAS_WSTRB 1, HAS_BRESP 1, HAS_RRESP 1, PHASE 0.000, CLK_" & 
"DOMAIN design_1_processing_system7_0_1_FCLK_CLK0, NUM_READ_THREADS 1, NUM_WRITE_THREADS 1, RUSER_BITS_PER_BYTE 0, WUSER_BITS_PER_BYTE 0";
  ATTRIBUTE X_INTERFACE_INFO OF m_axi_DATA_OUTPUT_AWADDR: SIGNAL IS "xilinx.com:interface:aximm:1.0 m_axi_DATA_OUTPUT AWADDR";
  ATTRIBUTE X_INTERFACE_INFO OF m_axi_DATA_BIAS_RREADY: SIGNAL IS "xilinx.com:interface:aximm:1.0 m_axi_DATA_BIAS RREADY";
  ATTRIBUTE X_INTERFACE_INFO OF m_axi_DATA_BIAS_RVALID: SIGNAL IS "xilinx.com:interface:aximm:1.0 m_axi_DATA_BIAS RVALID";
  ATTRIBUTE X_INTERFACE_INFO OF m_axi_DATA_BIAS_RLAST: SIGNAL IS "xilinx.com:interface:aximm:1.0 m_axi_DATA_BIAS RLAST";
  ATTRIBUTE X_INTERFACE_INFO OF m_axi_DATA_BIAS_RRESP: SIGNAL IS "xilinx.com:interface:aximm:1.0 m_axi_DATA_BIAS RRESP";
  ATTRIBUTE X_INTERFACE_INFO OF m_axi_DATA_BIAS_RDATA: SIGNAL IS "xilinx.com:interface:aximm:1.0 m_axi_DATA_BIAS RDATA";
  ATTRIBUTE X_INTERFACE_INFO OF m_axi_DATA_BIAS_ARREADY: SIGNAL IS "xilinx.com:interface:aximm:1.0 m_axi_DATA_BIAS ARREADY";
  ATTRIBUTE X_INTERFACE_INFO OF m_axi_DATA_BIAS_ARVALID: SIGNAL IS "xilinx.com:interface:aximm:1.0 m_axi_DATA_BIAS ARVALID";
  ATTRIBUTE X_INTERFACE_INFO OF m_axi_DATA_BIAS_ARQOS: SIGNAL IS "xilinx.com:interface:aximm:1.0 m_axi_DATA_BIAS ARQOS";
  ATTRIBUTE X_INTERFACE_INFO OF m_axi_DATA_BIAS_ARPROT: SIGNAL IS "xilinx.com:interface:aximm:1.0 m_axi_DATA_BIAS ARPROT";
  ATTRIBUTE X_INTERFACE_INFO OF m_axi_DATA_BIAS_ARCACHE: SIGNAL IS "xilinx.com:interface:aximm:1.0 m_axi_DATA_BIAS ARCACHE";
  ATTRIBUTE X_INTERFACE_INFO OF m_axi_DATA_BIAS_ARREGION: SIGNAL IS "xilinx.com:interface:aximm:1.0 m_axi_DATA_BIAS ARREGION";
  ATTRIBUTE X_INTERFACE_INFO OF m_axi_DATA_BIAS_ARLOCK: SIGNAL IS "xilinx.com:interface:aximm:1.0 m_axi_DATA_BIAS ARLOCK";
  ATTRIBUTE X_INTERFACE_INFO OF m_axi_DATA_BIAS_ARBURST: SIGNAL IS "xilinx.com:interface:aximm:1.0 m_axi_DATA_BIAS ARBURST";
  ATTRIBUTE X_INTERFACE_INFO OF m_axi_DATA_BIAS_ARSIZE: SIGNAL IS "xilinx.com:interface:aximm:1.0 m_axi_DATA_BIAS ARSIZE";
  ATTRIBUTE X_INTERFACE_INFO OF m_axi_DATA_BIAS_ARLEN: SIGNAL IS "xilinx.com:interface:aximm:1.0 m_axi_DATA_BIAS ARLEN";
  ATTRIBUTE X_INTERFACE_INFO OF m_axi_DATA_BIAS_ARADDR: SIGNAL IS "xilinx.com:interface:aximm:1.0 m_axi_DATA_BIAS ARADDR";
  ATTRIBUTE X_INTERFACE_INFO OF m_axi_DATA_BIAS_BREADY: SIGNAL IS "xilinx.com:interface:aximm:1.0 m_axi_DATA_BIAS BREADY";
  ATTRIBUTE X_INTERFACE_INFO OF m_axi_DATA_BIAS_BVALID: SIGNAL IS "xilinx.com:interface:aximm:1.0 m_axi_DATA_BIAS BVALID";
  ATTRIBUTE X_INTERFACE_INFO OF m_axi_DATA_BIAS_BRESP: SIGNAL IS "xilinx.com:interface:aximm:1.0 m_axi_DATA_BIAS BRESP";
  ATTRIBUTE X_INTERFACE_INFO OF m_axi_DATA_BIAS_WREADY: SIGNAL IS "xilinx.com:interface:aximm:1.0 m_axi_DATA_BIAS WREADY";
  ATTRIBUTE X_INTERFACE_INFO OF m_axi_DATA_BIAS_WVALID: SIGNAL IS "xilinx.com:interface:aximm:1.0 m_axi_DATA_BIAS WVALID";
  ATTRIBUTE X_INTERFACE_INFO OF m_axi_DATA_BIAS_WLAST: SIGNAL IS "xilinx.com:interface:aximm:1.0 m_axi_DATA_BIAS WLAST";
  ATTRIBUTE X_INTERFACE_INFO OF m_axi_DATA_BIAS_WSTRB: SIGNAL IS "xilinx.com:interface:aximm:1.0 m_axi_DATA_BIAS WSTRB";
  ATTRIBUTE X_INTERFACE_INFO OF m_axi_DATA_BIAS_WDATA: SIGNAL IS "xilinx.com:interface:aximm:1.0 m_axi_DATA_BIAS WDATA";
  ATTRIBUTE X_INTERFACE_INFO OF m_axi_DATA_BIAS_AWREADY: SIGNAL IS "xilinx.com:interface:aximm:1.0 m_axi_DATA_BIAS AWREADY";
  ATTRIBUTE X_INTERFACE_INFO OF m_axi_DATA_BIAS_AWVALID: SIGNAL IS "xilinx.com:interface:aximm:1.0 m_axi_DATA_BIAS AWVALID";
  ATTRIBUTE X_INTERFACE_INFO OF m_axi_DATA_BIAS_AWQOS: SIGNAL IS "xilinx.com:interface:aximm:1.0 m_axi_DATA_BIAS AWQOS";
  ATTRIBUTE X_INTERFACE_INFO OF m_axi_DATA_BIAS_AWPROT: SIGNAL IS "xilinx.com:interface:aximm:1.0 m_axi_DATA_BIAS AWPROT";
  ATTRIBUTE X_INTERFACE_INFO OF m_axi_DATA_BIAS_AWCACHE: SIGNAL IS "xilinx.com:interface:aximm:1.0 m_axi_DATA_BIAS AWCACHE";
  ATTRIBUTE X_INTERFACE_INFO OF m_axi_DATA_BIAS_AWREGION: SIGNAL IS "xilinx.com:interface:aximm:1.0 m_axi_DATA_BIAS AWREGION";
  ATTRIBUTE X_INTERFACE_INFO OF m_axi_DATA_BIAS_AWLOCK: SIGNAL IS "xilinx.com:interface:aximm:1.0 m_axi_DATA_BIAS AWLOCK";
  ATTRIBUTE X_INTERFACE_INFO OF m_axi_DATA_BIAS_AWBURST: SIGNAL IS "xilinx.com:interface:aximm:1.0 m_axi_DATA_BIAS AWBURST";
  ATTRIBUTE X_INTERFACE_INFO OF m_axi_DATA_BIAS_AWSIZE: SIGNAL IS "xilinx.com:interface:aximm:1.0 m_axi_DATA_BIAS AWSIZE";
  ATTRIBUTE X_INTERFACE_INFO OF m_axi_DATA_BIAS_AWLEN: SIGNAL IS "xilinx.com:interface:aximm:1.0 m_axi_DATA_BIAS AWLEN";
  ATTRIBUTE X_INTERFACE_PARAMETER OF m_axi_DATA_BIAS_AWADDR: SIGNAL IS "XIL_INTERFACENAME m_axi_DATA_BIAS, ADDR_WIDTH 32, MAX_BURST_LENGTH 256, NUM_READ_OUTSTANDING 16, NUM_WRITE_OUTSTANDING 16, MAX_READ_BURST_LENGTH 16, MAX_WRITE_BURST_LENGTH 16, PROTOCOL AXI4, READ_WRITE_MODE READ_WRITE, HAS_BURST 0, SUPPORTS_NARROW_BURST 0, DATA_WIDTH 32, FREQ_HZ 100000000, ID_WIDTH 0, AWUSER_WIDTH 0, ARUSER_WIDTH 0, WUSER_WIDTH 0, RUSER_WIDTH 0, BUSER_WIDTH 0, HAS_LOCK 1, HAS_PROT 1, HAS_CACHE 1, HAS_QOS 1, HAS_REGION 1, HAS_WSTRB 1, HAS_BRESP 1, HAS_RRESP 1, PHASE 0.000, CLK_DO" & 
"MAIN design_1_processing_system7_0_1_FCLK_CLK0, NUM_READ_THREADS 1, NUM_WRITE_THREADS 1, RUSER_BITS_PER_BYTE 0, WUSER_BITS_PER_BYTE 0";
  ATTRIBUTE X_INTERFACE_INFO OF m_axi_DATA_BIAS_AWADDR: SIGNAL IS "xilinx.com:interface:aximm:1.0 m_axi_DATA_BIAS AWADDR";
  ATTRIBUTE X_INTERFACE_INFO OF m_axi_DATA_WEIGHT_RREADY: SIGNAL IS "xilinx.com:interface:aximm:1.0 m_axi_DATA_WEIGHT RREADY";
  ATTRIBUTE X_INTERFACE_INFO OF m_axi_DATA_WEIGHT_RVALID: SIGNAL IS "xilinx.com:interface:aximm:1.0 m_axi_DATA_WEIGHT RVALID";
  ATTRIBUTE X_INTERFACE_INFO OF m_axi_DATA_WEIGHT_RLAST: SIGNAL IS "xilinx.com:interface:aximm:1.0 m_axi_DATA_WEIGHT RLAST";
  ATTRIBUTE X_INTERFACE_INFO OF m_axi_DATA_WEIGHT_RRESP: SIGNAL IS "xilinx.com:interface:aximm:1.0 m_axi_DATA_WEIGHT RRESP";
  ATTRIBUTE X_INTERFACE_INFO OF m_axi_DATA_WEIGHT_RDATA: SIGNAL IS "xilinx.com:interface:aximm:1.0 m_axi_DATA_WEIGHT RDATA";
  ATTRIBUTE X_INTERFACE_INFO OF m_axi_DATA_WEIGHT_ARREADY: SIGNAL IS "xilinx.com:interface:aximm:1.0 m_axi_DATA_WEIGHT ARREADY";
  ATTRIBUTE X_INTERFACE_INFO OF m_axi_DATA_WEIGHT_ARVALID: SIGNAL IS "xilinx.com:interface:aximm:1.0 m_axi_DATA_WEIGHT ARVALID";
  ATTRIBUTE X_INTERFACE_INFO OF m_axi_DATA_WEIGHT_ARQOS: SIGNAL IS "xilinx.com:interface:aximm:1.0 m_axi_DATA_WEIGHT ARQOS";
  ATTRIBUTE X_INTERFACE_INFO OF m_axi_DATA_WEIGHT_ARPROT: SIGNAL IS "xilinx.com:interface:aximm:1.0 m_axi_DATA_WEIGHT ARPROT";
  ATTRIBUTE X_INTERFACE_INFO OF m_axi_DATA_WEIGHT_ARCACHE: SIGNAL IS "xilinx.com:interface:aximm:1.0 m_axi_DATA_WEIGHT ARCACHE";
  ATTRIBUTE X_INTERFACE_INFO OF m_axi_DATA_WEIGHT_ARREGION: SIGNAL IS "xilinx.com:interface:aximm:1.0 m_axi_DATA_WEIGHT ARREGION";
  ATTRIBUTE X_INTERFACE_INFO OF m_axi_DATA_WEIGHT_ARLOCK: SIGNAL IS "xilinx.com:interface:aximm:1.0 m_axi_DATA_WEIGHT ARLOCK";
  ATTRIBUTE X_INTERFACE_INFO OF m_axi_DATA_WEIGHT_ARBURST: SIGNAL IS "xilinx.com:interface:aximm:1.0 m_axi_DATA_WEIGHT ARBURST";
  ATTRIBUTE X_INTERFACE_INFO OF m_axi_DATA_WEIGHT_ARSIZE: SIGNAL IS "xilinx.com:interface:aximm:1.0 m_axi_DATA_WEIGHT ARSIZE";
  ATTRIBUTE X_INTERFACE_INFO OF m_axi_DATA_WEIGHT_ARLEN: SIGNAL IS "xilinx.com:interface:aximm:1.0 m_axi_DATA_WEIGHT ARLEN";
  ATTRIBUTE X_INTERFACE_INFO OF m_axi_DATA_WEIGHT_ARADDR: SIGNAL IS "xilinx.com:interface:aximm:1.0 m_axi_DATA_WEIGHT ARADDR";
  ATTRIBUTE X_INTERFACE_INFO OF m_axi_DATA_WEIGHT_BREADY: SIGNAL IS "xilinx.com:interface:aximm:1.0 m_axi_DATA_WEIGHT BREADY";
  ATTRIBUTE X_INTERFACE_INFO OF m_axi_DATA_WEIGHT_BVALID: SIGNAL IS "xilinx.com:interface:aximm:1.0 m_axi_DATA_WEIGHT BVALID";
  ATTRIBUTE X_INTERFACE_INFO OF m_axi_DATA_WEIGHT_BRESP: SIGNAL IS "xilinx.com:interface:aximm:1.0 m_axi_DATA_WEIGHT BRESP";
  ATTRIBUTE X_INTERFACE_INFO OF m_axi_DATA_WEIGHT_WREADY: SIGNAL IS "xilinx.com:interface:aximm:1.0 m_axi_DATA_WEIGHT WREADY";
  ATTRIBUTE X_INTERFACE_INFO OF m_axi_DATA_WEIGHT_WVALID: SIGNAL IS "xilinx.com:interface:aximm:1.0 m_axi_DATA_WEIGHT WVALID";
  ATTRIBUTE X_INTERFACE_INFO OF m_axi_DATA_WEIGHT_WLAST: SIGNAL IS "xilinx.com:interface:aximm:1.0 m_axi_DATA_WEIGHT WLAST";
  ATTRIBUTE X_INTERFACE_INFO OF m_axi_DATA_WEIGHT_WSTRB: SIGNAL IS "xilinx.com:interface:aximm:1.0 m_axi_DATA_WEIGHT WSTRB";
  ATTRIBUTE X_INTERFACE_INFO OF m_axi_DATA_WEIGHT_WDATA: SIGNAL IS "xilinx.com:interface:aximm:1.0 m_axi_DATA_WEIGHT WDATA";
  ATTRIBUTE X_INTERFACE_INFO OF m_axi_DATA_WEIGHT_AWREADY: SIGNAL IS "xilinx.com:interface:aximm:1.0 m_axi_DATA_WEIGHT AWREADY";
  ATTRIBUTE X_INTERFACE_INFO OF m_axi_DATA_WEIGHT_AWVALID: SIGNAL IS "xilinx.com:interface:aximm:1.0 m_axi_DATA_WEIGHT AWVALID";
  ATTRIBUTE X_INTERFACE_INFO OF m_axi_DATA_WEIGHT_AWQOS: SIGNAL IS "xilinx.com:interface:aximm:1.0 m_axi_DATA_WEIGHT AWQOS";
  ATTRIBUTE X_INTERFACE_INFO OF m_axi_DATA_WEIGHT_AWPROT: SIGNAL IS "xilinx.com:interface:aximm:1.0 m_axi_DATA_WEIGHT AWPROT";
  ATTRIBUTE X_INTERFACE_INFO OF m_axi_DATA_WEIGHT_AWCACHE: SIGNAL IS "xilinx.com:interface:aximm:1.0 m_axi_DATA_WEIGHT AWCACHE";
  ATTRIBUTE X_INTERFACE_INFO OF m_axi_DATA_WEIGHT_AWREGION: SIGNAL IS "xilinx.com:interface:aximm:1.0 m_axi_DATA_WEIGHT AWREGION";
  ATTRIBUTE X_INTERFACE_INFO OF m_axi_DATA_WEIGHT_AWLOCK: SIGNAL IS "xilinx.com:interface:aximm:1.0 m_axi_DATA_WEIGHT AWLOCK";
  ATTRIBUTE X_INTERFACE_INFO OF m_axi_DATA_WEIGHT_AWBURST: SIGNAL IS "xilinx.com:interface:aximm:1.0 m_axi_DATA_WEIGHT AWBURST";
  ATTRIBUTE X_INTERFACE_INFO OF m_axi_DATA_WEIGHT_AWSIZE: SIGNAL IS "xilinx.com:interface:aximm:1.0 m_axi_DATA_WEIGHT AWSIZE";
  ATTRIBUTE X_INTERFACE_INFO OF m_axi_DATA_WEIGHT_AWLEN: SIGNAL IS "xilinx.com:interface:aximm:1.0 m_axi_DATA_WEIGHT AWLEN";
  ATTRIBUTE X_INTERFACE_PARAMETER OF m_axi_DATA_WEIGHT_AWADDR: SIGNAL IS "XIL_INTERFACENAME m_axi_DATA_WEIGHT, ADDR_WIDTH 32, MAX_BURST_LENGTH 256, NUM_READ_OUTSTANDING 16, NUM_WRITE_OUTSTANDING 16, MAX_READ_BURST_LENGTH 16, MAX_WRITE_BURST_LENGTH 16, PROTOCOL AXI4, READ_WRITE_MODE READ_WRITE, HAS_BURST 0, SUPPORTS_NARROW_BURST 0, DATA_WIDTH 32, FREQ_HZ 100000000, ID_WIDTH 0, AWUSER_WIDTH 0, ARUSER_WIDTH 0, WUSER_WIDTH 0, RUSER_WIDTH 0, BUSER_WIDTH 0, HAS_LOCK 1, HAS_PROT 1, HAS_CACHE 1, HAS_QOS 1, HAS_REGION 1, HAS_WSTRB 1, HAS_BRESP 1, HAS_RRESP 1, PHASE 0.000, CLK_" & 
"DOMAIN design_1_processing_system7_0_1_FCLK_CLK0, NUM_READ_THREADS 1, NUM_WRITE_THREADS 1, RUSER_BITS_PER_BYTE 0, WUSER_BITS_PER_BYTE 0";
  ATTRIBUTE X_INTERFACE_INFO OF m_axi_DATA_WEIGHT_AWADDR: SIGNAL IS "xilinx.com:interface:aximm:1.0 m_axi_DATA_WEIGHT AWADDR";
  ATTRIBUTE X_INTERFACE_INFO OF m_axi_DATA_INPUT_RREADY: SIGNAL IS "xilinx.com:interface:aximm:1.0 m_axi_DATA_INPUT RREADY";
  ATTRIBUTE X_INTERFACE_INFO OF m_axi_DATA_INPUT_RVALID: SIGNAL IS "xilinx.com:interface:aximm:1.0 m_axi_DATA_INPUT RVALID";
  ATTRIBUTE X_INTERFACE_INFO OF m_axi_DATA_INPUT_RLAST: SIGNAL IS "xilinx.com:interface:aximm:1.0 m_axi_DATA_INPUT RLAST";
  ATTRIBUTE X_INTERFACE_INFO OF m_axi_DATA_INPUT_RRESP: SIGNAL IS "xilinx.com:interface:aximm:1.0 m_axi_DATA_INPUT RRESP";
  ATTRIBUTE X_INTERFACE_INFO OF m_axi_DATA_INPUT_RDATA: SIGNAL IS "xilinx.com:interface:aximm:1.0 m_axi_DATA_INPUT RDATA";
  ATTRIBUTE X_INTERFACE_INFO OF m_axi_DATA_INPUT_ARREADY: SIGNAL IS "xilinx.com:interface:aximm:1.0 m_axi_DATA_INPUT ARREADY";
  ATTRIBUTE X_INTERFACE_INFO OF m_axi_DATA_INPUT_ARVALID: SIGNAL IS "xilinx.com:interface:aximm:1.0 m_axi_DATA_INPUT ARVALID";
  ATTRIBUTE X_INTERFACE_INFO OF m_axi_DATA_INPUT_ARQOS: SIGNAL IS "xilinx.com:interface:aximm:1.0 m_axi_DATA_INPUT ARQOS";
  ATTRIBUTE X_INTERFACE_INFO OF m_axi_DATA_INPUT_ARPROT: SIGNAL IS "xilinx.com:interface:aximm:1.0 m_axi_DATA_INPUT ARPROT";
  ATTRIBUTE X_INTERFACE_INFO OF m_axi_DATA_INPUT_ARCACHE: SIGNAL IS "xilinx.com:interface:aximm:1.0 m_axi_DATA_INPUT ARCACHE";
  ATTRIBUTE X_INTERFACE_INFO OF m_axi_DATA_INPUT_ARREGION: SIGNAL IS "xilinx.com:interface:aximm:1.0 m_axi_DATA_INPUT ARREGION";
  ATTRIBUTE X_INTERFACE_INFO OF m_axi_DATA_INPUT_ARLOCK: SIGNAL IS "xilinx.com:interface:aximm:1.0 m_axi_DATA_INPUT ARLOCK";
  ATTRIBUTE X_INTERFACE_INFO OF m_axi_DATA_INPUT_ARBURST: SIGNAL IS "xilinx.com:interface:aximm:1.0 m_axi_DATA_INPUT ARBURST";
  ATTRIBUTE X_INTERFACE_INFO OF m_axi_DATA_INPUT_ARSIZE: SIGNAL IS "xilinx.com:interface:aximm:1.0 m_axi_DATA_INPUT ARSIZE";
  ATTRIBUTE X_INTERFACE_INFO OF m_axi_DATA_INPUT_ARLEN: SIGNAL IS "xilinx.com:interface:aximm:1.0 m_axi_DATA_INPUT ARLEN";
  ATTRIBUTE X_INTERFACE_INFO OF m_axi_DATA_INPUT_ARADDR: SIGNAL IS "xilinx.com:interface:aximm:1.0 m_axi_DATA_INPUT ARADDR";
  ATTRIBUTE X_INTERFACE_INFO OF m_axi_DATA_INPUT_BREADY: SIGNAL IS "xilinx.com:interface:aximm:1.0 m_axi_DATA_INPUT BREADY";
  ATTRIBUTE X_INTERFACE_INFO OF m_axi_DATA_INPUT_BVALID: SIGNAL IS "xilinx.com:interface:aximm:1.0 m_axi_DATA_INPUT BVALID";
  ATTRIBUTE X_INTERFACE_INFO OF m_axi_DATA_INPUT_BRESP: SIGNAL IS "xilinx.com:interface:aximm:1.0 m_axi_DATA_INPUT BRESP";
  ATTRIBUTE X_INTERFACE_INFO OF m_axi_DATA_INPUT_WREADY: SIGNAL IS "xilinx.com:interface:aximm:1.0 m_axi_DATA_INPUT WREADY";
  ATTRIBUTE X_INTERFACE_INFO OF m_axi_DATA_INPUT_WVALID: SIGNAL IS "xilinx.com:interface:aximm:1.0 m_axi_DATA_INPUT WVALID";
  ATTRIBUTE X_INTERFACE_INFO OF m_axi_DATA_INPUT_WLAST: SIGNAL IS "xilinx.com:interface:aximm:1.0 m_axi_DATA_INPUT WLAST";
  ATTRIBUTE X_INTERFACE_INFO OF m_axi_DATA_INPUT_WSTRB: SIGNAL IS "xilinx.com:interface:aximm:1.0 m_axi_DATA_INPUT WSTRB";
  ATTRIBUTE X_INTERFACE_INFO OF m_axi_DATA_INPUT_WDATA: SIGNAL IS "xilinx.com:interface:aximm:1.0 m_axi_DATA_INPUT WDATA";
  ATTRIBUTE X_INTERFACE_INFO OF m_axi_DATA_INPUT_AWREADY: SIGNAL IS "xilinx.com:interface:aximm:1.0 m_axi_DATA_INPUT AWREADY";
  ATTRIBUTE X_INTERFACE_INFO OF m_axi_DATA_INPUT_AWVALID: SIGNAL IS "xilinx.com:interface:aximm:1.0 m_axi_DATA_INPUT AWVALID";
  ATTRIBUTE X_INTERFACE_INFO OF m_axi_DATA_INPUT_AWQOS: SIGNAL IS "xilinx.com:interface:aximm:1.0 m_axi_DATA_INPUT AWQOS";
  ATTRIBUTE X_INTERFACE_INFO OF m_axi_DATA_INPUT_AWPROT: SIGNAL IS "xilinx.com:interface:aximm:1.0 m_axi_DATA_INPUT AWPROT";
  ATTRIBUTE X_INTERFACE_INFO OF m_axi_DATA_INPUT_AWCACHE: SIGNAL IS "xilinx.com:interface:aximm:1.0 m_axi_DATA_INPUT AWCACHE";
  ATTRIBUTE X_INTERFACE_INFO OF m_axi_DATA_INPUT_AWREGION: SIGNAL IS "xilinx.com:interface:aximm:1.0 m_axi_DATA_INPUT AWREGION";
  ATTRIBUTE X_INTERFACE_INFO OF m_axi_DATA_INPUT_AWLOCK: SIGNAL IS "xilinx.com:interface:aximm:1.0 m_axi_DATA_INPUT AWLOCK";
  ATTRIBUTE X_INTERFACE_INFO OF m_axi_DATA_INPUT_AWBURST: SIGNAL IS "xilinx.com:interface:aximm:1.0 m_axi_DATA_INPUT AWBURST";
  ATTRIBUTE X_INTERFACE_INFO OF m_axi_DATA_INPUT_AWSIZE: SIGNAL IS "xilinx.com:interface:aximm:1.0 m_axi_DATA_INPUT AWSIZE";
  ATTRIBUTE X_INTERFACE_INFO OF m_axi_DATA_INPUT_AWLEN: SIGNAL IS "xilinx.com:interface:aximm:1.0 m_axi_DATA_INPUT AWLEN";
  ATTRIBUTE X_INTERFACE_PARAMETER OF m_axi_DATA_INPUT_AWADDR: SIGNAL IS "XIL_INTERFACENAME m_axi_DATA_INPUT, ADDR_WIDTH 32, MAX_BURST_LENGTH 256, NUM_READ_OUTSTANDING 16, NUM_WRITE_OUTSTANDING 16, MAX_READ_BURST_LENGTH 16, MAX_WRITE_BURST_LENGTH 16, PROTOCOL AXI4, READ_WRITE_MODE READ_WRITE, HAS_BURST 0, SUPPORTS_NARROW_BURST 0, DATA_WIDTH 32, FREQ_HZ 100000000, ID_WIDTH 0, AWUSER_WIDTH 0, ARUSER_WIDTH 0, WUSER_WIDTH 0, RUSER_WIDTH 0, BUSER_WIDTH 0, HAS_LOCK 1, HAS_PROT 1, HAS_CACHE 1, HAS_QOS 1, HAS_REGION 1, HAS_WSTRB 1, HAS_BRESP 1, HAS_RRESP 1, PHASE 0.000, CLK_D" & 
"OMAIN design_1_processing_system7_0_1_FCLK_CLK0, NUM_READ_THREADS 1, NUM_WRITE_THREADS 1, RUSER_BITS_PER_BYTE 0, WUSER_BITS_PER_BYTE 0";
  ATTRIBUTE X_INTERFACE_INFO OF m_axi_DATA_INPUT_AWADDR: SIGNAL IS "xilinx.com:interface:aximm:1.0 m_axi_DATA_INPUT AWADDR";
  ATTRIBUTE X_INTERFACE_PARAMETER OF interrupt: SIGNAL IS "XIL_INTERFACENAME interrupt, SENSITIVITY LEVEL_HIGH, LAYERED_METADATA xilinx.com:interface:datatypes:1.0 {INTERRUPT {datatype {name {attribs {resolve_type immediate dependency {} format string minimum {} maximum {}} value {}} bitwidth {attribs {resolve_type immediate dependency {} format long minimum {} maximum {}} value 1} bitoffset {attribs {resolve_type immediate dependency {} format long minimum {} maximum {}} value 0}}}}, PortWidth 1";
  ATTRIBUTE X_INTERFACE_INFO OF interrupt: SIGNAL IS "xilinx.com:signal:interrupt:1.0 interrupt INTERRUPT";
  ATTRIBUTE X_INTERFACE_PARAMETER OF ap_rst_n: SIGNAL IS "XIL_INTERFACENAME ap_rst_n, POLARITY ACTIVE_LOW, LAYERED_METADATA xilinx.com:interface:datatypes:1.0 {RST {datatype {name {attribs {resolve_type immediate dependency {} format string minimum {} maximum {}} value {}} bitwidth {attribs {resolve_type immediate dependency {} format long minimum {} maximum {}} value 1} bitoffset {attribs {resolve_type immediate dependency {} format long minimum {} maximum {}} value 0}}}}";
  ATTRIBUTE X_INTERFACE_INFO OF ap_rst_n: SIGNAL IS "xilinx.com:signal:reset:1.0 ap_rst_n RST";
  ATTRIBUTE X_INTERFACE_PARAMETER OF ap_clk: SIGNAL IS "XIL_INTERFACENAME ap_clk, ASSOCIATED_BUSIF s_axi_CTL:m_axi_DATA_INPUT:m_axi_DATA_WEIGHT:m_axi_DATA_BIAS:m_axi_DATA_OUTPUT, ASSOCIATED_RESET ap_rst_n, LAYERED_METADATA xilinx.com:interface:datatypes:1.0 {CLK {datatype {name {attribs {resolve_type immediate dependency {} format string minimum {} maximum {}} value {}} bitwidth {attribs {resolve_type immediate dependency {} format long minimum {} maximum {}} value 1} bitoffset {attribs {resolve_type immediate dependency {} format long minimum {} max" & 
"imum {}} value 0}}}}, FREQ_HZ 100000000, PHASE 0.000, CLK_DOMAIN design_1_processing_system7_0_1_FCLK_CLK0";
  ATTRIBUTE X_INTERFACE_INFO OF ap_clk: SIGNAL IS "xilinx.com:signal:clock:1.0 ap_clk CLK";
  ATTRIBUTE X_INTERFACE_INFO OF s_axi_CTL_RREADY: SIGNAL IS "xilinx.com:interface:aximm:1.0 s_axi_CTL RREADY";
  ATTRIBUTE X_INTERFACE_INFO OF s_axi_CTL_RVALID: SIGNAL IS "xilinx.com:interface:aximm:1.0 s_axi_CTL RVALID";
  ATTRIBUTE X_INTERFACE_INFO OF s_axi_CTL_RRESP: SIGNAL IS "xilinx.com:interface:aximm:1.0 s_axi_CTL RRESP";
  ATTRIBUTE X_INTERFACE_INFO OF s_axi_CTL_RDATA: SIGNAL IS "xilinx.com:interface:aximm:1.0 s_axi_CTL RDATA";
  ATTRIBUTE X_INTERFACE_INFO OF s_axi_CTL_ARREADY: SIGNAL IS "xilinx.com:interface:aximm:1.0 s_axi_CTL ARREADY";
  ATTRIBUTE X_INTERFACE_INFO OF s_axi_CTL_ARVALID: SIGNAL IS "xilinx.com:interface:aximm:1.0 s_axi_CTL ARVALID";
  ATTRIBUTE X_INTERFACE_INFO OF s_axi_CTL_ARADDR: SIGNAL IS "xilinx.com:interface:aximm:1.0 s_axi_CTL ARADDR";
  ATTRIBUTE X_INTERFACE_INFO OF s_axi_CTL_BREADY: SIGNAL IS "xilinx.com:interface:aximm:1.0 s_axi_CTL BREADY";
  ATTRIBUTE X_INTERFACE_INFO OF s_axi_CTL_BVALID: SIGNAL IS "xilinx.com:interface:aximm:1.0 s_axi_CTL BVALID";
  ATTRIBUTE X_INTERFACE_INFO OF s_axi_CTL_BRESP: SIGNAL IS "xilinx.com:interface:aximm:1.0 s_axi_CTL BRESP";
  ATTRIBUTE X_INTERFACE_INFO OF s_axi_CTL_WREADY: SIGNAL IS "xilinx.com:interface:aximm:1.0 s_axi_CTL WREADY";
  ATTRIBUTE X_INTERFACE_INFO OF s_axi_CTL_WVALID: SIGNAL IS "xilinx.com:interface:aximm:1.0 s_axi_CTL WVALID";
  ATTRIBUTE X_INTERFACE_INFO OF s_axi_CTL_WSTRB: SIGNAL IS "xilinx.com:interface:aximm:1.0 s_axi_CTL WSTRB";
  ATTRIBUTE X_INTERFACE_INFO OF s_axi_CTL_WDATA: SIGNAL IS "xilinx.com:interface:aximm:1.0 s_axi_CTL WDATA";
  ATTRIBUTE X_INTERFACE_INFO OF s_axi_CTL_AWREADY: SIGNAL IS "xilinx.com:interface:aximm:1.0 s_axi_CTL AWREADY";
  ATTRIBUTE X_INTERFACE_INFO OF s_axi_CTL_AWVALID: SIGNAL IS "xilinx.com:interface:aximm:1.0 s_axi_CTL AWVALID";
  ATTRIBUTE X_INTERFACE_PARAMETER OF s_axi_CTL_AWADDR: SIGNAL IS "XIL_INTERFACENAME s_axi_CTL, ADDR_WIDTH 7, DATA_WIDTH 32, PROTOCOL AXI4LITE, READ_WRITE_MODE READ_WRITE, LAYERED_METADATA xilinx.com:interface:datatypes:1.0 {CLK {datatype {name {attribs {resolve_type immediate dependency {} format string minimum {} maximum {}} value {}} bitwidth {attribs {resolve_type immediate dependency {} format long minimum {} maximum {}} value 1} bitoffset {attribs {resolve_type immediate dependency {} format long minimum {} maximum {}} value 0}}}}, FREQ_HZ 100000000, ID_W" & 
"IDTH 0, AWUSER_WIDTH 0, ARUSER_WIDTH 0, WUSER_WIDTH 0, RUSER_WIDTH 0, BUSER_WIDTH 0, HAS_BURST 0, HAS_LOCK 0, HAS_PROT 0, HAS_CACHE 0, HAS_QOS 0, HAS_REGION 0, HAS_WSTRB 1, HAS_BRESP 1, HAS_RRESP 1, SUPPORTS_NARROW_BURST 0, NUM_READ_OUTSTANDING 1, NUM_WRITE_OUTSTANDING 1, MAX_BURST_LENGTH 1, PHASE 0.000, CLK_DOMAIN design_1_processing_system7_0_1_FCLK_CLK0, NUM_READ_THREADS 1, NUM_WRITE_THREADS 1, RUSER_BITS_PER_BYTE 0, WUSER_BITS_PER_BYTE 0";
  ATTRIBUTE X_INTERFACE_INFO OF s_axi_CTL_AWADDR: SIGNAL IS "xilinx.com:interface:aximm:1.0 s_axi_CTL AWADDR";
BEGIN
  U0 : conv1
    GENERIC MAP (
      C_S_AXI_CTL_ADDR_WIDTH => 7,
      C_S_AXI_CTL_DATA_WIDTH => 32,
      C_M_AXI_DATA_INPUT_ID_WIDTH => 1,
      C_M_AXI_DATA_INPUT_ADDR_WIDTH => 32,
      C_M_AXI_DATA_INPUT_DATA_WIDTH => 32,
      C_M_AXI_DATA_INPUT_AWUSER_WIDTH => 1,
      C_M_AXI_DATA_INPUT_ARUSER_WIDTH => 1,
      C_M_AXI_DATA_INPUT_WUSER_WIDTH => 1,
      C_M_AXI_DATA_INPUT_RUSER_WIDTH => 1,
      C_M_AXI_DATA_INPUT_BUSER_WIDTH => 1,
      C_M_AXI_DATA_INPUT_USER_VALUE => 0,
      C_M_AXI_DATA_INPUT_PROT_VALUE => 0,
      C_M_AXI_DATA_INPUT_CACHE_VALUE => 3,
      C_M_AXI_DATA_WEIGHT_ID_WIDTH => 1,
      C_M_AXI_DATA_WEIGHT_ADDR_WIDTH => 32,
      C_M_AXI_DATA_WEIGHT_DATA_WIDTH => 32,
      C_M_AXI_DATA_WEIGHT_AWUSER_WIDTH => 1,
      C_M_AXI_DATA_WEIGHT_ARUSER_WIDTH => 1,
      C_M_AXI_DATA_WEIGHT_WUSER_WIDTH => 1,
      C_M_AXI_DATA_WEIGHT_RUSER_WIDTH => 1,
      C_M_AXI_DATA_WEIGHT_BUSER_WIDTH => 1,
      C_M_AXI_DATA_WEIGHT_USER_VALUE => 0,
      C_M_AXI_DATA_WEIGHT_PROT_VALUE => 0,
      C_M_AXI_DATA_WEIGHT_CACHE_VALUE => 3,
      C_M_AXI_DATA_BIAS_ID_WIDTH => 1,
      C_M_AXI_DATA_BIAS_ADDR_WIDTH => 32,
      C_M_AXI_DATA_BIAS_DATA_WIDTH => 32,
      C_M_AXI_DATA_BIAS_AWUSER_WIDTH => 1,
      C_M_AXI_DATA_BIAS_ARUSER_WIDTH => 1,
      C_M_AXI_DATA_BIAS_WUSER_WIDTH => 1,
      C_M_AXI_DATA_BIAS_RUSER_WIDTH => 1,
      C_M_AXI_DATA_BIAS_BUSER_WIDTH => 1,
      C_M_AXI_DATA_BIAS_USER_VALUE => 0,
      C_M_AXI_DATA_BIAS_PROT_VALUE => 0,
      C_M_AXI_DATA_BIAS_CACHE_VALUE => 3,
      C_M_AXI_DATA_OUTPUT_ID_WIDTH => 1,
      C_M_AXI_DATA_OUTPUT_ADDR_WIDTH => 32,
      C_M_AXI_DATA_OUTPUT_DATA_WIDTH => 32,
      C_M_AXI_DATA_OUTPUT_AWUSER_WIDTH => 1,
      C_M_AXI_DATA_OUTPUT_ARUSER_WIDTH => 1,
      C_M_AXI_DATA_OUTPUT_WUSER_WIDTH => 1,
      C_M_AXI_DATA_OUTPUT_RUSER_WIDTH => 1,
      C_M_AXI_DATA_OUTPUT_BUSER_WIDTH => 1,
      C_M_AXI_DATA_OUTPUT_USER_VALUE => 0,
      C_M_AXI_DATA_OUTPUT_PROT_VALUE => 0,
      C_M_AXI_DATA_OUTPUT_CACHE_VALUE => 3
    )
    PORT MAP (
      s_axi_CTL_AWADDR => s_axi_CTL_AWADDR,
      s_axi_CTL_AWVALID => s_axi_CTL_AWVALID,
      s_axi_CTL_AWREADY => s_axi_CTL_AWREADY,
      s_axi_CTL_WDATA => s_axi_CTL_WDATA,
      s_axi_CTL_WSTRB => s_axi_CTL_WSTRB,
      s_axi_CTL_WVALID => s_axi_CTL_WVALID,
      s_axi_CTL_WREADY => s_axi_CTL_WREADY,
      s_axi_CTL_BRESP => s_axi_CTL_BRESP,
      s_axi_CTL_BVALID => s_axi_CTL_BVALID,
      s_axi_CTL_BREADY => s_axi_CTL_BREADY,
      s_axi_CTL_ARADDR => s_axi_CTL_ARADDR,
      s_axi_CTL_ARVALID => s_axi_CTL_ARVALID,
      s_axi_CTL_ARREADY => s_axi_CTL_ARREADY,
      s_axi_CTL_RDATA => s_axi_CTL_RDATA,
      s_axi_CTL_RRESP => s_axi_CTL_RRESP,
      s_axi_CTL_RVALID => s_axi_CTL_RVALID,
      s_axi_CTL_RREADY => s_axi_CTL_RREADY,
      ap_clk => ap_clk,
      ap_rst_n => ap_rst_n,
      interrupt => interrupt,
      m_axi_DATA_INPUT_AWADDR => m_axi_DATA_INPUT_AWADDR,
      m_axi_DATA_INPUT_AWLEN => m_axi_DATA_INPUT_AWLEN,
      m_axi_DATA_INPUT_AWSIZE => m_axi_DATA_INPUT_AWSIZE,
      m_axi_DATA_INPUT_AWBURST => m_axi_DATA_INPUT_AWBURST,
      m_axi_DATA_INPUT_AWLOCK => m_axi_DATA_INPUT_AWLOCK,
      m_axi_DATA_INPUT_AWREGION => m_axi_DATA_INPUT_AWREGION,
      m_axi_DATA_INPUT_AWCACHE => m_axi_DATA_INPUT_AWCACHE,
      m_axi_DATA_INPUT_AWPROT => m_axi_DATA_INPUT_AWPROT,
      m_axi_DATA_INPUT_AWQOS => m_axi_DATA_INPUT_AWQOS,
      m_axi_DATA_INPUT_AWVALID => m_axi_DATA_INPUT_AWVALID,
      m_axi_DATA_INPUT_AWREADY => m_axi_DATA_INPUT_AWREADY,
      m_axi_DATA_INPUT_WDATA => m_axi_DATA_INPUT_WDATA,
      m_axi_DATA_INPUT_WSTRB => m_axi_DATA_INPUT_WSTRB,
      m_axi_DATA_INPUT_WLAST => m_axi_DATA_INPUT_WLAST,
      m_axi_DATA_INPUT_WVALID => m_axi_DATA_INPUT_WVALID,
      m_axi_DATA_INPUT_WREADY => m_axi_DATA_INPUT_WREADY,
      m_axi_DATA_INPUT_BID => STD_LOGIC_VECTOR(TO_UNSIGNED(0, 1)),
      m_axi_DATA_INPUT_BRESP => m_axi_DATA_INPUT_BRESP,
      m_axi_DATA_INPUT_BUSER => STD_LOGIC_VECTOR(TO_UNSIGNED(0, 1)),
      m_axi_DATA_INPUT_BVALID => m_axi_DATA_INPUT_BVALID,
      m_axi_DATA_INPUT_BREADY => m_axi_DATA_INPUT_BREADY,
      m_axi_DATA_INPUT_ARADDR => m_axi_DATA_INPUT_ARADDR,
      m_axi_DATA_INPUT_ARLEN => m_axi_DATA_INPUT_ARLEN,
      m_axi_DATA_INPUT_ARSIZE => m_axi_DATA_INPUT_ARSIZE,
      m_axi_DATA_INPUT_ARBURST => m_axi_DATA_INPUT_ARBURST,
      m_axi_DATA_INPUT_ARLOCK => m_axi_DATA_INPUT_ARLOCK,
      m_axi_DATA_INPUT_ARREGION => m_axi_DATA_INPUT_ARREGION,
      m_axi_DATA_INPUT_ARCACHE => m_axi_DATA_INPUT_ARCACHE,
      m_axi_DATA_INPUT_ARPROT => m_axi_DATA_INPUT_ARPROT,
      m_axi_DATA_INPUT_ARQOS => m_axi_DATA_INPUT_ARQOS,
      m_axi_DATA_INPUT_ARVALID => m_axi_DATA_INPUT_ARVALID,
      m_axi_DATA_INPUT_ARREADY => m_axi_DATA_INPUT_ARREADY,
      m_axi_DATA_INPUT_RID => STD_LOGIC_VECTOR(TO_UNSIGNED(0, 1)),
      m_axi_DATA_INPUT_RDATA => m_axi_DATA_INPUT_RDATA,
      m_axi_DATA_INPUT_RRESP => m_axi_DATA_INPUT_RRESP,
      m_axi_DATA_INPUT_RLAST => m_axi_DATA_INPUT_RLAST,
      m_axi_DATA_INPUT_RUSER => STD_LOGIC_VECTOR(TO_UNSIGNED(0, 1)),
      m_axi_DATA_INPUT_RVALID => m_axi_DATA_INPUT_RVALID,
      m_axi_DATA_INPUT_RREADY => m_axi_DATA_INPUT_RREADY,
      m_axi_DATA_WEIGHT_AWADDR => m_axi_DATA_WEIGHT_AWADDR,
      m_axi_DATA_WEIGHT_AWLEN => m_axi_DATA_WEIGHT_AWLEN,
      m_axi_DATA_WEIGHT_AWSIZE => m_axi_DATA_WEIGHT_AWSIZE,
      m_axi_DATA_WEIGHT_AWBURST => m_axi_DATA_WEIGHT_AWBURST,
      m_axi_DATA_WEIGHT_AWLOCK => m_axi_DATA_WEIGHT_AWLOCK,
      m_axi_DATA_WEIGHT_AWREGION => m_axi_DATA_WEIGHT_AWREGION,
      m_axi_DATA_WEIGHT_AWCACHE => m_axi_DATA_WEIGHT_AWCACHE,
      m_axi_DATA_WEIGHT_AWPROT => m_axi_DATA_WEIGHT_AWPROT,
      m_axi_DATA_WEIGHT_AWQOS => m_axi_DATA_WEIGHT_AWQOS,
      m_axi_DATA_WEIGHT_AWVALID => m_axi_DATA_WEIGHT_AWVALID,
      m_axi_DATA_WEIGHT_AWREADY => m_axi_DATA_WEIGHT_AWREADY,
      m_axi_DATA_WEIGHT_WDATA => m_axi_DATA_WEIGHT_WDATA,
      m_axi_DATA_WEIGHT_WSTRB => m_axi_DATA_WEIGHT_WSTRB,
      m_axi_DATA_WEIGHT_WLAST => m_axi_DATA_WEIGHT_WLAST,
      m_axi_DATA_WEIGHT_WVALID => m_axi_DATA_WEIGHT_WVALID,
      m_axi_DATA_WEIGHT_WREADY => m_axi_DATA_WEIGHT_WREADY,
      m_axi_DATA_WEIGHT_BID => STD_LOGIC_VECTOR(TO_UNSIGNED(0, 1)),
      m_axi_DATA_WEIGHT_BRESP => m_axi_DATA_WEIGHT_BRESP,
      m_axi_DATA_WEIGHT_BUSER => STD_LOGIC_VECTOR(TO_UNSIGNED(0, 1)),
      m_axi_DATA_WEIGHT_BVALID => m_axi_DATA_WEIGHT_BVALID,
      m_axi_DATA_WEIGHT_BREADY => m_axi_DATA_WEIGHT_BREADY,
      m_axi_DATA_WEIGHT_ARADDR => m_axi_DATA_WEIGHT_ARADDR,
      m_axi_DATA_WEIGHT_ARLEN => m_axi_DATA_WEIGHT_ARLEN,
      m_axi_DATA_WEIGHT_ARSIZE => m_axi_DATA_WEIGHT_ARSIZE,
      m_axi_DATA_WEIGHT_ARBURST => m_axi_DATA_WEIGHT_ARBURST,
      m_axi_DATA_WEIGHT_ARLOCK => m_axi_DATA_WEIGHT_ARLOCK,
      m_axi_DATA_WEIGHT_ARREGION => m_axi_DATA_WEIGHT_ARREGION,
      m_axi_DATA_WEIGHT_ARCACHE => m_axi_DATA_WEIGHT_ARCACHE,
      m_axi_DATA_WEIGHT_ARPROT => m_axi_DATA_WEIGHT_ARPROT,
      m_axi_DATA_WEIGHT_ARQOS => m_axi_DATA_WEIGHT_ARQOS,
      m_axi_DATA_WEIGHT_ARVALID => m_axi_DATA_WEIGHT_ARVALID,
      m_axi_DATA_WEIGHT_ARREADY => m_axi_DATA_WEIGHT_ARREADY,
      m_axi_DATA_WEIGHT_RID => STD_LOGIC_VECTOR(TO_UNSIGNED(0, 1)),
      m_axi_DATA_WEIGHT_RDATA => m_axi_DATA_WEIGHT_RDATA,
      m_axi_DATA_WEIGHT_RRESP => m_axi_DATA_WEIGHT_RRESP,
      m_axi_DATA_WEIGHT_RLAST => m_axi_DATA_WEIGHT_RLAST,
      m_axi_DATA_WEIGHT_RUSER => STD_LOGIC_VECTOR(TO_UNSIGNED(0, 1)),
      m_axi_DATA_WEIGHT_RVALID => m_axi_DATA_WEIGHT_RVALID,
      m_axi_DATA_WEIGHT_RREADY => m_axi_DATA_WEIGHT_RREADY,
      m_axi_DATA_BIAS_AWADDR => m_axi_DATA_BIAS_AWADDR,
      m_axi_DATA_BIAS_AWLEN => m_axi_DATA_BIAS_AWLEN,
      m_axi_DATA_BIAS_AWSIZE => m_axi_DATA_BIAS_AWSIZE,
      m_axi_DATA_BIAS_AWBURST => m_axi_DATA_BIAS_AWBURST,
      m_axi_DATA_BIAS_AWLOCK => m_axi_DATA_BIAS_AWLOCK,
      m_axi_DATA_BIAS_AWREGION => m_axi_DATA_BIAS_AWREGION,
      m_axi_DATA_BIAS_AWCACHE => m_axi_DATA_BIAS_AWCACHE,
      m_axi_DATA_BIAS_AWPROT => m_axi_DATA_BIAS_AWPROT,
      m_axi_DATA_BIAS_AWQOS => m_axi_DATA_BIAS_AWQOS,
      m_axi_DATA_BIAS_AWVALID => m_axi_DATA_BIAS_AWVALID,
      m_axi_DATA_BIAS_AWREADY => m_axi_DATA_BIAS_AWREADY,
      m_axi_DATA_BIAS_WDATA => m_axi_DATA_BIAS_WDATA,
      m_axi_DATA_BIAS_WSTRB => m_axi_DATA_BIAS_WSTRB,
      m_axi_DATA_BIAS_WLAST => m_axi_DATA_BIAS_WLAST,
      m_axi_DATA_BIAS_WVALID => m_axi_DATA_BIAS_WVALID,
      m_axi_DATA_BIAS_WREADY => m_axi_DATA_BIAS_WREADY,
      m_axi_DATA_BIAS_BID => STD_LOGIC_VECTOR(TO_UNSIGNED(0, 1)),
      m_axi_DATA_BIAS_BRESP => m_axi_DATA_BIAS_BRESP,
      m_axi_DATA_BIAS_BUSER => STD_LOGIC_VECTOR(TO_UNSIGNED(0, 1)),
      m_axi_DATA_BIAS_BVALID => m_axi_DATA_BIAS_BVALID,
      m_axi_DATA_BIAS_BREADY => m_axi_DATA_BIAS_BREADY,
      m_axi_DATA_BIAS_ARADDR => m_axi_DATA_BIAS_ARADDR,
      m_axi_DATA_BIAS_ARLEN => m_axi_DATA_BIAS_ARLEN,
      m_axi_DATA_BIAS_ARSIZE => m_axi_DATA_BIAS_ARSIZE,
      m_axi_DATA_BIAS_ARBURST => m_axi_DATA_BIAS_ARBURST,
      m_axi_DATA_BIAS_ARLOCK => m_axi_DATA_BIAS_ARLOCK,
      m_axi_DATA_BIAS_ARREGION => m_axi_DATA_BIAS_ARREGION,
      m_axi_DATA_BIAS_ARCACHE => m_axi_DATA_BIAS_ARCACHE,
      m_axi_DATA_BIAS_ARPROT => m_axi_DATA_BIAS_ARPROT,
      m_axi_DATA_BIAS_ARQOS => m_axi_DATA_BIAS_ARQOS,
      m_axi_DATA_BIAS_ARVALID => m_axi_DATA_BIAS_ARVALID,
      m_axi_DATA_BIAS_ARREADY => m_axi_DATA_BIAS_ARREADY,
      m_axi_DATA_BIAS_RID => STD_LOGIC_VECTOR(TO_UNSIGNED(0, 1)),
      m_axi_DATA_BIAS_RDATA => m_axi_DATA_BIAS_RDATA,
      m_axi_DATA_BIAS_RRESP => m_axi_DATA_BIAS_RRESP,
      m_axi_DATA_BIAS_RLAST => m_axi_DATA_BIAS_RLAST,
      m_axi_DATA_BIAS_RUSER => STD_LOGIC_VECTOR(TO_UNSIGNED(0, 1)),
      m_axi_DATA_BIAS_RVALID => m_axi_DATA_BIAS_RVALID,
      m_axi_DATA_BIAS_RREADY => m_axi_DATA_BIAS_RREADY,
      m_axi_DATA_OUTPUT_AWADDR => m_axi_DATA_OUTPUT_AWADDR,
      m_axi_DATA_OUTPUT_AWLEN => m_axi_DATA_OUTPUT_AWLEN,
      m_axi_DATA_OUTPUT_AWSIZE => m_axi_DATA_OUTPUT_AWSIZE,
      m_axi_DATA_OUTPUT_AWBURST => m_axi_DATA_OUTPUT_AWBURST,
      m_axi_DATA_OUTPUT_AWLOCK => m_axi_DATA_OUTPUT_AWLOCK,
      m_axi_DATA_OUTPUT_AWREGION => m_axi_DATA_OUTPUT_AWREGION,
      m_axi_DATA_OUTPUT_AWCACHE => m_axi_DATA_OUTPUT_AWCACHE,
      m_axi_DATA_OUTPUT_AWPROT => m_axi_DATA_OUTPUT_AWPROT,
      m_axi_DATA_OUTPUT_AWQOS => m_axi_DATA_OUTPUT_AWQOS,
      m_axi_DATA_OUTPUT_AWVALID => m_axi_DATA_OUTPUT_AWVALID,
      m_axi_DATA_OUTPUT_AWREADY => m_axi_DATA_OUTPUT_AWREADY,
      m_axi_DATA_OUTPUT_WDATA => m_axi_DATA_OUTPUT_WDATA,
      m_axi_DATA_OUTPUT_WSTRB => m_axi_DATA_OUTPUT_WSTRB,
      m_axi_DATA_OUTPUT_WLAST => m_axi_DATA_OUTPUT_WLAST,
      m_axi_DATA_OUTPUT_WVALID => m_axi_DATA_OUTPUT_WVALID,
      m_axi_DATA_OUTPUT_WREADY => m_axi_DATA_OUTPUT_WREADY,
      m_axi_DATA_OUTPUT_BID => STD_LOGIC_VECTOR(TO_UNSIGNED(0, 1)),
      m_axi_DATA_OUTPUT_BRESP => m_axi_DATA_OUTPUT_BRESP,
      m_axi_DATA_OUTPUT_BUSER => STD_LOGIC_VECTOR(TO_UNSIGNED(0, 1)),
      m_axi_DATA_OUTPUT_BVALID => m_axi_DATA_OUTPUT_BVALID,
      m_axi_DATA_OUTPUT_BREADY => m_axi_DATA_OUTPUT_BREADY,
      m_axi_DATA_OUTPUT_ARADDR => m_axi_DATA_OUTPUT_ARADDR,
      m_axi_DATA_OUTPUT_ARLEN => m_axi_DATA_OUTPUT_ARLEN,
      m_axi_DATA_OUTPUT_ARSIZE => m_axi_DATA_OUTPUT_ARSIZE,
      m_axi_DATA_OUTPUT_ARBURST => m_axi_DATA_OUTPUT_ARBURST,
      m_axi_DATA_OUTPUT_ARLOCK => m_axi_DATA_OUTPUT_ARLOCK,
      m_axi_DATA_OUTPUT_ARREGION => m_axi_DATA_OUTPUT_ARREGION,
      m_axi_DATA_OUTPUT_ARCACHE => m_axi_DATA_OUTPUT_ARCACHE,
      m_axi_DATA_OUTPUT_ARPROT => m_axi_DATA_OUTPUT_ARPROT,
      m_axi_DATA_OUTPUT_ARQOS => m_axi_DATA_OUTPUT_ARQOS,
      m_axi_DATA_OUTPUT_ARVALID => m_axi_DATA_OUTPUT_ARVALID,
      m_axi_DATA_OUTPUT_ARREADY => m_axi_DATA_OUTPUT_ARREADY,
      m_axi_DATA_OUTPUT_RID => STD_LOGIC_VECTOR(TO_UNSIGNED(0, 1)),
      m_axi_DATA_OUTPUT_RDATA => m_axi_DATA_OUTPUT_RDATA,
      m_axi_DATA_OUTPUT_RRESP => m_axi_DATA_OUTPUT_RRESP,
      m_axi_DATA_OUTPUT_RLAST => m_axi_DATA_OUTPUT_RLAST,
      m_axi_DATA_OUTPUT_RUSER => STD_LOGIC_VECTOR(TO_UNSIGNED(0, 1)),
      m_axi_DATA_OUTPUT_RVALID => m_axi_DATA_OUTPUT_RVALID,
      m_axi_DATA_OUTPUT_RREADY => m_axi_DATA_OUTPUT_RREADY
    );
END design_1_conv1_0_1_arch;
